{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 15e9dddf6fb24f80c0cd","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/vuex/dist/vuex.esm.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/base/task.js","webpack:///./src/store/key.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/process/browser.js","webpack:///src/App.vue","webpack:///src/components/Home.vue","webpack:///src/components/Settings.vue","webpack:///src/components/Clipboard.vue","webpack:///src/components/Firebase.vue","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///src/components/Tasks.vue","webpack:///src/components/Tags.vue","webpack:///src/components/Task.vue","webpack:///src/components/DetailedTask.vue","webpack:///src/components/Modal.vue","webpack:///./src/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./src/App.vue","webpack:///./src/App.vue?c768","webpack:///./src/App.vue?d72f","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./src/components/Home.vue","webpack:///./src/components/Home.vue?5f04","webpack:///./src/components/Home.vue?6cf7","webpack:///./src/components/Settings.vue","webpack:///./src/components/Settings.vue?5b92","webpack:///./src/components/Settings.vue?012c","webpack:///./src/components/Settings.vue?638e","webpack:///./src/components/Clipboard.vue","webpack:///./src/components/Clipboard.vue?6e3f","webpack:///./src/components/Clipboard.vue?0432","webpack:///./src/components/Clipboard.vue?d975","webpack:///./src/components/Firebase.vue","webpack:///./src/components/Firebase.vue?b598","webpack:///./src/components/Firebase.vue?dc6b","webpack:///./src/components/Firebase.vue?581c","webpack:///./src/components/Home.vue?b38b","webpack:///./src/store/store.js","webpack:///./src/store/modules/storage.js","webpack:///./src/store/modules/tasks.js","webpack:///./src/firebaseConfig.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./src/store/modules/taskFiltering.js","webpack:///./src/store/modules/settings.js","webpack:///./src/store/modules/clipboard.js","webpack:///./src/store/modules/topRightTabs.js","webpack:///./node_modules/lodash.debounce/index.js","webpack:///./node_modules/babel-core/lib/transformation/file/options/config.js","webpack:///./src/App.vue?0d48","webpack:///./src/components/Tasks.vue","webpack:///./src/components/Tasks.vue?505a","webpack:///./src/components/Tags.vue","webpack:///./src/components/Tags.vue?c67c","webpack:///./src/components/Tags.vue?4465","webpack:///./src/components/Tags.vue?6dbc","webpack:///./src/components/Task.vue","webpack:///./src/components/Task.vue?eaff","webpack:///./src/components/Task.vue?986a","webpack:///./src/components/DetailedTask.vue","webpack:///./src/components/DetailedTask.vue?031f","webpack:///./src/components/DetailedTask.vue?0399","webpack:///./src/components/DetailedTask.vue?5b3c","webpack:///./src/components/Task.vue?213d","webpack:///./src/assets/bullet.svg","webpack:///./src/components/Modal.vue","webpack:///./src/components/Modal.vue?33e2","webpack:///./src/components/Modal.vue?ea5b","webpack:///./src/components/Modal.vue?4505","webpack:///./src/base/useful_functions.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","type","default","options","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","existing","beforeCreate","_injectStyles","h","concat","__webpack_exports__","devtoolPlugin","store","devtoolHook","_devtoolHook","emit","on","targetState","replaceState","subscribe","mutation","state","forEachValue","obj","fn","keys","forEach","key","isObject","isPromise","val","then","update","path","targetModule","newModule","getChild","genericSubscribe","subs","indexOf","push","splice","resetStore","hot","_actions","create","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","root","resetStoreVM","oldVm","_vm","getters","wrappedGetters","computed","silent","Vue","config","data","$$state","strict","enableStrictMode","_withCommit","_data","nextTick","$destroy","rootState","isRoot","length","namespace","getNamespace","namespaced","parentState","getNestedState","slice","moduleName","set","local","makeLocalContext","forEachMutation","registerMutation","forEachAction","action","handler","registerAction","forEachGetter","registerGetter","forEachChild","child","noNamespace","dispatch","_type","_payload","_options","args","unifyObjectStyle","payload","commit","defineProperties","makeLocalGetters","gettersProxy","splitPos","localType","cb","res","rootGetters","Promise","resolve","catch","err","rawGetter","$watch","deep","sync","reduce","install","_Vue","applyMixin","normalizeMap","map","Array","isArray","normalizeNamespace","charAt","getModuleByNamespace","helper","mapMutations","mapGetters","mapActions","vuexInit","$options","$store","Number","version","split","mixin","_init","init","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","addChild","removeChild","actions","mutations","ModuleCollection","rawRootModule","register","this$1","rawChildModule","unregister","Store","plugins","_committing","_actionSubscribers","_subscribers","_watcherVM","ref","plugin","devtools","prototypeAccessors","v","entry","sub","all","subscribeAction","watch","registerModule","preserveState","unregisterModule","delete","hotUpdate","newOptions","committing","mapState","states","vuex","len","arguments","apply","createNamespacedHelpers","bind","index_esm","cssWithMappingToString","item","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","source","sourceRoot","join","sourceMap","unescape","encodeURIComponent","JSON","stringify","list","toString","mediaQuery","alreadyImportedModules","id","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","createStyleElement","styleElement","document","createElement","head","appendChild","remove","querySelector","ssrIdKey","isProduction","noop","parentNode","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","css","media","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","hasDocument","DEBUG","Error","listToStyles","getElementsByTagName","navigator","test","userAgent","toLowerCase","parentId","_isProduction","newList","mayRemove","textStore","replacement","filter","Boolean","g","Function","eval","e","TaskObject","description","complete","author","link","tasks","bold","getTagsInString","str","filters","active","task","completed","global","setImmediate","isUndef","undefined","isDef","isTrue","isFalse","isPrimitive","value","isPlainObject","_toString","isRegExp","isValidArrayIndex","parseFloat","String","Math","floor","isFinite","toNumber","isNaN","makeMap","expectsLowerCase","arr","hasOwn","cached","cache","polyfillBind","ctx","boundFn","a","_length","nativeBind","toArray","start","ret","extend","to","_from","toObject","b","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","once","called","isReserved","charCodeAt","def","writable","parsePath","bailRE","segments","isNative","Ctor","pushTarget","_target","Dep","target","targetStack","popTarget","pop","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","children","text","elm","componentOptions","asyncFactory","ns","isStatic","isComment","fnContext","fnOptions","fnScopeId","isCloned","toggleObserving","shouldObserve","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","isServerRendering","isExtensible","_isVue","vmCount","defineReactive","customSetter","shallow","dep","getOwnPropertyDescriptor","setter","childOb","depend","dependArray","newVal","notify","max","del","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","props","camelize","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","hyphenate","stringIndex","getPropDefaultValue","prevShouldObserve","_props","getType","match","isSameType","expectedTypes","handleError","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","errorHandler","logError","inBrowser","inWeex","console","error","flushCallbacks","pending","copies","callbacks","withMacroTask","_withTask","useMacroTask","_resolve","macroTimerFunc","microTimerFunc","traverse","_traverse","seenObjects","clear","seen","isA","isFrozen","depId","has","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","old","event","normalizeEvent","passive","params","mergeVNodeHook","hookKey","wrappedHook","oldHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","node","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","base","hasSymbol","Symbol","toStringTag","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","forceRender","$forceUpdate","reject","reason","component","delay","setTimeout","timeout","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","el","hydrating","$el","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","queueActivatedComponent","queueWatcher","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","methods","initMethods","initData","initComputed","nativeWatch","initWatch","propsOptions","getData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","shouldCache","createComputedGetter","dirty","evaluate","createWatcher","expOrFn","initProvide","provide","_provided","initInjections","result","resolveInject","Reflect","ownKeys","provideKey","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","identity","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","createComponentInstanceForVnode","parentElm","refElm","_isComponent","_parentElm","_refElm","inlineTemplate","hooksToMerge","componentVNodeHooks","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","registerDeepBindings","force","style","class","initRender","parentData","initInternalComponent","constructor","vnodeComponentOptions","_componentTag","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","installedPlugins","_installedPlugins","unshift","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","componentInstance","genClassForVnode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","query","selected","createElement$1","tagName","multiple","createElementNS","namespaceMap","createComment","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","registerRef","isRemoval","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE","isEdge","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","baseSetAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","isIE9","__ieph","blocker","stopImmediatePropagation","removeEventListener","addEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","_","addProp","plain","addAttr","addRawAttr","attrsMap","attrsList","addDirective","arg","addHandler","important","warn","right","middle","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","genComponentModel","number","valueExpression","assignment","genAssignmentCode","parseModel","lastIndexOf","index$1","expressionPos","expressionEndPos","eof","chr","next","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","CHECKBOX_RADIO_TOKEN","change","createOnceHandler","target$1","onceHandler","remove$2","add$1","once$$1","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","replace","resolveTransition","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","actuallySetSelected","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokenValue","tokens","rawTokens","exec","@binding","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","html","advance","substring","parseEndTag","lowerCasedTagName","stack","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","shouldDecodeNewlinesForHref","rest","createASTElement","makeAttrsMap","parse","template","closeElement","element","pre","inVPre","platformIsPreTag","inPre","postTransforms","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","currentParent","preserveWhitespace","comments","guardIESVGBug","isForbiddenTag","forbidden","processPre","processRawAttrs","processed","processFor","processIf","processOnce","processElement","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","lastNode","isTextTag","decodeHTMLCached","processKey","processRef","processSlot","processComponent","processAttrs","checkInFor","parseFor","inMatch","forAliasRE","for","alias","stripParensRE","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","cloneASTElement","branch1","branch2","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","i$1","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genGuard","keyModifier","genKeyFilter","genFilterCode","keyVal","parseInt","keyCode","keyName","keyNames","wrapListeners","bind$1","wrapData","generate","ast","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","getShouldDecode","href","div","innerHTML","getOuterHTML","outerHTML","container","cloneNode","freeze","camelizeRE","toUpperCase","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","hasProto","WXEnvironment","platform","weexPlatform","UA","isIOS","_isServer","_Set","env","VUE_ENV","Set","uid","addSub","removeSub","addDep","raw","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","MessageChannel","channel","port","port2","port1","onmessage","postMessage","uid$1","isRenderWatcher","user","deps","newDeps","depIds","newDepIds","cleanupDeps","tmp","teardown","keepAlive","mountedNode","prepatch","$mount","insert","destroy","uid$3","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","patternTypes","KeepAlive","include","exclude","created","destroyed","mounted","ref$1","builtInComponents","configDef","util","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","baseModules","klass","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","normalize","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","fullInvoke","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","vmodel","directive","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","platformComponents","decoder","regexEscapeRE","open","close","klass$1","style$1","he","decode","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","isIgnoreNewlineTag","model$2","modules$1","directives$1","baseOptions","esc","tab","space","up","down","stop","prevent","self","ctrl","alt","meta","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","idToTemplate","mount","documentElement","Timeout","clearFn","_id","_clearFn","scope","clearTimeout","setInterval","clearInterval","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","array","process","title","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","__WEBPACK_IMPORTED_MODULE_0__components_Home_vue__","__WEBPACK_IMPORTED_MODULE_1_vuex__","__WEBPACK_IMPORTED_MODULE_2__store_store_js__","_extends","assign","Home","_this","initialiseApp","blur","changeSearchTerm","__WEBPACK_IMPORTED_MODULE_0_vuex__","__WEBPACK_IMPORTED_MODULE_1__Settings_vue__","__WEBPACK_IMPORTED_MODULE_2__Clipboard_vue__","__WEBPACK_IMPORTED_MODULE_3__Firebase_vue__","__WEBPACK_IMPORTED_MODULE_4__base_task_js__","topRightComponent","newTask","showClearButton","Settings","Clipboard","Firebase","addTaskFromInput","addTask","incrementTaskStorageUID","taskStorageUID","setTask","addTaskToRoot","addedTaskInput","getElementById","focus","localVisibility","visibility","newValue","changeVisibility","filteredTasks","currentSearchTerm","searchTerm","rootTasks","tasksAsArray","tasksContainingSearchTerm","filteredTaskIDs","numberOfTasksRemaining","recursiveNumberOfActiveTasks","taskID","thisTask","taskByID","innerTaskID","acc","tags","tagsInTasks","computedSearchTerm","pluralise","shouldShowInnerTasks","changeShowInnerTasks","focusedElementIsntInput","newTaskInput","searchInput","computedShowChildren","showChildren","setShowChildren","computedStorageMethod","storageMethod","setStorageMethod","clipboardNotEmpty","clipboard","taskContent","computedFirebaseStateKey","firebaseStateKey","setFirebaseStateKey","createFirebaseNamespace","removeApp","callAppHooks","apps_","app","DEFAULT_ENTRY_NAME","contains","initializeApp","rawConfig","FirebaseAppImpl","getApps","registerService","createService","serviceProperties","appHook","allowMultipleInstances","factories","appHooks","serviceNamespace","appArg","deepExtend","_getService","extendNamespace","eventName","serviceName","factoryName","useAsService","useService","apps","SDK_VERSION","INTERNAL","createSubscribe","ErrorFactory","patchProperty","appErrors","tokenListeners","firebase_","isDeleted_","services_","name_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","getUid","getToken","addAuthTokenListener","removeAuthTokenListener","listener","checkDestroyed_","services","serviceKey","instanceKey","service","instanceIdentifier","instanceSpecifier","extendApp","log","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","firebase","Date","dateValue","getTime","patchCapture","captureFake","captureStackTrace","jsonEval","executor","onNoObservers","ObserverProxy","async","onError","implementsAnyMethods","methods_1","errorPrefix","fnName","argumentNumber","optional","argName","validateNamespace","validateCallback","validateContextObject","tslib_1","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","message","assertionError","stringToByteArray","out","byteArrayToString","bytes","c1","fromCharCode","c2","c3","c4","u","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Encode","utf8Bytes","base64Decode","Deferred","promise","wrapCallback","getUA","isMobileCordova","isReactNative","isNodeSdk","ERROR_NAME","FirebaseError","fullCode","token","header","claims","signature","isValidTimestamp","validSince","validUntil","now","issuedAtTime","isValidFormat","decoded","isAdmin","safeGet","objTo","objFrom","isNonNullObject","isEmpty","getCount","rv","f","opt_obj","findKey","opt_this","findValue","getAnyKey","getValues","querystring","querystringParams","arrayVal","querystringDecode","Hash","blockSize","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","reset","__extends","compress_","buf","opt_offset","W","t","k","opt_length","lengthMinusBlock","inbuf","digest","totalBits","observers","unsubscribes","observerCount","finalized","forEachObserver","observer","nextOrObserver","unsub","unsubscribeOne","finalError","sendOne","validateArgCount","minCount","maxCount","argCount","argError","stringToByteArray$1","high","stringLength","__","extendStatics","__rest","getOwnPropertySymbols","__decorate","decorators","desc","r","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","__generator","verb","op","TypeError","y","label","ops","trys","sent","throw","return","iterator","__exportStar","__values","__read","ar","__spread","__await","__asyncGenerator","q","resume","settle","fulfill","asyncIterator","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","mod","__importDefault","__assign","setPrototypeOf","deleteInnerTask","outerTaskID","removeTaskFromParentTask","parentTaskID","deleteTask","updateSearchTerm","newSearchTerm","innerText","__WEBPACK_IMPORTED_MODULE_1__DetailedTask_vue__","__WEBPACK_IMPORTED_MODULE_2__base_task_js__","showContextMenu","showModal","expandChildrenFlag","DetailedTask","toggleComplete","toggleContextMenu","Stretchy","resize","taskInput","addNewTask","addTaskToTask","newTaskID","confirm","copyTask","setClipboardMode","setClipboard","cutTask","removeOriginalTaskIfCutting","originalTaskID","clipboardMode","originalTask","removeTaskFromRoot","getTaskIDToPaste","cloneTaskToLeaves","copiedTask","cloneOfCopiedTask","getTaskIDToPasteAndRemoveOriginalTask","taskIDToPaste","taskThatsBeingPasted","pasteInto","displayModal","hideModal","newContent","showHideButtonText","showHideText","tagsInTask","numberOfChildren","recursiveNumberOfChildren","shouldShowChildren","showInnerTasks","goHome","taskLink","shouldUpdateTask","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1__App_vue__","__WEBPACK_IMPORTED_MODULE_2__components_Tasks_vue__","__WEBPACK_IMPORTED_MODULE_3__components_Tags_vue__","__WEBPACK_IMPORTED_MODULE_4__components_Task_vue__","__WEBPACK_IMPORTED_MODULE_5__components_Modal_vue__","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","doc","attachTo","getPrototypeOf","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","random","onGlobalMessage","attachEvent","script","onreadystatechange","injectStyle","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0eb9df51_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__","normalizeComponent","__vue_styles__","Component","locals","newStyles","part","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f7e426a0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Home_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0de64cd4_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Settings_vue__","_h","checked","$$a","$$el","$$c","$$i","esExports","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Clipboard_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_52a62c4a_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Clipboard_vue__","margin","float","click","setCurrentTopRightTab","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Firebase_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4d54eec3_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Firebase_vue__","min-width","initialiseTasks","saveStateToFirebase","keyup","mouseover","mouseleave","currentTopRightTab","taskIDs","color","__WEBPACK_IMPORTED_MODULE_2__key_js__","__WEBPACK_IMPORTED_MODULE_3__modules_storage_js__","__WEBPACK_IMPORTED_MODULE_4__modules_tasks_js__","__WEBPACK_IMPORTED_MODULE_5__modules_taskFiltering_js__","__WEBPACK_IMPORTED_MODULE_6__modules_settings_js__","__WEBPACK_IMPORTED_MODULE_7__modules_clipboard_js__","__WEBPACK_IMPORTED_MODULE_8__modules_topRightTabs_js__","__WEBPACK_IMPORTED_MODULE_9_lodash_debounce__","__WEBPACK_IMPORTED_MODULE_9_lodash_debounce___default","__WEBPACK_IMPORTED_MODULE_10_babel_core_lib_transformation_file_options_config__","NODE_ENV","storageModule","tasksModule","taskFilteringModule","settingsModule","clipboardModule","topRightTabsModule","storageMethodIsLocalStorage","mutationIsTasksChange","mutationIsStorageChange","localStorage","setItem","entries","rootTaskIDs","settings","__WEBPACK_IMPORTED_MODULE_0__base_task_js__","__WEBPACK_IMPORTED_MODULE_1__key_js__","__WEBPACK_IMPORTED_MODULE_2__firebaseConfig_js__","Map","tasksChangeTracker","gettersArg","values","hasTask","tasksInTask","tagsInContent","tagsInDescription","tagsToReturn","innerTasks","unique","innerTask","flatten","incrementTaskChangeTracker","initialiseTasksWithObject","storageObjectString","storageObject","recursiveRemove","rootTaskIDIndex","_ref","parentTask","parentTaskIDIndex","_ref2","newShowInnerTasks","getItem","stateKey","snapshot","__WEBPACK_IMPORTED_MODULE_0_firebase_app__","__WEBPACK_IMPORTED_MODULE_0_firebase_app___default","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","ex","_state","_handled","_deferreds","doResolve","deferred","_immediateFn","onFulfilled","onRejected","finale","_unhandledRejectionFn","Handler","createCommonjsModule","__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__","setTimeoutFunc","prom","remaining","race","globalNS","_global","__g","_core","core","__e","_isObject","it","_anObject","_fails","_descriptors","_domCreate","_ie8DomDefine","_toPrimitive","S","valueOf","dP","O","Attributes","_objectDp","_propertyDesc","bitmap","_hide","_has","px","_redefine","SRC","$toString","TPL","inspectSource","safe","isFunction","_aFunction","_ctx","that","$export","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","expProto","U","R","_export","_cof","_iobject","propertyIsEnumerable","_defined","_toObject","ceil","_toInteger","min","_toLength","_isArray","_shared","_wks","USE_SYMBOL","SPECIES","_arraySpeciesConstructor","C","_arraySpeciesCreate","_arrayMethods","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","UNSCOPABLES","ArrayProto","_addToUnscopables","$find","forced","find","$find$1","forced$1","findIndex","_toIobject","min$1","_toAbsoluteIndex","shared","_sharedKey","arrayIndexOf","IS_INCLUDES","fromIndex","IE_PROTO","_objectKeysInternal","names","_enumBugKeys","_objectKeys","f$1","_objectGops","f$2","_objectPie","$assign","_objectAssign","A","K","T","aLen","getSymbols","isEnum","MATCH","_isRegexp","_stringContext","searchString","NAME","MATCH$1","$startsWith","KEY","startsWith","search","_stringRepeat","count","Infinity","RangeError","repeat","_meta","META","setDesc","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","NEED","TAG","_setToStringTag","stat","f$3","_wksExt","_wksDefine","$Symbol","_enumKeys","symbols","_objectDps","Properties","document$1","_html","IE_PROTO$1","Empty","createDict","iframeDocument","iframe","contentWindow","write","lt","_objectCreate","hiddenKeys","f$4","_objectGopn","gOPN","toString$1","windowNames","getWindowNames","f$5","_objectGopnExt","gOPD","f$6","_objectGopd","gOPD$1","dP$1","gOPN$1","$JSON","_stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","USE_NATIVE","QObject","findChild","setSymbolDesc","D","protoDesc","wrap","sym","isSymbol","$defineProperty","$defineProperties","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","es6Symbols","wellKnownSymbols","keyFor","useSetter","useSimple","replacer","$replacer","TAG$1","ARG","tryGet","_classof","callee","_iterators","IteratorPrototype","_iterCreate","Constructor","IE_PROTO$2","ObjectProto$1","_objectGpo","ITERATOR","BUGGY","returnThis","_iterDefine","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","$at","TO_STRING","iterated","point","_iterStep","es6_array_iterator","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","normalizeName","normalizeValue","iteratorFor","support","iterable","Headers","headers","append","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","view","Uint8Array","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","json","normalizeMethod","upcased","Request","url","credentials","referrer","form","decodeURIComponent","parseHeaders","rawHeaders","line","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","response","redirectStatuses","redirect","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","withCredentials","responseType","setRequestHeader","send","polyfill","__WEBPACK_IMPORTED_MODULE_0__firebase_database__","decodePath","pathString","pathStringDecoded","pieces","piece","decodeQuery","queryString","results","_a","segment","kv","NAME_ONLY_COMPARATOR","nameCompare","NAME_COMPARATOR","nodeFromJSON$1","priority","ChildrenNode","EMPTY_NODE","LeafNode","USE_HINZE","node_1","jsonObj_1","childData","isLeafNode","updateImmediateChild","updatePriority","children_1","childrenHavePriority_1","hinzeJsonObj_1","getPriority","NamedNode","childSet","buildChildSet","namedNode","sortedChildSet","PRIORITY_INDEX","getCompare","IndexMap",".priority","Default","registerDatabase","instance","unused","RepoManager","getInstance","databaseFromApp","Reference","Query","Database","enableLogging","ServerValue","TEST_ACCESS","__EMPTY_NODE","MAX_NODE","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","_defaultIndexMap","logger","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","storedVal","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","var_args","logger$1","firstLog_","logger_","persistent","logLevel","LogLevel","VERBOSE","logWrapper","prefix","fatal","warnIfPageIsSecure","protocol","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","readyState","called_1","wrappedFn_1","MIN_NAME","MAX_NAME","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","ln","bits","abs","pow","LN2","round","reverse","hexByteString","hexByte","substr","isChromeExtensionContentScript","isWindowsStoreApp","Windows","UI","errorForServerCode","INTEGER_REGEXP_","intVal","exceptionGuard","beingCrawled","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","toUrlEncodedString","begin","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","scheme","repoInfo","colonInd","slashInd","questionMarkInd","queryParams","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","Wrap","Index","compare","indexedValueChanged","oldNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","priorityHashText","validatePriorityNode","priorityNode","value_","priorityNode_","lazyHash_","newPriorityNode","getImmediateChild","childName","hasChild","getPredecessorChildName","newChildNode","updateChild","front","numChildren","exportFormat",".value","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","RED","SortedMap","copy","inorderTraversal","reverseTraversal","min_","minKey","maxKey","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","childList","keyFn","mapSortFn","buildBalancedTree","low","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","children_","indexMap_","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","__referenceConstructor","OperationType","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","getQueryParams","getIndex","snapshotNode","eventData","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","addEventCallbackForQuery","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","childKey","remember","forget","self_1","forEachTree","prefixPath","func","generateWithValues","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","events_1","serverCacheComplete","eventCacheComplete","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","error$$1","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","this_1","toProcess","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","markConnectionHealthy","shutdown_","myDisconnFrame","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","iframeContents","contentDocument","alive","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","rstate","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","User-Agent","origin","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","oldAndroidRegex","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","status_1","queryStringParameters","authTokenData","authToken","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","previousValue","currentValue","statsIncrementCounter","metric","__database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","parentPath","getRoot","databaseProp","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","currentNode","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","repos_","useRestClient_","appName","dbUrl","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","TIMESTAMP",".sv","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","setLogLevel","level","instances","inst","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","WARN","ERROR","_logLevel","_logHandler","debug","shownTaskIDs","newTerm","newVisibility","__WEBPACK_IMPORTED_MODULE_0__key_js__","initialiseSettingsWithObject","initialiseSettings","debounce","wait","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","trailingEdge","trailing","flush","debounced","isInvoking","FUNC_ERROR_TEXT","nativeMax","isObjectLike","objectToString","symbolTag","NAN","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","freeGlobal","freeSelf","objectProto","filename","shorthand","filenameRelative","inputSourceMap","retainLines","highlightCode","suppressDeprecationMessages","presets","ignore","only","shouldPrintComment","wrapPluginVisitorMethod","compact","minified","sourceMaps","sourceMapTarget","sourceFileName","babelrc","sourceType","auxiliaryCommentBefore","auxiliaryCommentAfter","resolveModuleSource","getModuleId","moduleRoot","moduleIds","passPerPreset","parserOpts","generatorOpts","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Tasks_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_635afb59_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Tasks_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Tags_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8fde0ba8_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Tags_vue__","preventDefault","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Task_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_e417b6fc_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Task_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DetailedTask_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a3c60d2c_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_DetailedTask_vue__","padding-top","dblclick","margin-left","margin-top","margin-bottom","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modal_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_114e0502_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modal_vue__","_toConsumableArray","arr2","flattenDeep","diff"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,mBAGAzB,IAAA0B,EAAA,MDMM,SAAUtB,EAAQD,GE7DxBC,EAAAD,QAAA,SACAwB,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAC,GACAC,EAAAP,QAGAQ,QAAAR,GAAAS,OACA,YAAAD,GAAA,aAAAA,IACAF,EAAAN,EACAO,EAAAP,EAAAS,QAIA,IAAAC,GAAA,kBAAAH,GACAA,EAAAG,QACAH,CAGAN,KACAS,EAAAC,OAAAV,EAAAU,OACAD,EAAAE,gBAAAX,EAAAW,gBACAF,EAAAG,WAAA,GAIAX,IACAQ,EAAAI,YAAA,GAIAV,IACAM,EAAAK,SAAAX,EAGA,IAAAY,EA4BA,IA3BAX,GACAW,EAAA,SAAAC,GAEAA,EACAA,GACAC,KAAAC,QAAAD,KAAAC,OAAAC,YACAF,KAAAG,QAAAH,KAAAG,OAAAF,QAAAD,KAAAG,OAAAF,OAAAC,WAEAH,GAAA,mBAAAK,uBACAL,EAAAK,qBAGAnB,GACAA,EAAAvB,KAAAsC,KAAAD,GAGAA,KAAAM,uBACAN,EAAAM,sBAAAC,IAAAnB,IAKAK,EAAAe,aAAAT,GACGb,IACHa,EAAAb,GAGAa,EAAA,CACA,GAAAF,GAAAJ,EAAAI,WACAY,EAAAZ,EACAJ,EAAAC,OACAD,EAAAiB,YAEAb,IAQAJ,EAAAkB,cAAAZ,EAEAN,EAAAC,OAAA,SAAAkB,EAAAZ,GAEA,MADAD,GAAApC,KAAAqC,GACAS,EAAAG,EAAAZ,KAVAP,EAAAiB,aAAAD,KACAI,OAAAJ,EAAAV,IACAA,GAaA,OACAV,WACA9B,QAAA+B,EACAG,aF4EM,SAAUjC,EAAQsD,EAAqB1D,GAE7C,YGrIA,SAAA2D,GAAAC,GACAC,IAEAD,EAAAE,aAAAD,EAEAA,EAAAE,KAAA,YAAAH,GAEAC,EAAAG,GAAA,gCAAAC,GACAL,EAAAM,aAAAD,KAGAL,EAAAO,UAAA,SAAAC,EAAAC,GACAR,EAAAE,KAAA,gBAAAK,EAAAC,MA0BA,QAAAC,GAAAC,EAAAC,GACA1D,OAAA2D,KAAAF,GAAAG,QAAA,SAAAC,GAA2C,MAAAH,GAAAD,EAAAI,QAG3C,QAAAC,GAAAL,GACA,cAAAA,GAAA,gBAAAA,GAGA,QAAAM,GAAAC,GACA,MAAAA,IAAA,kBAAAA,GAAAC,KA6HA,QAAAC,GAAAC,EAAAC,EAAAC,GASA,GAHAD,EAAAF,OAAAG,GAGAA,EAAApF,QACA,OAAA4E,KAAAQ,GAAApF,QAAA,CACA,IAAAmF,EAAAE,SAAAT,GAOA,MAEAK,GACAC,EAAAxB,OAAAkB,GACAO,EAAAE,SAAAT,GACAQ,EAAApF,QAAA4E,KAoQA,QAAAU,GAAAb,EAAAc,GAIA,MAHAA,GAAAC,QAAAf,GAAA,GACAc,EAAAE,KAAAhB,GAEA,WACA,GAAAnE,GAAAiF,EAAAC,QAAAf,EACAnE,IAAA,GACAiF,EAAAG,OAAApF,EAAA,IAKA,QAAAqF,GAAA9B,EAAA+B,GACA/B,EAAAgC,SAAA9E,OAAA+E,OAAA,MACAjC,EAAAkC,WAAAhF,OAAA+E,OAAA,MACAjC,EAAAmC,gBAAAjF,OAAA+E,OAAA,MACAjC,EAAAoC,qBAAAlF,OAAA+E,OAAA,KACA,IAAAxB,GAAAT,EAAAS,KAEA4B,GAAArC,EAAAS,KAAAT,EAAAsC,SAAAC,MAAA,GAEAC,EAAAxC,EAAAS,EAAAsB,GAGA,QAAAS,GAAAxC,EAAAS,EAAAsB,GACA,GAAAU,GAAAzC,EAAA0C,GAGA1C,GAAA2C,UACA,IAAAC,GAAA5C,EAAAmC,gBACAU,IACAnC,GAAAkC,EAAA,SAAAhC,EAAAG,GAEA8B,EAAA9B,GAAA,WAAiC,MAAAH,GAAAZ,IACjC9C,OAAAC,eAAA6C,EAAA2C,QAAA5B,GACAzD,IAAA,WAAwB,MAAA0C,GAAA0C,IAAA3B,IACxB1D,YAAA,KAOA,IAAAyF,GAAAC,EAAAC,OAAAF,MACAC,GAAAC,OAAAF,QAAA,EACA9C,EAAA0C,IAAA,GAAAK,IACAE,MACAC,QAAAzC,GAEAoC,aAEAE,EAAAC,OAAAF,SAGA9C,EAAAmD,QACAC,EAAApD,GAGAyC,IACAV,GAGA/B,EAAAqD,YAAA,WACAZ,EAAAa,MAAAJ,QAAA,OAGAH,EAAAQ,SAAA,WAA8B,MAAAd,GAAAe,cAI9B,QAAAnB,GAAArC,EAAAyD,EAAApC,EAAA7E,EAAAuF,GACA,GAAA2B,IAAArC,EAAAsC,OACAC,EAAA5D,EAAAsC,SAAAuB,aAAAxC,EAQA,IALA7E,EAAAsH,aACA9D,EAAAoC,qBAAAwB,GAAApH,IAIAkH,IAAA3B,EAAA,CACA,GAAAgC,GAAAC,EAAAP,EAAApC,EAAA4C,MAAA,OACAC,EAAA7C,IAAAsC,OAAA,EACA3D,GAAAqD,YAAA,WACAN,EAAAoB,IAAAJ,EAAAG,EAAA1H,EAAAiE,SAIA,GAAA2D,GAAA5H,EAAAwC,QAAAqF,EAAArE,EAAA4D,EAAAvC,EAEA7E,GAAA8H,gBAAA,SAAA9D,EAAAO,GAEAwD,EAAAvE,EADA4D,EAAA7C,EACAP,EAAA4D,KAGA5H,EAAAgI,cAAA,SAAAC,EAAA1D,GACA,GAAAxC,GAAAkG,EAAAlC,KAAAxB,EAAA6C,EAAA7C,EACA2D,EAAAD,EAAAC,SAAAD,CACAE,GAAA3E,EAAAzB,EAAAmG,EAAAN,KAGA5H,EAAAoI,cAAA,SAAA5H,EAAA+D,GAEA8D,EAAA7E,EADA4D,EAAA7C,EACA/D,EAAAoH,KAGA5H,EAAAsI,aAAA,SAAAC,EAAAhE,GACAsB,EAAArC,EAAAyD,EAAApC,EAAAxB,OAAAkB,GAAAgE,EAAAhD,KAQA,QAAAsC,GAAArE,EAAA4D,EAAAvC,GACA,GAAA2D,GAAA,KAAApB,EAEAQ,GACAa,SAAAD,EAAAhF,EAAAiF,SAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAJ,EAAAC,EAAAC,GACAG,EAAAF,EAAAE,QACA9G,EAAA4G,EAAA5G,QACAF,EAAA8G,EAAA9G,IAUA,OARAE,MAAA8D,OACAhE,EAAAqF,EAAArF,GAOAyB,EAAAiF,SAAA1G,EAAAgH,IAGAC,OAAAR,EAAAhF,EAAAwF,OAAA,SAAAN,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAJ,EAAAC,EAAAC,GACAG,EAAAF,EAAAE,QACA9G,EAAA4G,EAAA5G,QACAF,EAAA8G,EAAA9G,IAEAE,MAAA8D,OACAhE,EAAAqF,EAAArF,GAOAyB,EAAAwF,OAAAjH,EAAAgH,EAAA9G,IAiBA,OAXAvB,QAAAuI,iBAAArB,GACAzB,SACArF,IAAA0H,EACA,WAAuB,MAAAhF,GAAA2C,SACvB,WAAuB,MAAA+C,GAAA1F,EAAA4D,KAEvBnD,OACAnD,IAAA,WAAwB,MAAA0G,GAAAhE,EAAAS,MAAAY,OAIxB+C,EAGA,QAAAsB,GAAA1F,EAAA4D,GACA,GAAA+B,MAEAC,EAAAhC,EAAAD,MAiBA,OAhBAzG,QAAA2D,KAAAb,EAAA2C,SAAA7B,QAAA,SAAAvC,GAEA,GAAAA,EAAA0F,MAAA,EAAA2B,KAAAhC,EAAA,CAGA,GAAAiC,GAAAtH,EAAA0F,MAAA2B,EAKA1I,QAAAC,eAAAwI,EAAAE,GACAvI,IAAA,WAAwB,MAAA0C,GAAA2C,QAAApE,IACxBlB,YAAA,OAIAsI,EAGA,QAAApB,GAAAvE,EAAAzB,EAAAmG,EAAAN,IACApE,EAAAkC,WAAA3D,KAAAyB,EAAAkC,WAAA3D,QACAqD,KAAA,SAAA2D,GACAb,EAAA/H,KAAAqD,EAAAoE,EAAA3D,MAAA8E,KAIA,QAAAZ,GAAA3E,EAAAzB,EAAAmG,EAAAN,IACApE,EAAAgC,SAAAzD,KAAAyB,EAAAgC,SAAAzD,QACAqD,KAAA,SAAA2D,EAAAO,GACA,GAAAC,GAAArB,EAAA/H,KAAAqD,GACAiF,SAAAb,EAAAa,SACAO,OAAApB,EAAAoB,OACA7C,QAAAyB,EAAAzB,QACAlC,MAAA2D,EAAA3D,MACAuF,YAAAhG,EAAA2C,QACAc,UAAAzD,EAAAS,OACK8E,EAAAO,EAIL,OAHA7E,GAAA8E,KACAA,EAAAE,QAAAC,QAAAH,IAEA/F,EAAAE,aACA6F,EAAAI,MAAA,SAAAC,GAEA,KADApG,GAAAE,aAAAC,KAAA,aAAAiG,GACAA,IAGAL,IAKA,QAAAlB,GAAA7E,EAAAzB,EAAA8H,EAAAjC,GACApE,EAAAmC,gBAAA5D,KAMAyB,EAAAmC,gBAAA5D,GAAA,SAAAyB,GACA,MAAAqG,GACAjC,EAAA3D,MACA2D,EAAAzB,QACA3C,EAAAS,MACAT,EAAA2C,WAKA,QAAAS,GAAApD,GACAA,EAAA0C,IAAA4D,OAAA,WAAgC,MAAArH,MAAAqE,MAAAJ,SAA4B,cAItDqD,MAAA,EAAAC,MAAA,IAGN,QAAAxC,GAAAvD,EAAAY,GACA,MAAAA,GAAAsC,OACAtC,EAAAoF,OAAA,SAAAhG,EAAAM,GAAyC,MAAAN,GAAAM,IAAqBN,GAC9DA,EAGA,QAAA6E,GAAA/G,EAAAgH,EAAA9G,GAWA,MAVAuC,GAAAzC,aACAE,EAAA8G,EACAA,EAAAhH,EACAA,WAOUA,OAAAgH,UAAA9G,WAGV,QAAAiI,GAAAC,GACA5D,GAAA4D,IAAA5D,IAQAA,EAAA4D,EACAC,EAAA7D,IAgHA,QAAA8D,GAAAC,GACA,MAAAC,OAAAC,QAAAF,GACAA,MAAA,SAAA/F,GAA8B,OAAUA,MAAAG,IAAAH,KACxC7D,OAAA2D,KAAAiG,OAAA,SAAA/F,GAA2C,OAAUA,MAAAG,IAAA4F,EAAA/F,MAGrD,QAAAkG,GAAArG,GACA,gBAAAgD,EAAAkD,GAOA,MANA,gBAAAlD,IACAkD,EAAAlD,EACAA,EAAA,IACK,MAAAA,EAAAsD,OAAAtD,EAAAD,OAAA,KACLC,GAAA,KAEAhD,EAAAgD,EAAAkD,IAIA,QAAAK,GAAAnH,EAAAoH,EAAAxD,GAKA,MAJA5D,GAAAoC,qBAAAwB,GHztB+BxH,EAAoBU,EAAEgD,EAAqB,IAAK,WAAa,MAAOuH,KACpEjL,EAAoBU,EAAEgD,EAAqB,IAAK,WAAa,MAAOwH,KACpElL,EAAoBU,EAAEgD,EAAqB,IAAK,WAAa,MAAOyH;;;;;AGnLnG,GAAAX,GAAA,SAAA7D,GAuBA,QAAAyE,KACA,GAAA/I,GAAAQ,KAAAwI,QAEAhJ,GAAAuB,MACAf,KAAAyI,OAAA,kBAAAjJ,GAAAuB,MACAvB,EAAAuB,QACAvB,EAAAuB,MACKvB,EAAAW,QAAAX,EAAAW,OAAAsI,SACLzI,KAAAyI,OAAAjJ,EAAAW,OAAAsI,QA5BA,GAFAC,OAAA5E,EAAA6E,QAAAC,MAAA,UAEA,EACA9E,EAAA+E,OAAepI,aAAA8H,QACZ,CAGH,GAAAO,GAAAhF,EAAApF,UAAAoK,KACAhF,GAAApF,UAAAoK,MAAA,SAAAtJ,OACA,KAAAA,UAEAA,EAAAuJ,KAAAvJ,EAAAuJ,MACAR,GAAA3H,OAAApB,EAAAuJ,MACAR,EACAO,EAAApL,KAAAsC,KAAAR,MAqBAwB,EACA,mBAAAgI,SACAA,OAAAC,6BAwDAC,EAAA,SAAAC,EAAAC,GACApJ,KAAAoJ,UACApJ,KAAAqJ,UAAApL,OAAA+E,OAAA,MACAhD,KAAAsJ,WAAAH,CACA,IAAAI,GAAAJ,EAAA3H,KACAxB,MAAAwB,OAAA,kBAAA+H,eAGAC,GAA4B3E,YAAc1G,cAAA,GAE1CqL,GAAA3E,WAAAxG,IAAA,WACA,QAAA2B,KAAAsJ,WAAAzE,YAGAqE,EAAAxK,UAAA+K,SAAA,SAAA3H,EAAAvE,GACAyC,KAAAqJ,UAAAvH,GAAAvE,GAGA2L,EAAAxK,UAAAgL,YAAA,SAAA5H,SACA9B,MAAAqJ,UAAAvH,IAGAoH,EAAAxK,UAAA6D,SAAA,SAAAT,GACA,MAAA9B,MAAAqJ,UAAAvH,IAGAoH,EAAAxK,UAAAyD,OAAA,SAAAgH,GACAnJ,KAAAsJ,WAAAzE,WAAAsE,EAAAtE,WACAsE,EAAAQ,UACA3J,KAAAsJ,WAAAK,QAAAR,EAAAQ,SAEAR,EAAAS,YACA5J,KAAAsJ,WAAAM,UAAAT,EAAAS,WAEAT,EAAAzF,UACA1D,KAAAsJ,WAAA5F,QAAAyF,EAAAzF,UAIAwF,EAAAxK,UAAAmH,aAAA,SAAAlE,GACAF,EAAAzB,KAAAqJ,UAAA1H,IAGAuH,EAAAxK,UAAAiH,cAAA,SAAAhE,GACA3B,KAAAsJ,WAAA5F,SACAjC,EAAAzB,KAAAsJ,WAAA5F,QAAA/B,IAIAuH,EAAAxK,UAAA6G,cAAA,SAAA5D,GACA3B,KAAAsJ,WAAAK,SACAlI,EAAAzB,KAAAsJ,WAAAK,QAAAhI,IAIAuH,EAAAxK,UAAA2G,gBAAA,SAAA1D,GACA3B,KAAAsJ,WAAAM,WACAnI,EAAAzB,KAAAsJ,WAAAM,UAAAjI,IAIA1D,OAAAuI,iBAAA0C,EAAAxK,UAAA8K,EAEA,IAAAK,GAAA,SAAAC,GAEA9J,KAAA+J,YAAAD,GAAA,GAGAD,GAAAnL,UAAAL,IAAA,SAAA+D,GACA,MAAAA,GAAAoF,OAAA,SAAAjK,EAAAuE,GACA,MAAAvE,GAAAgF,SAAAT,IACG9B,KAAAsD,OAGHuG,EAAAnL,UAAAkG,aAAA,SAAAxC,GACA,GAAA7E,GAAAyC,KAAAsD,IACA,OAAAlB,GAAAoF,OAAA,SAAA7C,EAAA7C,GAEA,MADAvE,KAAAgF,SAAAT,GACA6C,GAAApH,EAAAsH,WAAA/C,EAAA,SACG,KAGH+H,EAAAnL,UAAAyD,OAAA,SAAA2H,GACA3H,KAAAnC,KAAAsD,KAAAwG,IAGAD,EAAAnL,UAAAqL,SAAA,SAAA3H,EAAA+G,EAAAC,GACA,GAAAY,GAAAhK,SACA,KAAAoJ,OAAA,EAMA,IAAA9G,GAAA,GAAA4G,GAAAC,EAAAC,EACA,QAAAhH,EAAAsC,OACA1E,KAAAsD,KAAAhB,MACG,CACHtC,KAAA3B,IAAA+D,EAAA4C,MAAA,OACAyE,SAAArH,IAAAsC,OAAA,GAAApC,GAIA6G,EAAAjM,SACAuE,EAAA0H,EAAAjM,QAAA,SAAA+M,EAAAnI,GACAkI,EAAAD,SAAA3H,EAAAxB,OAAAkB,GAAAmI,EAAAb,MAKAS,EAAAnL,UAAAwL,WAAA,SAAA9H,GACA,GAAAjC,GAAAH,KAAA3B,IAAA+D,EAAA4C,MAAA,OACAlD,EAAAM,IAAAsC,OAAA,EACAvE,GAAAoC,SAAAT,GAAAsH,SAEAjJ,EAAAuJ,YAAA5H,GAgCA,IAyCAgC,GAEAqG,EAAA,SAAA3K,GACA,GAAAwK,GAAAhK,SACA,KAAAR,WAKAsE,GAAA,mBAAAkF,gBAAAlF,KACA2D,EAAAuB,OAAAlF,IASA,IAAAsG,GAAA5K,EAAA4K,YAAgC,KAAAA,SAChC,IAAAlG,GAAA1E,EAAA0E,WAA8B,KAAAA,OAAA,EAE9B,IAAA1C,GAAAhC,EAAAgC,UAA4B,KAAAA,UAC5B,kBAAAA,KACAA,WAIAxB,KAAAqK,aAAA,EACArK,KAAA+C,SAAA9E,OAAA+E,OAAA,MACAhD,KAAAsK,sBACAtK,KAAAiD,WAAAhF,OAAA+E,OAAA,MACAhD,KAAAkD,gBAAAjF,OAAA+E,OAAA,MACAhD,KAAAqD,SAAA,GAAAwG,GAAArK,GACAQ,KAAAmD,qBAAAlF,OAAA+E,OAAA,MACAhD,KAAAuK,gBACAvK,KAAAwK,WAAA,GAAA1G,EAGA,IAAA/C,GAAAf,KACAyK,EAAAzK,KACAgG,EAAAyE,EAAAzE,SACAO,EAAAkE,EAAAlE,MACAvG,MAAAgG,SAAA,SAAA1G,EAAAgH,GACA,MAAAN,GAAAtI,KAAAqD,EAAAzB,EAAAgH,IAEAtG,KAAAuG,OAAA,SAAAjH,EAAAgH,EAAA9G,GACA,MAAA+G,GAAA7I,KAAAqD,EAAAzB,EAAAgH,EAAA9G,IAIAQ,KAAAkE,SAKAd,EAAApD,KAAAwB,KAAAxB,KAAAqD,SAAAC,MAIAC,EAAAvD,KAAAwB,GAGA4I,EAAAvI,QAAA,SAAA6I,GAAqC,MAAAA,GAAAV,KAErClG,EAAAC,OAAA4G,UACA7J,EAAAd,OAIA4K,GAA0BpJ,OAASrD,cAAA,GAEnCyM,GAAApJ,MAAAnD,IAAA,WACA,MAAA2B,MAAAyD,IAAAY,MAAAJ,SAGA2G,EAAApJ,MAAA0D,IAAA,SAAA2F,KAMAV,EAAAzL,UAAA6H,OAAA,SAAAN,EAAAC,EAAAC,GACA,GAAA6D,GAAAhK,KAGAyK,EAAApE,EAAAJ,EAAAC,EAAAC,GACA7G,EAAAmL,EAAAnL,KACAgH,EAAAmE,EAAAnE,QAGA/E,GAFAkJ,EAAAjL,SAEkBF,OAAAgH,YAClBwE,EAAA9K,KAAAiD,WAAA3D,EACAwL,KAMA9K,KAAAoE,YAAA,WACA0G,EAAAjJ,QAAA,SAAA4D,GACAA,EAAAa,OAGAtG,KAAAuK,aAAA1I,QAAA,SAAAkJ,GAA4C,MAAAA,GAAAxJ,EAAAyI,EAAAxI,WAa5C2I,EAAAzL,UAAAsH,SAAA,SAAAC,EAAAC,GACA,GAAA8D,GAAAhK,KAGAyK,EAAApE,EAAAJ,EAAAC,GACA5G,EAAAmL,EAAAnL,KACAgH,EAAAmE,EAAAnE,QAEAd,GAAgBlG,OAAAgH,WAChBwE,EAAA9K,KAAA+C,SAAAzD,EACA,IAAAwL,EASA,MAFA9K,MAAAsK,mBAAAzI,QAAA,SAAAkJ,GAAkD,MAAAA,GAAAvF,EAAAwE,EAAAxI,SAElDsJ,EAAApG,OAAA,EACAsC,QAAAgE,IAAAF,EAAAjD,IAAA,SAAApC,GAAgD,MAAAA,GAAAa,MAChDwE,EAAA,GAAAxE,IAGA6D,EAAAzL,UAAA4C,UAAA,SAAAK,GACA,MAAAa,GAAAb,EAAA3B,KAAAuK,eAGAJ,EAAAzL,UAAAuM,gBAAA,SAAAtJ,GACA,MAAAa,GAAAb,EAAA3B,KAAAsK,qBAGAH,EAAAzL,UAAAwM,MAAA,SAAAnN,EAAA8I,EAAArH,GACA,GAAAwK,GAAAhK,IAKA,OAAAA,MAAAwK,WAAAnD,OAAA,WAA6C,MAAAtJ,GAAAiM,EAAAxI,MAAAwI,EAAAtG,UAA+CmD,EAAArH,IAG5F2K,EAAAzL,UAAA2C,aAAA,SAAAG,GACA,GAAAwI,GAAAhK,IAEAA,MAAAoE,YAAA,WACA4F,EAAAvG,IAAAY,MAAAJ,QAAAzC,KAIA2I,EAAAzL,UAAAyM,eAAA,SAAA/I,EAAA+G,EAAA3J,OACA,KAAAA,UAEA,gBAAA4C,KAAiCA,OAOjCpC,KAAAqD,SAAA0G,SAAA3H,EAAA+G,GACA/F,EAAApD,UAAAwB,MAAAY,EAAApC,KAAAqD,SAAAhF,IAAA+D,GAAA5C,EAAA4L,eAEA7H,EAAAvD,UAAAwB,QAGA2I,EAAAzL,UAAA2M,iBAAA,SAAAjJ,GACA,GAAA4H,GAAAhK,IAEA,iBAAAoC,KAAiCA,OAMjCpC,KAAAqD,SAAA6G,WAAA9H,GACApC,KAAAoE,YAAA,WACA,GAAAU,GAAAC,EAAAiF,EAAAxI,MAAAY,EAAA4C,MAAA,MACAlB,GAAAwH,OAAAxG,EAAA1C,IAAAsC,OAAA,MAEA7B,EAAA7C,OAGAmK,EAAAzL,UAAA6M,UAAA,SAAAC,GACAxL,KAAAqD,SAAAlB,OAAAqJ,GACA3I,EAAA7C,MAAA,IAGAmK,EAAAzL,UAAA0F,YAAA,SAAAzC,GACA,GAAA8J,GAAAzL,KAAAqK,WACArK,MAAAqK,aAAA,EACA1I,IACA3B,KAAAqK,YAAAoB,GAGAxN,OAAAuI,iBAAA2D,EAAAzL,UAAAkM,EA6RA,IAAAc,GAAA1D,EAAA,SAAArD,EAAAgH,GACA,GAAA7E,KAuBA,OAtBAc,GAAA+D,GAAA9J,QAAA,SAAA4I,GACA,GAAA3I,GAAA2I,EAAA3I,IACAG,EAAAwI,EAAAxI,GAEA6E,GAAAhF,GAAA,WACA,GAAAN,GAAAxB,KAAAyI,OAAAjH,MACAkC,EAAA1D,KAAAyI,OAAA/E,OACA,IAAAiB,EAAA,CACA,GAAApH,GAAA2K,EAAAlI,KAAAyI,OAAA,WAAA9D,EACA,KAAApH,EACA,MAEAiE,GAAAjE,EAAAwC,QAAAyB,MACAkC,EAAAnG,EAAAwC,QAAA2D,QAEA,wBAAAzB,GACAA,EAAAvE,KAAAsC,KAAAwB,EAAAkC,GACAlC,EAAAS,IAGA6E,EAAAhF,GAAA8J,MAAA,IAEA9E,IAGAsB,EAAAJ,EAAA,SAAArD,EAAAiF,GACA,GAAA9C,KAsBA,OArBAc,GAAAgC,GAAA/H,QAAA,SAAA4I,GACA,GAAA3I,GAAA2I,EAAA3I,IACAG,EAAAwI,EAAAxI,GAEA6E,GAAAhF,GAAA,WAEA,IADA,GAAAsE,MAAAyF,EAAAC,UAAApH,OACAmH,KAAAzF,EAAAyF,GAAAC,UAAAD,EAEA,IAAAtF,GAAAvG,KAAAyI,OAAAlC,MACA,IAAA5B,EAAA,CACA,GAAApH,GAAA2K,EAAAlI,KAAAyI,OAAA,eAAA9D,EACA,KAAApH,EACA,MAEAgJ,GAAAhJ,EAAAwC,QAAAwG,OAEA,wBAAAtE,GACAA,EAAA8J,MAAA/L,MAAAuG,GAAA3F,OAAAwF,IACAG,EAAAwF,MAAA/L,KAAAyI,QAAAxG,GAAArB,OAAAwF,OAGAU,IAGAuB,EAAAL,EAAA,SAAArD,EAAAjB,GACA,GAAAoD,KAmBA,OAlBAc,GAAAlE,GAAA7B,QAAA,SAAA4I,GACA,GAAA3I,GAAA2I,EAAA3I,IACAG,EAAAwI,EAAAxI,GAEAA,GAAA0C,EAAA1C,EACA6E,EAAAhF,GAAA,WACA,IAAA6C,GAAAuD,EAAAlI,KAAAyI,OAAA,aAAA9D,GAOA,MAAA3E,MAAAyI,OAAA/E,QAAAzB,IAGA6E,EAAAhF,GAAA8J,MAAA,IAEA9E,IAGAwB,EAAAN,EAAA,SAAArD,EAAAgF,GACA,GAAA7C,KAsBA,OArBAc,GAAA+B,GAAA9H,QAAA,SAAA4I,GACA,GAAA3I,GAAA2I,EAAA3I,IACAG,EAAAwI,EAAAxI,GAEA6E,GAAAhF,GAAA,WAEA,IADA,GAAAsE,MAAAyF,EAAAC,UAAApH,OACAmH,KAAAzF,EAAAyF,GAAAC,UAAAD,EAEA,IAAA7F,GAAAhG,KAAAyI,OAAAzC,QACA,IAAArB,EAAA,CACA,GAAApH,GAAA2K,EAAAlI,KAAAyI,OAAA,aAAA9D,EACA,KAAApH,EACA,MAEAyI,GAAAzI,EAAAwC,QAAAiG,SAEA,wBAAA/D,GACAA,EAAA8J,MAAA/L,MAAAgG,GAAApF,OAAAwF,IACAJ,EAAA+F,MAAA/L,KAAAyI,QAAAxG,GAAArB,OAAAwF,OAGAU,IAGAkF,EAAA,SAAArH,GAAoD,OACpD+G,WAAAO,KAAA,KAAAtH,GACA0D,aAAA4D,KAAA,KAAAtH,GACAyD,eAAA6D,KAAA,KAAAtH,GACA2D,aAAA2D,KAAA,KAAAtH,KA6BAuH,GACA/B,QACA1C,UACAkB,QAAA,QACA+C,WACAtD,eACAC,aACAC,aACA0D,0BAIAnL,GAAA,KH8LM,SAAUtD,EAAQD,GI/iCxB,QAAA6O,GAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAA,OACAG,EAAAH,EAAA,EACA,KAAAG,EACA,MAAAD,EAGA,IAAAD,GAAA,kBAAAG,MAAA,CACA,GAAAC,GAAAC,EAAAH,EAKA,QAAAD,GAAA1L,OAJA2L,EAAAI,QAAA9E,IAAA,SAAA+E,GACA,uBAAAL,EAAAM,WAAAD,EAAA,SAGAhM,QAAA6L,IAAAK,KAAA,MAGA,OAAAR,GAAAQ,KAAA,MAIA,QAAAJ,GAAAK,GAKA,yEAHAP,KAAAQ,SAAAC,mBAAAC,KAAAC,UAAAJ,MAGA,MArEAxP,EAAAD,QAAA,SAAA+O,GACA,GAAAe,KAwCA,OArCAA,GAAAC,SAAA,WACA,MAAArN,MAAA6H,IAAA,SAAAuE,GACA,GAAAE,GAAAH,EAAAC,EAAAC,EACA,OAAAD,GAAA,GACA,UAAAA,EAAA,OAAmCE,EAAA,IAEnCA,IAEGQ,KAAA,KAIHM,EAAA5P,EAAA,SAAAN,EAAAoQ,GACA,gBAAApQ,KACAA,IAAA,KAAAA,EAAA,KAEA,QADAqQ,MACA/P,EAAA,EAAgBA,EAAAwC,KAAA0E,OAAiBlH,IAAA,CACjC,GAAAgQ,GAAAxN,KAAAxC,GAAA,EACA,iBAAAgQ,KACAD,EAAAC,IAAA,GAEA,IAAAhQ,EAAA,EAAYA,EAAAN,EAAAwH,OAAoBlH,IAAA,CAChC,GAAA4O,GAAAlP,EAAAM,EAKA,iBAAA4O,GAAA,IAAAmB,EAAAnB,EAAA,MACAkB,IAAAlB,EAAA,GACAA,EAAA,GAAAkB,EACKA,IACLlB,EAAA,OAAAA,EAAA,aAAAkB,EAAA,KAEAF,EAAAzK,KAAAyJ,MAIAgB,IJooCM,SAAU7P,EAAQD,EAASH,GK7lCjC,QAAAsQ,GAAAC,GACA,OAAAlQ,GAAA,EAAiBA,EAAAkQ,EAAAhJ,OAAmBlH,IAAA,CACpC,GAAA4O,GAAAsB,EAAAlQ,GACAmQ,EAAAC,EAAAxB,EAAAoB,GACA,IAAAG,EAAA,CACAA,EAAAE,MACA,QAAAC,GAAA,EAAqBA,EAAAH,EAAAI,MAAArJ,OAA2BoJ,IAChDH,EAAAI,MAAAD,GAAA1B,EAAA2B,MAAAD,GAEA,MAAYA,EAAA1B,EAAA2B,MAAArJ,OAAuBoJ,IACnCH,EAAAI,MAAApL,KAAAqL,EAAA5B,EAAA2B,MAAAD,IAEAH,GAAAI,MAAArJ,OAAA0H,EAAA2B,MAAArJ,SACAiJ,EAAAI,MAAArJ,OAAA0H,EAAA2B,MAAArJ,YAEK,CAEL,OADAqJ,MACAD,EAAA,EAAqBA,EAAA1B,EAAA2B,MAAArJ,OAAuBoJ,IAC5CC,EAAApL,KAAAqL,EAAA5B,EAAA2B,MAAAD,IAEAF,GAAAxB,EAAAoB,KAA8BA,GAAApB,EAAAoB,GAAAK,KAAA,EAAAE,WAK9B,QAAAE,KACA,GAAAC,GAAAC,SAAAC,cAAA,QAGA,OAFAF,GAAA5O,KAAA,WACA+O,EAAAC,YAAAJ,GACAA,EAGA,QAAAF,GAAAtM,GACA,GAAAS,GAAAoM,EACAL,EAAAC,SAAAK,cAAA,SAAAC,EAAA,MAAA/M,EAAA8L,GAAA,KAEA,IAAAU,EAAA,CACA,GAAAQ,EAGA,MAAAC,EAOAT,GAAAU,WAAAlF,YAAAwE,GAIA,GAAAW,EAAA,CAEA,GAAAC,GAAAC,GACAb,GAAAc,MAAAf,KACA9L,EAAA8M,EAAAhD,KAAA,KAAAiC,EAAAY,GAAA,GACAP,EAAAU,EAAAhD,KAAA,KAAAiC,EAAAY,GAAA,OAGAZ,GAAAD,IACA9L,EAAA+M,EAAAjD,KAAA,KAAAiC,GACAK,EAAA,WACAL,EAAAU,WAAAlF,YAAAwE,GAMA,OAFA/L,GAAAT,GAEA,SAAAyN,GACA,GAAAA,EAAA,CACA,GAAAA,EAAAC,MAAA1N,EAAA0N,KACAD,EAAAE,QAAA3N,EAAA2N,OACAF,EAAApC,YAAArL,EAAAqL,UACA,MAEA5K,GAAAT,EAAAyN,OAEAZ,MAcA,QAAAU,GAAAf,EAAAoB,EAAAf,EAAA7M,GACA,GAAA0N,GAAAb,EAAA,GAAA7M,EAAA0N,GAEA,IAAAlB,EAAAqB,WACArB,EAAAqB,WAAAC,QAAAC,EAAAH,EAAAF,OACG,CACH,GAAAM,GAAAvB,SAAAwB,eAAAP,GACAQ,EAAA1B,EAAA0B,UACAA,GAAAN,IAAApB,EAAAxE,YAAAkG,EAAAN,IACAM,EAAAlL,OACAwJ,EAAA2B,aAAAH,EAAAE,EAAAN,IAEApB,EAAAI,YAAAoB,IAKA,QAAAR,GAAAhB,EAAAxM,GACA,GAAA0N,GAAA1N,EAAA0N,IACAC,EAAA3N,EAAA2N,MACAtC,EAAArL,EAAAqL,SAiBA,IAfAsC,GACAnB,EAAA4B,aAAA,QAAAT,GAEA7P,EAAAuQ,OACA7B,EAAA4B,aAAArB,EAAA/M,EAAA8L,IAGAT,IAGAqC,GAAA,mBAAArC,EAAAJ,QAAA,SAEAyC,GAAA,uDAAyD5C,KAAAQ,SAAAC,mBAAAC,KAAAC,UAAAJ,MAAA,OAGzDmB,EAAAqB,WACArB,EAAAqB,WAAAC,QAAAJ,MACG,CACH,KAAAlB,EAAA8B,YACA9B,EAAAxE,YAAAwE,EAAA8B,WAEA9B,GAAAI,YAAAH,SAAAwB,eAAAP,KArNA,GAAAa,GAAA,mBAAA9B,SAEA,uBAAA+B,gBACAD,EACA,SAAAE,OACA,0JAKA,IAAAC,GAAAjT,EAAA,IAeAyQ,KAQAS,EAAA4B,IAAA9B,SAAAE,MAAAF,SAAAkC,qBAAA,YACArB,EAAA,KACAD,EAAA,EACAL,GAAA,EACAC,EAAA,aACAnP,EAAA,KACAiP,EAAA,kBAIAI,EAAA,mBAAAyB,YAAA,eAAAC,KAAAD,UAAAE,UAAAC,cAEAlT,GAAAD,QAAA,SAAAoT,EAAAtD,EAAAuD,EAAAxK,GACAuI,EAAAiC,EAEAnR,EAAA2G,KAEA,IAAAuH,GAAA0C,EAAAM,EAAAtD,EAGA,OAFAK,GAAAC,GAEA,SAAAkD,GAEA,OADAC,MACArT,EAAA,EAAmBA,EAAAkQ,EAAAhJ,OAAmBlH,IAAA,CACtC,GAAA4O,GAAAsB,EAAAlQ,GACAmQ,EAAAC,EAAAxB,EAAAoB,GACAG,GAAAE,OACAgD,EAAAlO,KAAAgL,GAEAiD,GACAlD,EAAA0C,EAAAM,EAAAE,GACAnD,EAAAC,IAEAA,IAEA,QAAAlQ,GAAA,EAAmBA,EAAAqT,EAAAnM,OAAsBlH,IAAA,CACzC,GAAAmQ,GAAAkD,EAAArT,EACA,QAAAmQ,EAAAE,KAAA,CACA,OAAAC,GAAA,EAAuBA,EAAAH,EAAAI,MAAArJ,OAA2BoJ,IAClDH,EAAAI,MAAAD,WAEAF,GAAAD,EAAAH,OAwFA,IAAAiC,GAAA,WACA,GAAAqB,KAEA,iBAAAxB,EAAAyB,GAEA,MADAD,GAAAxB,GAAAyB,EACAD,EAAAE,OAAAC,SAAAnE,KAAA,WL0uCM,SAAUvP,EAAQD,GMt5CxB,GAAA4T,EAGAA,GAAA,WACA,MAAAlR,QAGA,KAEAkR,KAAAC,SAAA,qBAAAC,MAAA,QACC,MAAAC,GAED,gBAAArI,UACAkI,EAAAlI,QAOAzL,EAAAD,QAAA4T,GN65CM,SAAU3T,EAAQsD,EAAqB1D,GAE7C,YOh7CA,SAASmU,GAAW5P,GACZ1B,KAAKwN,GAAK9L,EAAI8L,GACdxN,KAAKsM,QAAU5K,EAAI4K,QACnBtM,KAAKuR,YAAc7P,EAAI6P,aAAe,GAEtCvR,KAAKwR,SAAW9P,EAAI8P,WAAY,EAChCxR,KAAKyR,OAAS/P,EAAI+P,QAAU,GAC5BzR,KAAK0R,KAAOhQ,EAAIgQ,MAAQ,GAExB1R,KAAK2R,MAAQjQ,EAAIiQ,UACjB3R,KAAKG,OAASuB,EAAIvB,QAAU,KAE5BH,KAAK4R,KAAOlQ,EAAIkQ,OAAQ,EAIhC,QAASC,GAAgBC,GACrB,MAAOA,GAAIlJ,MAAM,KAAKoI,OAAO,SAAAnS,GAAA,MAAMA,GAAE6F,OAAS,GAAgB,MAAT7F,EAAE,KPg6C5B1B,EAAoBU,EAAEgD,EAAqB,IAAK,WAAa,MAAOyQ,KACpEnU,EAAoBU,EAAEgD,EAAqB,IAAK,WAAa,MAAOgR,KACpE1U,EAAoBU,EAAEgD,EAAqB,IAAK,WAAa,MAAOkR,IO/5CnG,IAAMA,IACF/G,IAAK,SAAU2G,GACX,MAAOA,IAEXK,OAAQ,SAAUL,GACd,MAAOA,GAAMX,OAAO,SAAUiB,GAC1B,OAAQA,EAAKT,YAGrBU,UAAW,SAAUP,GACjB,MAAOA,GAAMX,OAAO,SAAUiB,GAC1B,MAAOA,GAAKT,cPg8ClB,SAAUjU,EAAQsD,EAAqB1D,GAE7C,YQp+CA0D,GAAA,gBRy+CM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,cS3+CA,SAAAgV,EAAAC,GAWA,QAAAC,GAAAxH,GACA,WAAAyH,KAAAzH,GAAA,OAAAA,EAGA,QAAA0H,GAAA1H,GACA,WAAAyH,KAAAzH,GAAA,OAAAA,EAGA,QAAA2H,GAAA3H,GACA,WAAAA,EAGA,QAAA4H,GAAA5H,GACA,WAAAA,EAMA,QAAA6H,GAAAC,GACA,MACA,gBAAAA,IACA,gBAAAA,IAEA,gBAAAA,IACA,iBAAAA,GASA,QAAA5Q,GAAAL,GACA,cAAAA,GAAA,gBAAAA,GAgBA,QAAAkR,GAAAlR,GACA,0BAAAmR,GAAAnV,KAAAgE,GAGA,QAAAoR,GAAAjI,GACA,0BAAAgI,GAAAnV,KAAAmN,GAMA,QAAAkI,GAAA9Q,GACA,GAAA3D,GAAA0U,WAAAC,OAAAhR,GACA,OAAA3D,IAAA,GAAA4U,KAAAC,MAAA7U,QAAA8U,SAAAnR,GAMA,QAAAoL,GAAApL,GACA,aAAAA,EACA,GACA,gBAAAA,GACAiL,KAAAC,UAAAlL,EAAA,QACAgR,OAAAhR,GAOA,QAAAoR,GAAApR,GACA,GAAA3D,GAAA0U,WAAA/Q,EACA,OAAAqR,OAAAhV,GAAA2D,EAAA3D,EAOA,QAAAiV,GACAzB,EACA0B,GAIA,OAFA3L,GAAA5J,OAAA+E,OAAA,MACAoK,EAAA0E,EAAAlJ,MAAA,KACApL,EAAA,EAAiBA,EAAA4P,EAAA1I,OAAiBlH,IAClCqK,EAAAuF,EAAA5P,KAAA,CAEA,OAAAgW,GACA,SAAAvR,GAAsB,MAAA4F,GAAA5F,EAAAwO,gBACtB,SAAAxO,GAAsB,MAAA4F,GAAA5F,IAgBtB,QAAAsM,GAAAkF,EAAArH,GACA,GAAAqH,EAAA/O,OAAA,CACA,GAAA4K,GAAAmE,EAAA/Q,QAAA0J,EACA,IAAAkD,GAAA,EACA,MAAAmE,GAAA7Q,OAAA0M,EAAA,IASA,QAAAoE,GAAAhS,EAAAI,GACA,MAAAnD,IAAAjB,KAAAgE,EAAAI,GAMA,QAAA6R,GAAAhS,GACA,GAAAiS,GAAA3V,OAAA+E,OAAA,KACA,iBAAA8O,GAEA,MADA8B,GAAA9B,KACA8B,EAAA9B,GAAAnQ,EAAAmQ,KAoCA,QAAA+B,GAAAlS,EAAAmS,GACA,QAAAC,GAAAC,GACA,GAAAvW,GAAAqO,UAAApH,MACA,OAAAjH,GACAA,EAAA,EACAkE,EAAAoK,MAAA+H,EAAAhI,WACAnK,EAAAjE,KAAAoW,EAAAE,GACArS,EAAAjE,KAAAoW,GAIA,MADAC,GAAAE,QAAAtS,EAAA+C,OACAqP,EAGA,QAAAG,GAAAvS,EAAAmS,GACA,MAAAnS,GAAAsK,KAAA6H,GAUA,QAAAK,GAAA/G,EAAAgH,GACAA,KAAA,CAGA,KAFA,GAAA5W,GAAA4P,EAAA1I,OAAA0P,EACAC,EAAA,GAAAvM,OAAAtK,GACAA,KACA6W,EAAA7W,GAAA4P,EAAA5P,EAAA4W,EAEA,OAAAC,GAMA,QAAAC,GAAAC,EAAAC,GACA,OAAA1S,KAAA0S,GACAD,EAAAzS,GAAA0S,EAAA1S,EAEA,OAAAyS,GAMA,QAAAE,GAAAhB,GAEA,OADA3M,MACAtJ,EAAA,EAAiBA,EAAAiW,EAAA/O,OAAgBlH,IACjCiW,EAAAjW,IACA8W,EAAAxN,EAAA2M,EAAAjW,GAGA,OAAAsJ,GAQA,QAAA6H,GAAAqF,EAAAU,EAAA9W,IAyBA,QAAA+W,GAAAX,EAAAU,GACA,GAAAV,IAAAU,EAAgB,QAChB,IAAAE,GAAA7S,EAAAiS,GACAa,EAAA9S,EAAA2S,EACA,KAAAE,IAAAC,EAsBG,OAAAD,IAAAC,GACH5B,OAAAe,KAAAf,OAAAyB,EAtBA,KACA,GAAAI,GAAAhN,MAAAC,QAAAiM,GACAe,EAAAjN,MAAAC,QAAA2M,EACA,IAAAI,GAAAC,EACA,MAAAf,GAAAtP,SAAAgQ,EAAAhQ,QAAAsP,EAAAgB,MAAA,SAAA3D,EAAA7T,GACA,MAAAmX,GAAAtD,EAAAqD,EAAAlX,KAEO,IAAAsX,GAAAC,EAQP,QAPA,IAAAE,GAAAhX,OAAA2D,KAAAoS,GACAkB,EAAAjX,OAAA2D,KAAA8S,EACA,OAAAO,GAAAvQ,SAAAwQ,EAAAxQ,QAAAuQ,EAAAD,MAAA,SAAAlT,GACA,MAAA6S,GAAAX,EAAAlS,GAAA4S,EAAA5S,MAMK,MAAAuP,GAEL,UASA,QAAA8D,GAAA1B,EAAAxR,GACA,OAAAzE,GAAA,EAAiBA,EAAAiW,EAAA/O,OAAgBlH,IACjC,GAAAmX,EAAAlB,EAAAjW,GAAAyE,GAAkC,MAAAzE,EAElC,UAMA,QAAA4X,GAAAzT,GACA,GAAA0T,IAAA,CACA,mBACAA,IACAA,GAAA,EACA1T,EAAAoK,MAAA/L,KAAA8L,aA0HA,QAAAwJ,GAAAxD,GACA,GAAAlU,IAAAkU,EAAA,IAAAyD,WAAA,EACA,aAAA3X,GAAA,KAAAA,EAMA,QAAA4X,GAAA9T,EAAAI,EAAAG,EAAA7D,GACAH,OAAAC,eAAAwD,EAAAI,GACA6Q,MAAA1Q,EACA7D,eACAqX,UAAA,EACAtX,cAAA,IAQA,QAAAuX,GAAAtT,GACA,IAAAuT,GAAApF,KAAAnO,GAAA,CAGA,GAAAwT,GAAAxT,EAAAwG,MAAA,IACA,iBAAAlH,GACA,OAAAlE,GAAA,EAAmBA,EAAAoY,EAAAlR,OAAqBlH,IAAA,CACxC,IAAAkE,EAAiB,MACjBA,KAAAkU,EAAApY,IAEA,MAAAkE,KA2DA,QAAAmU,GAAAC,GACA,wBAAAA,IAAA,cAAAvF,KAAAuF,EAAAzI,YAwKA,QAAA0I,GAAAC,GACAC,GAAAC,QAAmBC,GAAAxT,KAAAsT,GAAAC,QACnBD,GAAAC,OAAAF,EAGA,QAAAI,KACAH,GAAAC,OAAAC,GAAAE,MA2DA,QAAAC,GAAArU,GACA,UAAAsU,QAAAjE,iBAAAW,OAAAhR,IAOA,QAAAuU,GAAAC,GACA,GAAAC,GAAA,GAAAH,IACAE,EAAAE,IACAF,EAAAzS,KACAyS,EAAAG,SACAH,EAAAI,KACAJ,EAAAK,IACAL,EAAA1W,QACA0W,EAAAM,iBACAN,EAAAO,aAUA,OARAN,GAAAO,GAAAR,EAAAQ,GACAP,EAAAQ,SAAAT,EAAAS,SACAR,EAAA5U,IAAA2U,EAAA3U,IACA4U,EAAAS,UAAAV,EAAAU,UACAT,EAAAU,UAAAX,EAAAW,UACAV,EAAAW,UAAAZ,EAAAY,UACAX,EAAAY,UAAAb,EAAAa,UACAZ,EAAAa,UAAA,EACAb,EA4DA,QAAAc,GAAA7E,GACA8E,GAAA9E,EAoDA,QAAA+E,GAAAxB,EAAAyB,EAAA/V,GAEAsU,EAAA0B,UAAAD,EASA,QAAAE,GAAA3B,EAAAyB,EAAA/V,GACA,OAAApE,GAAA,EAAAC,EAAAmE,EAAA8C,OAAkClH,EAAAC,EAAOD,IAAA,CACzC,GAAAsE,GAAAF,EAAApE,EACAgY,GAAAU,EAAApU,EAAA6V,EAAA7V,KASA,QAAAgW,GAAAnF,EAAAoF,GACA,GAAAhW,EAAA4Q,kBAAA4D,KAAA,CAGA,GAAAyB,EAeA,OAdAtE,GAAAf,EAAA,WAAAA,EAAAsF,iBAAAC,IACAF,EAAArF,EAAAsF,OAEAR,KACAU,OACArQ,MAAAC,QAAA4K,IAAAC,EAAAD,KACA1U,OAAAma,aAAAzF,KACAA,EAAA0F,SAEAL,EAAA,GAAAE,IAAAvF,IAEAoF,GAAAC,GACAA,EAAAM,UAEAN,GAMA,QAAAO,GACA7W,EACAI,EACAG,EACAuW,EACAC,GAEA,GAAAC,GAAA,GAAAzC,IAEAxX,EAAAR,OAAA0a,yBAAAjX,EAAAI,EACA,KAAArD,IAAA,IAAAA,EAAAN,aAAA,CAKA,GAAAJ,GAAAU,KAAAJ,GACAN,IAAA,IAAA+N,UAAApH,SACAzC,EAAAP,EAAAI,GAEA,IAAA8W,GAAAna,KAAAyG,IAEA2T,GAAAJ,GAAAX,EAAA7V,EACAhE,QAAAC,eAAAwD,EAAAI,GACA1D,YAAA,EACAD,cAAA,EACAE,IAAA,WACA,GAAAsU,GAAA5U,IAAAL,KAAAgE,GAAAO,CAUA,OATAgU,IAAAC,SACAwC,EAAAI,SACAD,IACAA,EAAAH,IAAAI,SACAhR,MAAAC,QAAA4K,IACAoG,EAAApG,KAIAA,GAEAzN,IAAA,SAAA8T,GACA,GAAArG,GAAA5U,IAAAL,KAAAgE,GAAAO,CAEA+W,KAAArG,GAAAqG,OAAArG,QAOAiG,EACAA,EAAAlb,KAAAgE,EAAAsX,GAEA/W,EAAA+W,EAEAH,GAAAJ,GAAAX,EAAAkB,GACAN,EAAAO,cAUA,QAAA/T,GAAAgR,EAAApU,EAAAG,GAMA,GAAA6F,MAAAC,QAAAmO,IAAAnD,EAAAjR,GAGA,MAFAoU,GAAAxR,OAAAwO,KAAAgG,IAAAhD,EAAAxR,OAAA5C,GACAoU,EAAAtT,OAAAd,EAAA,EAAAG,GACAA,CAEA,IAAAH,IAAAoU,MAAApU,IAAA7D,QAAAS,WAEA,MADAwX,GAAApU,GAAAG,EACAA,CAEA,IAAA+V,GAAA,EAAAC,MACA,OAAA/B,GAAAmC,QAAAL,KAAAM,QAKArW,EAEA+V,GAIAO,EAAAP,EAAArF,MAAA7Q,EAAAG,GACA+V,EAAAU,IAAAO,SACAhX,IALAiU,EAAApU,GAAAG,EACAA,GAUA,QAAAkX,GAAAjD,EAAApU,GAMA,GAAAgG,MAAAC,QAAAmO,IAAAnD,EAAAjR,GAEA,WADAoU,GAAAtT,OAAAd,EAAA,EAGA,IAAAkW,GAAA,EAAAC,MACA/B,GAAAmC,QAAAL,KAAAM,SAOA5E,EAAAwC,EAAApU,WAGAoU,GAAApU,GACAkW,GAGAA,EAAAU,IAAAO,UAOA,QAAAF,GAAApG,GACA,OAAAtB,OAAA,GAAA7T,EAAA,EAAAC,EAAAkV,EAAAjO,OAAiDlH,EAAAC,EAAOD,IACxD6T,EAAAsB,EAAAnV,GACA6T,KAAA4G,QAAA5G,EAAA4G,OAAAS,IAAAI,SACAhR,MAAAC,QAAAsJ,IACA0H,EAAA1H,GAgCA,QAAA+H,GAAA7E,EAAA8E,GACA,IAAAA,EAAc,MAAA9E,EAGd,QAFAzS,GAAAwX,EAAAC,EACA3X,EAAA3D,OAAA2D,KAAAyX,GACA7b,EAAA,EAAiBA,EAAAoE,EAAA8C,OAAiBlH,IAClCsE,EAAAF,EAAApE,GACA8b,EAAA/E,EAAAzS,GACAyX,EAAAF,EAAAvX,GACA4R,EAAAa,EAAAzS,GAEK8Q,EAAA0G,IAAA1G,EAAA2G,IACLH,EAAAE,EAAAC,GAFArU,EAAAqP,EAAAzS,EAAAyX,EAKA,OAAAhF,GAMA,QAAAiF,GACAC,EACAC,EACAC,GAEA,MAAAA,GAoBA,WAEA,GAAAC,GAAA,kBAAAF,GACAA,EAAAhc,KAAAic,KACAD,EACAG,EAAA,kBAAAJ,GACAA,EAAA/b,KAAAic,KACAF,CACA,OAAAG,GACAR,EAAAQ,EAAAC,GAEAA,GA7BAH,EAGAD,EAQA,WACA,MAAAL,GACA,kBAAAM,KAAAhc,KAAAsC,WAAA0Z,EACA,kBAAAD,KAAA/b,KAAAsC,WAAAyZ,IAVAC,EAHAD,EA2DA,QAAAK,GACAL,EACAC,GAEA,MAAAA,GACAD,EACAA,EAAA7Y,OAAA8Y,GACA5R,MAAAC,QAAA2R,GACAA,GACAA,GACAD,EAcA,QAAAM,GACAN,EACAC,EACAC,EACA7X,GAEA,GAAAgF,GAAA7I,OAAA+E,OAAAyW,GAAA,KACA,OAAAC,GAEApF,EAAAxN,EAAA4S,GAEA5S,EAyGA,QAAAkT,GAAAxa,EAAAma,GACA,GAAAM,GAAAza,EAAAya,KACA,IAAAA,EAAA,CACA,GACAzc,GAAAyE,EAAAnE,EADAgJ,IAEA,IAAAgB,MAAAC,QAAAkS,GAEA,IADAzc,EAAAyc,EAAAvV,OACAlH,KAEA,iBADAyE,EAAAgY,EAAAzc,MAEAM,EAAAoc,GAAAjY,GACA6E,EAAAhJ,IAAqBwB,KAAA,WAKlB,IAAAsT,EAAAqH,GACH,OAAAnY,KAAAmY,GACAhY,EAAAgY,EAAAnY,GACAhE,EAAAoc,GAAApY,GACAgF,EAAAhJ,GAAA8U,EAAA3Q,GACAA,GACW3C,KAAA2C,EASXzC,GAAAya,MAAAnT,GAMA,QAAAqT,GAAA3a,EAAAma,GACA,GAAAS,GAAA5a,EAAA4a,MACA,IAAAA,EAAA,CACA,GAAAC,GAAA7a,EAAA4a,SACA,IAAAtS,MAAAC,QAAAqS,GACA,OAAA5c,GAAA,EAAmBA,EAAA4c,EAAA1V,OAAmBlH,IACtC6c,EAAAD,EAAA5c,KAA+B6b,KAAAe,EAAA5c,QAE5B,IAAAoV,EAAAwH,GACH,OAAAtY,KAAAsY,GAAA,CACA,GAAAnY,GAAAmY,EAAAtY,EACAuY,GAAAvY,GAAA8Q,EAAA3Q,GACAqS,GAAkB+E,KAAAvX,GAAYG,IACnBoX,KAAApX,KAcX,QAAAqY,GAAA9a,GACA,GAAA+a,GAAA/a,EAAAgb,UACA,IAAAD,EACA,OAAAzY,KAAAyY,GAAA,CACA,GAAA/E,GAAA+E,EAAAzY,EACA,mBAAA0T,KACA+E,EAAAzY,IAAqBmK,KAAAuJ,EAAArT,OAAAqT,KAoBrB,QAAAiF,GACAta,EACA2F,EACA6T,GAgCA,QAAAe,GAAA5Y,GACA,GAAA6Y,GAAAC,GAAA9Y,IAAA+Y,EACArb,GAAAsC,GAAA6Y,EAAAxa,EAAA2B,GAAAgE,EAAAhE,GAAA6X,EAAA7X,GA5BA,kBAAAgE,KACAA,IAAAtG,SAGAwa,EAAAlU,EAAA6T,GACAQ,EAAArU,EAAA6T,GACAW,EAAAxU,EACA,IAAAgV,GAAAhV,EAAAiV,OAIA,IAHAD,IACA3a,EAAAsa,EAAAta,EAAA2a,EAAAnB,IAEA7T,EAAAkV,OACA,OAAAxd,GAAA,EAAAC,EAAAqI,EAAAkV,OAAAtW,OAA4ClH,EAAAC,EAAOD,IACnD2C,EAAAsa,EAAAta,EAAA2F,EAAAkV,OAAAxd,GAAAmc,EAGA,IACA7X,GADAtC,IAEA,KAAAsC,IAAA3B,GACAua,EAAA5Y,EAEA,KAAAA,IAAAgE,GACA4N,EAAAvT,EAAA2B,IACA4Y,EAAA5Y,EAOA,OAAAtC,GAQA,QAAAyb,GACAzb,EACAF,EACAkO,EACA0N,GAGA,mBAAA1N,GAAA,CAGA,GAAA2N,GAAA3b,EAAAF,EAEA,IAAAoU,EAAAyH,EAAA3N,GAA2B,MAAA2N,GAAA3N,EAC3B,IAAA4N,GAAAlB,GAAA1M,EACA,IAAAkG,EAAAyH,EAAAC,GAAoC,MAAAD,GAAAC,EACpC,IAAAC,GAAAC,GAAAF,EACA,IAAA1H,EAAAyH,EAAAE,GAAqC,MAAAF,GAAAE,EASrC,OAPAF,GAAA3N,IAAA2N,EAAAC,IAAAD,EAAAE,IAYA,QAAAE,GACAzZ,EACA0Z,EACAC,EACA9B,GAEA,GAAA+B,GAAAF,EAAA1Z,GACA6Z,GAAAjI,EAAA+H,EAAA3Z,GACA6Q,EAAA8I,EAAA3Z,GAEA8Z,EAAAC,GAAA5K,QAAAyK,EAAApc,KACA,IAAAsc,GAAA,EACA,GAAAD,IAAAjI,EAAAgI,EAAA,WACA/I,GAAA,MACK,SAAAA,OAAAmJ,GAAAha,GAAA,CAGL,GAAAia,GAAAF,GAAA5I,OAAAyI,EAAApc,OACAyc,EAAA,GAAAH,EAAAG,KACApJ,GAAA,GAKA,OAAAL,KAAAK,EAAA,CACAA,EAAAqJ,EAAArC,EAAA+B,EAAA5Z,EAGA,IAAAma,GAAAxE,EACAD,IAAA,GACAM,EAAAnF,GACA6E,EAAAyE,GASA,MAAAtJ,GAMA,QAAAqJ,GAAArC,EAAA+B,EAAA5Z,GAEA,GAAA4R,EAAAgI,EAAA,YAGA,GAAAlG,GAAAkG,EAAAnc,OAYA,OAAAoa,MAAAnR,SAAAiT,eACAnJ,KAAAqH,EAAAnR,SAAAiT,UAAA3Z,QACAwQ,KAAAqH,EAAAuC,OAAApa,GAEA6X,EAAAuC,OAAApa,GAIA,kBAAA0T,IAAA,aAAA2G,GAAAT,EAAApc,MACAkW,EAAA9X,KAAAic,GACAnE,GAsFA,QAAA2G,IAAAxa,GACA,GAAAya,GAAAza,KAAA0L,WAAA+O,MAAA,qBACA,OAAAA,KAAA,MAGA,QAAAC,IAAArI,EAAAU,GACA,MAAAyH,IAAAnI,KAAAmI,GAAAzH,GAGA,QAAAmH,IAAAvc,EAAAgd,GACA,IAAAxU,MAAAC,QAAAuU,GACA,MAAAD,IAAAC,EAAAhd,GAAA,IAEA,QAAA9B,GAAA,EAAAqO,EAAAyQ,EAAA5X,OAA6ClH,EAAAqO,EAASrO,IACtD,GAAA6e,GAAAC,EAAA9e,GAAA8B,GACA,MAAA9B,EAGA,UAKA,QAAA+e,IAAApV,EAAAwS,EAAA6C,GACA,GAAA7C,EAEA,IADA,GAAA8C,GAAA9C,EACA8C,IAAAC,SAAA,CACA,GAAAC,GAAAF,EAAAjU,SAAAoU,aACA,IAAAD,EACA,OAAAnf,GAAA,EAAuBA,EAAAmf,EAAAjY,OAAkBlH,IACzC,IACA,GAAAqf,IAAA,IAAAF,EAAAnf,GAAAE,KAAA+e,EAAAtV,EAAAwS,EAAA6C,EACA,IAAAK,EAA0B,OACf,MAAAxL,GACXyL,GAAAzL,EAAAoL,EAAA,uBAMAK,GAAA3V,EAAAwS,EAAA6C,GAGA,QAAAM,IAAA3V,EAAAwS,EAAA6C,GACA,GAAAzY,GAAAgZ,aACA,IACA,MAAAhZ,IAAAgZ,aAAArf,KAAA,KAAAyJ,EAAAwS,EAAA6C,GACK,MAAAnL,GACL2L,GAAA3L,EAAA,4BAGA2L,GAAA7V,EAAAwS,EAAA6C,GAGA,QAAAQ,IAAA7V,EAAAwS,EAAA6C,GAKA,IAAAS,KAAAC,IAAA,mBAAAC,SAGA,KAAAhW,EAFAgW,SAAAC,MAAAjW,GAYA,QAAAkW,MACAC,IAAA,CACA,IAAAC,GAAAC,GAAAxY,MAAA,EACAwY,IAAA9Y,OAAA,CACA,QAAAlH,GAAA,EAAiBA,EAAA+f,EAAA7Y,OAAmBlH,IACpC+f,EAAA/f,KAiEA,QAAAigB,IAAA9b,GACA,MAAAA,GAAA+b,YAAA/b,EAAA+b,UAAA,WACAC,IAAA,CACA,IAAA7W,GAAAnF,EAAAoK,MAAA,KAAAD,UAEA,OADA6R,KAAA,EACA7W,IAIA,QAAAxC,IAAAuC,EAAAiN,GACA,GAAA8J,EAqBA,IApBAJ,GAAA7a,KAAA,WACA,GAAAkE,EACA,IACAA,EAAAnJ,KAAAoW,GACO,MAAAzC,GACPkL,GAAAlL,EAAAyC,EAAA,gBAEK8J,IACLA,EAAA9J,KAGAwJ,KACAA,IAAA,EACAK,GACAE,KAEAC,OAIAjX,GAAA,mBAAAG,SACA,UAAAA,SAAA,SAAAC,GACA2W,EAAA3W,IAkHA,QAAA8W,IAAA9b,GACA+b,GAAA/b,EAAAgc,IACAA,GAAAC,QAGA,QAAAF,IAAA/b,EAAAkc,GACA,GAAA3gB,GAAAoE,EACAwc,EAAAtW,MAAAC,QAAA9F,EACA,OAAAmc,IAAArc,EAAAE,IAAAhE,OAAAogB,SAAApc,gBAAAsU,KAAA,CAGA,GAAAtU,EAAAgW,OAAA,CACA,GAAAqG,GAAArc,EAAAgW,OAAAS,IAAAlL,EACA,IAAA2Q,EAAAI,IAAAD,GACA,MAEAH,GAAA7d,IAAAge,GAEA,GAAAF,EAEA,IADA5gB,EAAAyE,EAAAyC,OACAlH,KAAiBwgB,GAAA/b,EAAAzE,GAAA2gB,OAIjB,KAFAvc,EAAA3D,OAAA2D,KAAAK,GACAzE,EAAAoE,EAAA8C,OACAlH,KAAiBwgB,GAAA/b,EAAAL,EAAApE,IAAA2gB,IAqBjB,QAAAK,IAAAC,GACA,QAAAC,KACA,GAAAC,GAAA7S,UAEA2S,EAAAC,EAAAD,GACA,KAAA3W,MAAAC,QAAA0W,GAOA,MAAAA,GAAA1S,MAAA,KAAAD,UALA,QADA4K,GAAA+H,EAAAzZ,QACAxH,EAAA,EAAqBA,EAAAkZ,EAAAhS,OAAmBlH,IACxCkZ,EAAAlZ,GAAAuO,MAAA,KAAA4S,GAQA,MADAD,GAAAD,MACAC,EAGA,QAAAE,IACAzd,EACA0d,EACAve,EACAwe,EACAnF,GAEA,GAAA7b,GAAA2e,EAAAsC,EAAAC,CACA,KAAAlhB,IAAAqD,GACAsb,EAAAtb,EAAArD,GACAihB,EAAAF,EAAA/gB,GACAkhB,EAAAC,GAAAnhB,GAEAuU,EAAAoK,KAKKpK,EAAA0M,IACL1M,EAAAoK,EAAAgC,OACAhC,EAAAtb,EAAArD,GAAA0gB,GAAA/B,IAEAnc,EAAA0e,EAAAlhB,KAAA2e,EAAAuC,EAAA5J,KAAA4J,EAAAnC,QAAAmC,EAAAE,QAAAF,EAAAG,SACK1C,IAAAsC,IACLA,EAAAN,IAAAhC,EACAtb,EAAArD,GAAAihB,GAGA,KAAAjhB,IAAA+gB,GACAxM,EAAAlR,EAAArD,MACAkhB,EAAAC,GAAAnhB,GACAghB,EAAAE,EAAAlhB,KAAA+gB,EAAA/gB,GAAAkhB,EAAAnC,UAOA,QAAAuC,IAAA5J,EAAA6J,EAAAvf,GAOA,QAAAwf,KACAxf,EAAAiM,MAAA/L,KAAA8L,WAGAyC,EAAAmQ,EAAAD,IAAAa,GAVA9J,YAAAe,MACAf,IAAAxR,KAAAlE,OAAA0V,EAAAxR,KAAAlE,SAEA,IAAA4e,GACAa,EAAA/J,EAAA6J,EASAhN,GAAAkN,GAEAb,EAAAF,IAAAc,IAGA/M,EAAAgN,EAAAd,MAAAjM,EAAA+M,EAAAC,SAEAd,EAAAa,EACAb,EAAAD,IAAA9b,KAAA2c,IAGAZ,EAAAF,IAAAe,EAAAD,IAIAZ,EAAAc,QAAA,EACAhK,EAAA6J,GAAAX,EAKA,QAAAe,IACAzb,EACA8R,EACAa,GAKA,GAAA6E,GAAA1F,EAAAtW,QAAAya,KACA,KAAA5H,EAAAmJ,GAAA,CAGA,GAAA1U,MACA4Y,EAAA1b,EAAA0b,MACAzF,EAAAjW,EAAAiW,KACA,IAAA1H,EAAAmN,IAAAnN,EAAA0H,GACA,OAAAnY,KAAA0Z,GAAA,CACA,GAAAmE,GAAA7D,GAAAha,EAiBA8d,IAAA9Y,EAAAmT,EAAAnY,EAAA6d,GAAA,IACAC,GAAA9Y,EAAA4Y,EAAA5d,EAAA6d,GAAA,GAGA,MAAA7Y,IAGA,QAAA8Y,IACA9Y,EACA+Y,EACA/d,EACA6d,EACAG,GAEA,GAAAvN,EAAAsN,GAAA,CACA,GAAAnM,EAAAmM,EAAA/d,GAKA,MAJAgF,GAAAhF,GAAA+d,EAAA/d,GACAge,SACAD,GAAA/d,IAEA,CACK,IAAA4R,EAAAmM,EAAAF,GAKL,MAJA7Y,GAAAhF,GAAA+d,EAAAF,GACAG,SACAD,GAAAF,IAEA,EAGA,SAiBA,QAAAI,IAAAnJ,GACA,OAAApZ,GAAA,EAAiBA,EAAAoZ,EAAAlS,OAAqBlH,IACtC,GAAAsK,MAAAC,QAAA6O,EAAApZ,IACA,MAAAsK,OAAApJ,UAAAkC,OAAAmL,SAAA6K,EAGA,OAAAA,GAOA,QAAAoJ,IAAApJ,GACA,MAAAlE,GAAAkE,IACAN,EAAAM,IACA9O,MAAAC,QAAA6O,GACAqJ,GAAArJ,OACAtE,GAGA,QAAA4N,IAAAC,GACA,MAAA5N,GAAA4N,IAAA5N,EAAA4N,EAAAtJ,OAAApE,EAAA0N,EAAAhJ,WAGA,QAAA8I,IAAArJ,EAAAwJ,GACA,GACA5iB,GAAAI,EAAAyiB,EAAAC,EADAxZ,IAEA,KAAAtJ,EAAA,EAAaA,EAAAoZ,EAAAlS,OAAqBlH,IAClCI,EAAAgZ,EAAApZ,GACA6U,EAAAzU,IAAA,iBAAAA,KACAyiB,EAAAvZ,EAAApC,OAAA,EACA4b,EAAAxZ,EAAAuZ,GAEAvY,MAAAC,QAAAnK,GACAA,EAAA8G,OAAA,IACA9G,EAAAqiB,GAAAriB,GAAAwiB,GAAA,QAAA5iB,GAEA0iB,GAAAtiB,EAAA,KAAAsiB,GAAAI,KACAxZ,EAAAuZ,GAAA/J,EAAAgK,EAAAzJ,KAAAjZ,EAAA,GAAAiZ,MACAjZ,EAAA2iB,SAEAzZ,EAAAnE,KAAAoJ,MAAAjF,EAAAlJ,IAEK8U,EAAA9U,GACLsiB,GAAAI,GAIAxZ,EAAAuZ,GAAA/J,EAAAgK,EAAAzJ,KAAAjZ,GACO,KAAAA,GAEPkJ,EAAAnE,KAAA2T,EAAA1Y,IAGAsiB,GAAAtiB,IAAAsiB,GAAAI,GAEAxZ,EAAAuZ,GAAA/J,EAAAgK,EAAAzJ,KAAAjZ,EAAAiZ,OAGArE,EAAAoE,EAAA4J,WACAjO,EAAA3U,EAAA+Y,MACAtE,EAAAzU,EAAAkE,MACAyQ,EAAA6N,KACAxiB,EAAAkE,IAAA,UAAAse,EAAA,IAAA5iB,EAAA,MAEAsJ,EAAAnE,KAAA/E,IAIA,OAAAkJ,GAKA,QAAA2Z,IAAAC,EAAAC,GAOA,OALAD,EAAAniB,YACAqiB,IAAA,WAAAF,EAAAG,OAAAC,gBAEAJ,IAAAnhB,SAEAwC,EAAA2e,GACAC,EAAArM,OAAAoM,GACAA,EAGA,QAAAK,IACAC,EACAhd,EACAjE,EACA6W,EACAD,GAEA,GAAAwJ,GAAAc,IAGA,OAFAd,GAAAnJ,aAAAgK,EACAb,EAAAe,WAAoBld,OAAAjE,UAAA6W,WAAAD,OACpBwJ,EAGA,QAAAgB,IACAH,EACAI,EACArhB,GAEA,GAAAyS,EAAAwO,EAAA5D,QAAA7K,EAAAyO,EAAAK,WACA,MAAAL,GAAAK,SAGA,IAAA9O,EAAAyO,EAAAM,UACA,MAAAN,GAAAM,QAGA,IAAA9O,EAAAwO,EAAAO,UAAAhP,EAAAyO,EAAAQ,aACA,MAAAR,GAAAQ,WAGA,KAAAjP,EAAAyO,EAAAS,UAGG,CACH,GAAAA,GAAAT,EAAAS,UAAA1hB,GACAwH,GAAA,EAEAma,EAAA,WACA,OAAAlkB,GAAA,EAAAC,EAAAgkB,EAAA/c,OAA0ClH,EAAAC,EAAOD,IACjDikB,EAAAjkB,GAAAmkB,gBAIA1a,EAAAmO,EAAA,SAAAtO,GAEAka,EAAAM,SAAAb,GAAA3Z,EAAAsa,GAGA7Z,GACAma,MAIAE,EAAAxM,EAAA,SAAAyM,GAKAtP,EAAAyO,EAAAK,aACAL,EAAA5D,OAAA,EACAsE,OAIA5a,EAAAka,EAAA/Z,EAAA2a,EA6CA,OA3CA7f,GAAA+E,KACA,kBAAAA,GAAA5E,KAEAmQ,EAAA2O,EAAAM,WACAxa,EAAA5E,KAAA+E,EAAA2a,GAEOrP,EAAAzL,EAAAgb,YAAA,kBAAAhb,GAAAgb,UAAA5f,OACP4E,EAAAgb,UAAA5f,KAAA+E,EAAA2a,GAEArP,EAAAzL,EAAAsW,SACA4D,EAAAK,UAAAZ,GAAA3Z,EAAAsW,MAAAgE,IAGA7O,EAAAzL,EAAAya,WACAP,EAAAQ,YAAAf,GAAA3Z,EAAAya,QAAAH,GACA,IAAAta,EAAAib,MACAf,EAAAO,SAAA,EAEAS,WAAA,WACA3P,EAAA2O,EAAAM,WAAAjP,EAAA2O,EAAA5D,SACA4D,EAAAO,SAAA,EACAG,MAEa5a,EAAAib,OAAA,MAIbxP,EAAAzL,EAAAmb,UACAD,WAAA,WACA3P,EAAA2O,EAAAM,WACAM,EAGA,OAGW9a,EAAAmb,WAKX1a,GAAA,EAEAyZ,EAAAO,QACAP,EAAAQ,YACAR,EAAAM,SA/EAN,EAAAS,SAAA9e,KAAA5C,GAqFA,QAAAmiB,IAAA/B,GACA,MAAAA,GAAAhJ,WAAAgJ,EAAAnJ,aAKA,QAAAmL,IAAAvL,GACA,GAAA9O,MAAAC,QAAA6O,GACA,OAAApZ,GAAA,EAAmBA,EAAAoZ,EAAAlS,OAAqBlH,IAAA,CACxC,GAAAI,GAAAgZ,EAAApZ,EACA,IAAA+U,EAAA3U,KAAA2U,EAAA3U,EAAAmZ,mBAAAmL,GAAAtkB,IACA,MAAAA,IAUA,QAAAwkB,IAAAzI,GACAA,EAAA0I,QAAApkB,OAAA+E,OAAA,MACA2W,EAAA2I,eAAA,CAEA,IAAAC,GAAA5I,EAAAnR,SAAAga,gBACAD,IACAE,GAAA9I,EAAA4I,GAMA,QAAAjiB,IAAA0e,EAAArd,EAAAyT,GACAA,EACAc,GAAAwM,MAAA1D,EAAArd,GAEAuU,GAAAyM,IAAA3D,EAAArd,GAIA,QAAAihB,IAAA5D,EAAArd,GACAuU,GAAA2M,KAAA7D,EAAArd,GAGA,QAAA8gB,IACA9I,EACA4I,EACAO,GAEA5M,GAAAyD,EACAiF,GAAA2D,EAAAO,MAA+CxiB,GAAAsiB,GAAAjJ,GAC/CzD,OAAA5D,GAgHA,QAAAyQ,IACAnM,EACA7W,GAEA,GAAAijB,KACA,KAAApM,EACA,MAAAoM,EAEA,QAAAxlB,GAAA,EAAAC,EAAAmZ,EAAAlS,OAAsClH,EAAAC,EAAOD,IAAA,CAC7C,GAAAsI,GAAA8Q,EAAApZ,GACAwG,EAAA8B,EAAA9B,IAOA,IALAA,KAAA0b,OAAA1b,EAAA0b,MAAAuD,YACAjf,GAAA0b,MAAAuD,KAIAnd,EAAA/F,aAAA+F,EAAAsR,YAAArX,IACAiE,GAAA,MAAAA,EAAAif,MAUAD,EAAAzjB,UAAAyjB,EAAAzjB,aAAAoD,KAAAmD,OATA,CACA,GAAAhI,GAAAkG,EAAAif,KACAA,EAAAD,EAAAllB,KAAAklB,EAAAllB,MACA,cAAAgI,EAAA6Q,IACAsM,EAAAtgB,KAAAoJ,MAAAkX,EAAAnd,EAAA8Q,cAEAqM,EAAAtgB,KAAAmD,IAOA,OAAAod,KAAAF,GACAA,EAAAE,GAAAlO,MAAAmO,WACAH,GAAAE,EAGA,OAAAF,GAGA,QAAAG,IAAAhD,GACA,MAAAA,GAAAhJ,YAAAgJ,EAAAnJ,cAAA,MAAAmJ,EAAAtJ,KAGA,QAAAuM,IACA3E,EACA3X,GAEAA,OACA,QAAAtJ,GAAA,EAAiBA,EAAAihB,EAAA/Z,OAAgBlH,IACjCsK,MAAAC,QAAA0W,EAAAjhB,IACA4lB,GAAA3E,EAAAjhB,GAAAsJ,GAEAA,EAAA2X,EAAAjhB,GAAAsE,KAAA2c,EAAAjhB,GAAAmE,EAGA,OAAAmF,GAQA,QAAAuc,IAAA1J,GACA,GAAAna,GAAAma,EAAAnR,SAGArI,EAAAX,EAAAW,MACA,IAAAA,IAAAX,EAAA8jB,SAAA,CACA,KAAAnjB,EAAAqI,SAAA8a,UAAAnjB,EAAAuc,SACAvc,IAAAuc,OAEAvc,GAAAojB,UAAA5gB,KAAAgX,GAGAA,EAAA+C,QAAAvc,EACAwZ,EAAA6J,MAAArjB,IAAAqjB,MAAA7J,EAEAA,EAAA4J,aACA5J,EAAA8J,SAEA9J,EAAA+J,SAAA,KACA/J,EAAAgK,UAAA,KACAhK,EAAAiK,iBAAA,EACAjK,EAAAkK,YAAA,EACAlK,EAAAmK,cAAA,EACAnK,EAAAoK,mBAAA,EAiGA,QAAAC,IACArK,EACAsK,EACAC,GAEAvK,EAAAwK,IAAAF,EACAtK,EAAAnR,SAAA/I,SACAka,EAAAnR,SAAA/I,OAAAwhB,IAmBAmD,GAAAzK,EAAA,cAEA,IAAA0K,EAqCA,OAjBAA,GAAA,WACA1K,EAAA2K,QAAA3K,EAAA4K,UAAAL,IAOA,GAAAM,IAAA7K,EAAA0K,EAAA1V,EAAA,SACAuV,GAAA,EAIA,MAAAvK,EAAA1Z,SACA0Z,EAAAkK,YAAA,EACAO,GAAAzK,EAAA,YAEAA,EAGA,QAAA8K,IACA9K,EACA8B,EACA8G,EACAmC,EACAC,GAQA,GAAAC,MACAD,GACAhL,EAAAnR,SAAAqc,iBACAH,EAAA1gB,KAAA8gB,aACAnL,EAAAoL,eAAAC,GAkBA,IAfArL,EAAAnR,SAAAyc,aAAAP,EACA/K,EAAA1Z,OAAAykB,EAEA/K,EAAAuL,SACAvL,EAAAuL,OAAA/kB,OAAAukB,GAEA/K,EAAAnR,SAAAqc,gBAAAF,EAKAhL,EAAAwL,OAAAT,EAAA1gB,KAAA0b,OAAAsF,GACArL,EAAAyL,WAAA7C,GAAAyC,GAGAvJ,GAAA9B,EAAAnR,SAAAyR,MAAA,CACAzC,GAAA,EAGA,QAFAyC,GAAAN,EAAAuC,OACAmJ,EAAA1L,EAAAnR,SAAA8c,cACA9nB,EAAA,EAAmBA,EAAA6nB,EAAA3gB,OAAqBlH,IAAA,CACxC,GAAAsE,GAAAujB,EAAA7nB,GACAge,EAAA7B,EAAAnR,SAAAyR,KACAA,GAAAnY,GAAAyZ,EAAAzZ,EAAA0Z,EAAAC,EAAA9B,GAEAnC,GAAA,GAEAmC,EAAAnR,SAAAiT,YAIA8G,KAAAyC,EACA,IAAAlC,GAAAnJ,EAAAnR,SAAAga,gBACA7I,GAAAnR,SAAAga,iBAAAD,EACAE,GAAA9I,EAAA4I,EAAAO,GAGA8B,IACAjL,EAAA4L,OAAAxC,GAAA4B,EAAAD,EAAA3kB,SACA4Z,EAAAgI,gBAQA,QAAA6D,IAAA7L,GACA,KAAAA,QAAA+C,UACA,GAAA/C,EAAAgK,UAAuB,QAEvB,UAGA,QAAA8B,IAAA9L,EAAA+L,GACA,GAAAA,GAEA,GADA/L,EAAAiK,iBAAA,EACA4B,GAAA7L,GACA,WAEG,IAAAA,EAAAiK,gBACH,MAEA,IAAAjK,EAAAgK,WAAA,OAAAhK,EAAAgK,UAAA,CACAhK,EAAAgK,WAAA,CACA,QAAAnmB,GAAA,EAAmBA,EAAAmc,EAAA4J,UAAA7e,OAAyBlH,IAC5CioB,GAAA9L,EAAA4J,UAAA/lB,GAEA4mB,IAAAzK,EAAA,cAIA,QAAAgM,IAAAhM,EAAA+L,GACA,KAAAA,IACA/L,EAAAiK,iBAAA,EACA4B,GAAA7L,KAIAA,EAAAgK,WAAA,CACAhK,EAAAgK,WAAA,CACA,QAAAnmB,GAAA,EAAmBA,EAAAmc,EAAA4J,UAAA7e,OAAyBlH,IAC5CmoB,GAAAhM,EAAA4J,UAAA/lB,GAEA4mB,IAAAzK,EAAA,gBAIA,QAAAyK,IAAAzK,EAAA7Z,GAEAiW,GACA,IAAA6P,GAAAjM,EAAAnR,SAAA1I,EACA,IAAA8lB,EACA,OAAApoB,GAAA,EAAAsQ,EAAA8X,EAAAlhB,OAAwClH,EAAAsQ,EAAOtQ,IAC/C,IACAooB,EAAApoB,GAAAE,KAAAic,GACO,MAAAtI,GACPkL,GAAAlL,EAAAsI,EAAA7Z,EAAA,SAIA6Z,EAAA2I,eACA3I,EAAAkM,MAAA,QAAA/lB,GAEAsW,IAmBA,QAAA0P,MACAxW,GAAAyW,GAAArhB,OAAAshB,GAAAthB,OAAA,EACA6Z,MAIA0H,GAAAC,IAAA,EAMA,QAAAC,MACAD,IAAA,CACA,IAAAE,GAAA5Y,CAcA,KAJAuY,GAAAM,KAAA,SAAArS,EAAAU,GAA8B,MAAAV,GAAAxG,GAAAkH,EAAAlH,KAI9B8B,GAAA,EAAiBA,GAAAyW,GAAArhB,OAAsB4K,KACvC8W,EAAAL,GAAAzW,IACA9B,EAAA4Y,EAAA5Y,GACA+Q,GAAA/Q,GAAA,KACA4Y,EAAAE,KAmBA,IAAAC,GAAAP,GAAAhhB,QACAwhB,EAAAT,GAAA/gB,OAEA8gB,MAGAW,GAAAF,GACAG,GAAAF,GAIA7b,IAAA5G,GAAA4G,UACAA,GAAAzJ,KAAA,SAIA,QAAAwlB,IAAAX,GAEA,IADA,GAAAvoB,GAAAuoB,EAAArhB,OACAlH,KAAA,CACA,GAAA4oB,GAAAL,EAAAvoB,GACAmc,EAAAyM,EAAAzM,EACAA,GAAA+J,WAAA0C,GAAAzM,EAAAkK,YACAO,GAAAzK,EAAA,YASA,QAAAgN,IAAAhN,GAGAA,EAAAgK,WAAA,EACAqC,GAAArjB,KAAAgX,GAGA,QAAA8M,IAAAV,GACA,OAAAvoB,GAAA,EAAiBA,EAAAuoB,EAAArhB,OAAkBlH,IACnCuoB,EAAAvoB,GAAAmmB,WAAA,EACA8B,GAAAM,EAAAvoB,IAAA,GASA,QAAAopB,IAAAR,GACA,GAAA5Y,GAAA4Y,EAAA5Y,EACA,UAAA+Q,GAAA/Q,GAAA,CAEA,GADA+Q,GAAA/Q,IAAA,EACA0Y,GAEK,CAIL,IADA,GAAA1oB,GAAAuoB,GAAArhB,OAAA,EACAlH,EAAA8R,IAAAyW,GAAAvoB,GAAAgQ,GAAA4Y,EAAA5Y,IACAhQ,GAEAuoB,IAAAnjB,OAAApF,EAAA,IAAA4oB,OARAL,IAAApjB,KAAAyjB,EAWAH,MACAA,IAAA,EACA3hB,GAAA6hB,MAmOA,QAAAU,IAAA3Q,EAAA4Q,EAAAhlB,GACAilB,GAAA1oB,IAAA,WACA,MAAA2B,MAAA8mB,GAAAhlB,IAEAilB,GAAA7hB,IAAA,SAAAjD,GACAjC,KAAA8mB,GAAAhlB,GAAAG,GAEAhE,OAAAC,eAAAgY,EAAApU,EAAAilB,IAGA,QAAAC,IAAArN,GACAA,EAAAsN,YACA,IAAAC,GAAAvN,EAAAnR,QACA0e,GAAAjN,OAAmBkN,GAAAxN,EAAAuN,EAAAjN,OACnBiN,EAAAE,SAAqBC,GAAA1N,EAAAuN,EAAAE,SACrBF,EAAAljB,KACAsjB,GAAA3N,GAEA7B,EAAA6B,EAAAtV,UAAyB,GAEzB6iB,EAAAtjB,UAAsB2jB,GAAA5N,EAAAuN,EAAAtjB,UACtBsjB,EAAAhc,OAAAgc,EAAAhc,QAAAsc,IACAC,GAAA9N,EAAAuN,EAAAhc,OAIA,QAAAic,IAAAxN,EAAA+N,GACA,GAAAjM,GAAA9B,EAAAnR,SAAAiT,cACAxB,EAAAN,EAAAuC,UAGAta,EAAA+X,EAAAnR,SAAA8c,cACA3L,EAAA+C,SAGAlF,GAAA,EAqCA,QAAA1V,KAAA4lB,IAnCA,SAAA5lB,GACAF,EAAAe,KAAAb,EACA,IAAA6Q,GAAA4I,EAAAzZ,EAAA4lB,EAAAjM,EAAA9B,EAuBApB,GAAA0B,EAAAnY,EAAA6Q,GAKA7Q,IAAA6X,IACAkN,GAAAlN,EAAA,SAAA7X,IAIAA,EACA0V,IAAA,GAGA,QAAA8P,IAAA3N,GACA,GAAA3V,GAAA2V,EAAAnR,SAAAxE,IACAA,GAAA2V,EAAAtV,MAAA,kBAAAL,GACA2jB,GAAA3jB,EAAA2V,GACA3V,MACA4O,EAAA5O,KACAA,KAYA,KAJA,GAAApC,GAAA3D,OAAA2D,KAAAoC,GACAiW,EAAAN,EAAAnR,SAAAyR,MAEAzc,GADAmc,EAAAnR,SAAA4e,QACAxlB,EAAA8C,QACAlH,KAAA,CACA,GAAAsE,GAAAF,EAAApE,EASAyc,IAAAvG,EAAAuG,EAAAnY,IAMKwT,EAAAxT,IACL+kB,GAAAlN,EAAA,QAAA7X,GAIAgW,EAAA9T,GAAA,GAGA,QAAA2jB,IAAA3jB,EAAA2V,GAEA5D,GACA,KACA,MAAA/R,GAAAtG,KAAAic,KACG,MAAAtI,GAEH,MADAkL,IAAAlL,EAAAsI,EAAA,aAEG,QACHvD,KAMA,QAAAmR,IAAA5N,EAAA/V,GAEA,GAAAgkB,GAAAjO,EAAAkO,kBAAA5pB,OAAA+E,OAAA,MAEA8kB,EAAA3P,IAEA,QAAArW,KAAA8B,GAAA,CACA,GAAAmkB,GAAAnkB,EAAA9B,GACA/D,EAAA,kBAAAgqB,OAAA1pB,GAQAypB,KAEAF,EAAA9lB,GAAA,GAAA0iB,IACA7K,EACA5b,GAAA4Q,EACAA,EACAqZ,KAOAlmB,IAAA6X,IACAsO,GAAAtO,EAAA7X,EAAAimB,IAWA,QAAAE,IACA/R,EACApU,EACAimB,GAEA,GAAAG,IAAA/P,IACA,mBAAA4P,IACAhB,GAAA1oB,IAAA6pB,EACAC,GAAArmB,GACAimB,EACAhB,GAAA7hB,IAAAyJ,IAEAoY,GAAA1oB,IAAA0pB,EAAA1pB,IACA6pB,IAAA,IAAAH,EAAAnU,MACAuU,GAAArmB,GACAimB,EAAA1pB,IACAsQ,EACAoY,GAAA7hB,IAAA6iB,EAAA7iB,IACA6iB,EAAA7iB,IACAyJ,GAWA1Q,OAAAC,eAAAgY,EAAApU,EAAAilB,IAGA,QAAAoB,IAAArmB,GACA,kBACA,GAAAskB,GAAApmB,KAAA6nB,mBAAA7nB,KAAA6nB,kBAAA/lB,EACA,IAAAskB,EAOA,MANAA,GAAAgC,OACAhC,EAAAiC,WAEApS,GAAAC,QACAkQ,EAAAtN,SAEAsN,EAAAzT,OAKA,QAAA0U,IAAA1N,EAAAyN,GACAzN,EAAAnR,SAAAyR,KACA,QAAAnY,KAAAslB,GAsBAzN,EAAA7X,GAAA,MAAAslB,EAAAtlB,GAAA6M,EAAA1C,GAAAmb,EAAAtlB,GAAA6X,GAIA,QAAA8N,IAAA9N,EAAAzO,GACA,OAAApJ,KAAAoJ,GAAA,CACA,GAAAzF,GAAAyF,EAAApJ,EACA,IAAAgG,MAAAC,QAAAtC,GACA,OAAAjI,GAAA,EAAqBA,EAAAiI,EAAAf,OAAoBlH,IACzC8qB,GAAA3O,EAAA7X,EAAA2D,EAAAjI,QAGA8qB,IAAA3O,EAAA7X,EAAA2D,IAKA,QAAA6iB,IACA3O,EACA4O,EACA9iB,EACAjG,GASA,MAPAoT,GAAAnN,KACAjG,EAAAiG,EACAA,aAEA,gBAAAA,KACAA,EAAAkU,EAAAlU,IAEAkU,EAAAtS,OAAAkhB,EAAA9iB,EAAAjG,GAoDA,QAAAgpB,IAAA7O,GACA,GAAA8O,GAAA9O,EAAAnR,SAAAigB,OACAA,KACA9O,EAAA+O,UAAA,kBAAAD,GACAA,EAAA/qB,KAAAic,GACA8O,GAIA,QAAAE,IAAAhP,GACA,GAAAiP,GAAAC,GAAAlP,EAAAnR,SAAA4R,OAAAT,EACAiP,KACApR,GAAA,GACAvZ,OAAA2D,KAAAgnB,GAAA/mB,QAAA,SAAAC,GAYAyW,EAAAoB,EAAA7X,EAAA8mB,EAAA9mB,MAGA0V,GAAA,IAIA,QAAAqR,IAAAzO,EAAAT,GACA,GAAAS,EAAA,CAUA,OARAwO,GAAA3qB,OAAA+E,OAAA,MACApB,EAAAgf,GACAkI,QAAAC,QAAA3O,GAAApJ,OAAA,SAAAlP,GAEA,MAAA7D,QAAA0a,yBAAAyB,EAAAtY,GAAA1D,aAEAH,OAAA2D,KAAAwY,GAEA5c,EAAA,EAAmBA,EAAAoE,EAAA8C,OAAiBlH,IAAA,CAIpC,IAHA,GAAAsE,GAAAF,EAAApE,GACAwrB,EAAA5O,EAAAtY,GAAAuX,KACAzM,EAAA+M,EACA/M,GAAA,CACA,GAAAA,EAAA8b,WAAAhV,EAAA9G,EAAA8b,UAAAM,GAAA,CACAJ,EAAA9mB,GAAA8K,EAAA8b,UAAAM,EACA,OAEApc,IAAA8P,QAEA,IAAA9P,GACA,WAAAwN,GAAAtY,GAAA,CACA,GAAAmnB,GAAA7O,EAAAtY,GAAAvC,OACAqpB,GAAA9mB,GAAA,kBAAAmnB,GACAA,EAAAvrB,KAAAic,GACAsP,GAMA,MAAAL,IASA,QAAAM,IACAjnB,EACAxC,GAEA,GAAA4U,GAAA7W,EAAAC,EAAAmE,EAAAE,CACA,IAAAgG,MAAAC,QAAA9F,IAAA,gBAAAA,GAEA,IADAoS,EAAA,GAAAvM,OAAA7F,EAAAyC,QACAlH,EAAA,EAAAC,EAAAwE,EAAAyC,OAA+BlH,EAAAC,EAAOD,IACtC6W,EAAA7W,GAAAiC,EAAAwC,EAAAzE,UAEG,oBAAAyE,GAEH,IADAoS,EAAA,GAAAvM,OAAA7F,GACAzE,EAAA,EAAeA,EAAAyE,EAASzE,IACxB6W,EAAA7W,GAAAiC,EAAAjC,EAAA,EAAAA,OAEG,IAAAuE,EAAAE,GAGH,IAFAL,EAAA3D,OAAA2D,KAAAK,GACAoS,EAAA,GAAAvM,OAAAlG,EAAA8C,QACAlH,EAAA,EAAAC,EAAAmE,EAAA8C,OAAgClH,EAAAC,EAAOD,IACvCsE,EAAAF,EAAApE,GACA6W,EAAA7W,GAAAiC,EAAAwC,EAAAH,KAAAtE,EAMA,OAHA+U,GAAA8B,KACA,EAAAmM,UAAA,GAEAnM,EAQA,QAAA8U,IACArrB,EACAsrB,EACAnP,EACAoP,GAEA,GACAC,GADAC,EAAAvpB,KAAA+kB,aAAAjnB,EAEA,IAAAyrB,EACAtP,QACAoP,IAOApP,EAAA3F,OAA8B+U,GAAApP,IAE9BqP,EAAAC,EAAAtP,IAAAmP,MACG,CACH,GAAAI,GAAAxpB,KAAAulB,OAAAznB,EAEA0rB,KAQAA,EAAAC,WAAA,GAEAH,EAAAE,GAAAJ,EAGA,GAAAlT,GAAA+D,KAAAgJ,IACA,OAAA/M,GACAlW,KAAA0pB,eAAA,YAA4CzG,KAAA/M,GAAeoT,GAE3DA,EASA,QAAAK,IAAAnc,GACA,MAAAyN,GAAAjb,KAAAwI,SAAA,UAAAgF,GAAA,IAAAoc,GAKA,QAAAC,IAAAC,EAAAC,GACA,MAAAjiB,OAAAC,QAAA+hB,IACA,IAAAA,EAAApnB,QAAAqnB,GAEAD,IAAAC,EASA,QAAAC,IACAC,EACAnoB,EACAooB,EACAC,EACAC,GAEA,GAAAC,GAAAtmB,GAAAumB,SAAAxoB,IAAAooB,CACA,OAAAE,IAAAD,IAAApmB,GAAAumB,SAAAxoB,GACA+nB,GAAAO,EAAAD,GACGE,EACHR,GAAAQ,EAAAJ,GACGE,EACHrO,GAAAqO,KAAAroB,MADG,GAUH,QAAAyoB,IACAvmB,EACA2S,EACAhE,EACA6X,EACAC,GAEA,GAAA9X,EACA,GAAA5Q,EAAA4Q,GAKK,CACL7K,MAAAC,QAAA4K,KACAA,EAAA8B,EAAA9B,GAEA,IAAAkN,EA0BA,QAAA/d,KAAA6Q,IAzBA,SAAA7Q,GACA,GACA,UAAAA,GACA,UAAAA,GACA4oB,GAAA5oB,GAEA+d,EAAA7b,MACS,CACT,GAAA1E,GAAA0E,EAAA0b,OAAA1b,EAAA0b,MAAApgB,IACAugB,GAAA2K,GAAAzmB,GAAA4mB,YAAAhU,EAAArX,EAAAwC,GACAkC,EAAA4mB,WAAA5mB,EAAA4mB,aACA5mB,EAAA0b,QAAA1b,EAAA0b,UAEA,KAAA5d,IAAA+d,MACAA,EAAA/d,GAAA6Q,EAAA7Q,GAEA2oB,GAAA,EACAzmB,EAAA7C,KAAA6C,EAAA7C,QACA,UAAAW,GAAA,SAAA+oB,GACAlY,EAAA7Q,GAAA+oB,KAMA/oB,QAGA,MAAAkC,GAQA,QAAA8mB,IACAxb,EACAyb,GAEA,GAAApX,GAAA3T,KAAAgrB,eAAAhrB,KAAAgrB,iBACAC,EAAAtX,EAAArE,EAGA,OAAA2b,KAAAF,EACAE,GAGAA,EAAAtX,EAAArE,GAAAtP,KAAAwI,SAAA9I,gBAAA4P,GAAA5R,KACAsC,KAAAkrB,aACA,KACAlrB,MAEAmrB,GAAAF,EAAA,aAAA3b,GAAA,GACA2b,GAOA,QAAAG,IACAH,EACA3b,EACAxN,GAGA,MADAqpB,IAAAF,EAAA,WAAA3b,GAAAxN,EAAA,IAAAA,EAAA,QACAmpB,EAGA,QAAAE,IACAF,EACAnpB,EACAupB,GAEA,GAAAvjB,MAAAC,QAAAkjB,GACA,OAAAztB,GAAA,EAAmBA,EAAAytB,EAAAvmB,OAAiBlH,IACpCytB,EAAAztB,IAAA,gBAAAytB,GAAAztB,IACA8tB,GAAAL,EAAAztB,GAAAsE,EAAA,IAAAtE,EAAA6tB,OAIAC,IAAAL,EAAAnpB,EAAAupB,GAIA,QAAAC,IAAAnL,EAAAre,EAAAupB,GACAlL,EAAAjJ,UAAA,EACAiJ,EAAAre,MACAqe,EAAAkL,SAKA,QAAAE,IAAAvnB,EAAA2O,GACA,GAAAA,EACA,GAAAC,EAAAD,GAKK,CACL,GAAAxR,GAAA6C,EAAA7C,GAAA6C,EAAA7C,GAAAmT,KAA4CtQ,EAAA7C,MAC5C,QAAAW,KAAA6Q,GAAA,CACA,GAAAnS,GAAAW,EAAAW,GACA0pB,EAAA7Y,EAAA7Q,EACAX,GAAAW,GAAAtB,KAAAI,OAAAJ,EAAAgrB,WAIA,MAAAxnB,GAKA,QAAAynB,IAAAvV,GACAA,EAAAwV,GAAAN,GACAlV,EAAAyV,GAAAtY,EACA6C,EAAA0V,GAAAve,EACA6I,EAAA2V,GAAA3C,GACAhT,EAAA4V,GAAA3C,GACAjT,EAAA6V,GAAApX,EACAuB,EAAA8V,GAAA7W,EACAe,EAAA+V,GAAAnB,GACA5U,EAAAgW,GAAAvC,GACAzT,EAAAiW,GAAAnC,GACA9T,EAAAkW,GAAA7B,GACArU,EAAAmW,GAAA/V,EACAJ,EAAAoW,GAAArL,GACA/K,EAAAqW,GAAAnJ,GACAlN,EAAAsW,GAAAjB,GAKA,QAAAkB,IACAzoB,EACAiW,EACArD,EACAzW,EACA2V,GAEA,GAGA4W,GAHAltB,EAAAsW,EAAAtW,OAIAkU,GAAAvT,EAAA,SACAusB,EAAAzuB,OAAA+E,OAAA7C,GAEAusB,EAAAC,UAAAxsB,IAKAusB,EAAAvsB,EAEAA,IAAAwsB,UAEA,IAAAC,GAAApa,EAAAhT,EAAAG,WACAktB,GAAAD,CAEA5sB,MAAAgE,OACAhE,KAAAia,QACAja,KAAA4W,WACA5W,KAAAG,SACAH,KAAAuiB,UAAAve,EAAA7C,IAAA6jB,GACAhlB,KAAA8sB,WAAAjE,GAAArpB,EAAA4a,OAAAja,GACAH,KAAAgjB,MAAA,WAA4B,MAAAD,IAAAnM,EAAAzW,IAG5BysB,IAEA5sB,KAAAwI,SAAAhJ,EAEAQ,KAAAulB,OAAAvlB,KAAAgjB,QACAhjB,KAAA+kB,aAAA/gB,EAAA8gB,aAAAE,IAGAxlB,EAAAK,SACAG,KAAA+sB,GAAA,SAAA/Y,EAAAU,EAAA9W,EAAAC,GACA,GAAA4Y,GAAArI,GAAAse,EAAA1Y,EAAAU,EAAA9W,EAAAC,EAAAgvB,EAKA,OAJApW,KAAA3O,MAAAC,QAAA0O,KACAA,EAAAa,UAAA9X,EAAAK,SACA4W,EAAAW,UAAAjX,GAEAsW,GAGAzW,KAAA+sB,GAAA,SAAA/Y,EAAAU,EAAA9W,EAAAC,GAAqC,MAAAuQ,IAAAse,EAAA1Y,EAAAU,EAAA9W,EAAAC,EAAAgvB,IAMrC,QAAAG,IACAlX,EACA2F,EACAzX,EACA0oB,EACA9V,GAEA,GAAApX,GAAAsW,EAAAtW,QACAya,KACAuB,EAAAhc,EAAAya,KACA,IAAA1H,EAAAiJ,GACA,OAAA1Z,KAAA0Z,GACAvB,EAAAnY,GAAAyZ,EAAAzZ,EAAA0Z,EAAAC,GAAAuJ,QAGAzS,GAAAvO,EAAA0b,QAA4BuN,GAAAhT,EAAAjW,EAAA0b,OAC5BnN,EAAAvO,EAAAiW,QAA4BgT,GAAAhT,EAAAjW,EAAAiW,MAG5B,IAAAiT,GAAA,GAAAT,IACAzoB,EACAiW,EACArD,EACA8V,EACA5W,GAGAW,EAAAjX,EAAAC,OAAA/B,KAAA,KAAAwvB,EAAAH,GAAAG,EAEA,IAAAzW,YAAAF,IACA,MAAA4W,IAAA1W,EAAAzS,EAAAkpB,EAAA/sB,OAAAX,EACG,IAAAsI,MAAAC,QAAA0O,GAAA,CAGH,OAFA2W,GAAApN,GAAAvJ,OACA3P,EAAA,GAAAgB,OAAAslB,EAAA1oB,QACAlH,EAAA,EAAmBA,EAAA4vB,EAAA1oB,OAAmBlH,IACtCsJ,EAAAtJ,GAAA2vB,GAAAC,EAAA5vB,GAAAwG,EAAAkpB,EAAA/sB,OAAAX,EAEA,OAAAsH,IAIA,QAAAqmB,IAAA1W,EAAAzS,EAAA0oB,EAAAltB,GAIA,GAAA6tB,GAAA7W,EAAAC,EAMA,OALA4W,GAAAjW,UAAAsV,EACAW,EAAAhW,UAAA7X,EACAwE,EAAAif,QACAoK,EAAArpB,OAAAqpB,EAAArpB,UAAmCif,KAAAjf,EAAAif,MAEnCoK,EAGA,QAAAJ,IAAA1Y,EAAA8E,GACA,OAAAvX,KAAAuX,GACA9E,EAAA2F,GAAApY,IAAAuX,EAAAvX,GAmGA,QAAAwrB,IACAxX,EACA9R,EACAjE,EACA6W,EACAD,GAEA,IAAAtE,EAAAyD,GAAA,CAIA,GAAAsL,GAAArhB,EAAAyI,SAAA+kB,KASA,IANAxrB,EAAA+T,KACAA,EAAAsL,EAAA9M,OAAAwB,IAKA,kBAAAA,GAAA,CAQA,GAAAkB,EACA,IAAA3E,EAAAyD,EAAA0X,OACAxW,EAAAlB,MAEAxD,MADAwD,EAAAqL,GAAAnK,EAAAoK,EAAArhB,KAKA,MAAAghB,IACA/J,EACAhT,EACAjE,EACA6W,EACAD,EAKA3S,SAIAypB,GAAA3X,GAGAvD,EAAAvO,EAAA0pB,QACAC,GAAA7X,EAAAtW,QAAAwE,EAIA,IAAAyX,GAAAgE,GAAAzb,EAAA8R,EAAAa,EAGA,IAAAnE,EAAAsD,EAAAtW,QAAAI,YACA,MAAAotB,IAAAlX,EAAA2F,EAAAzX,EAAAjE,EAAA6W,EAKA,IAAA2L,GAAAve,EAAA7C,EAKA,IAFA6C,EAAA7C,GAAA6C,EAAA4pB,SAEApb,EAAAsD,EAAAtW,QAAA8jB,UAAA,CAKA,GAAAL,GAAAjf,EAAAif,IACAjf,MACAif,IACAjf,EAAAif,QAKA4K,GAAA7pB,EAGA,IAAAlG,GAAAgY,EAAAtW,QAAA1B,MAAA6Y,CAYA,OAXA,IAAAJ,IACA,iBAAAT,EAAA,KAAAhY,EAAA,IAAAA,EAAA,IACAkG,MAAAsO,iBAAAvS,GACK+V,OAAA2F,YAAA8G,YAAA5L,MAAAC,YACLI,KAUA,QAAA8W,IACArX,EACAtW,EACA4tB,EACAC,GAEA,GAAAxuB,IACAyuB,cAAA,EACA9tB,SACA8kB,aAAAxO,EACAyX,WAAAH,GAAA,KACAI,QAAAH,GAAA,MAGAI,EAAA3X,EAAAzS,KAAAoqB,cAKA,OAJA7b,GAAA6b,KACA5uB,EAAAC,OAAA2uB,EAAA3uB,OACAD,EAAAE,gBAAA0uB,EAAA1uB,iBAEA,GAAA+W,GAAAM,iBAAAjB,KAAAtW,GAGA,QAAAquB,IAAA7pB,GAEA,OADA2Y,GAAA3Y,EAAAlE,OAAAkE,EAAAlE,SACAtC,EAAA,EAAiBA,EAAA6wB,GAAA3pB,OAAyBlH,IAAA,CAC1C,GAAAsE,GAAAusB,GAAA7wB,EACAmf,GAAA7a,GAAAwsB,GAAAxsB,IAMA,QAAA6rB,IAAAnuB,EAAAwE,GACA,GAAA0X,GAAAlc,EAAAkuB,OAAAluB,EAAAkuB,MAAAhS,MAAA,QACAsD,EAAAxf,EAAAkuB,OAAAluB,EAAAkuB,MAAA1O,OAAA,SAAgEhb,EAAAiW,QAAAjW,EAAAiW,WAA+ByB,GAAA1X,EAAA0pB,MAAA/a,KAC/F,IAAAxR,GAAA6C,EAAA7C,KAAA6C,EAAA7C,MACAoR,GAAApR,EAAA6d,IACA7d,EAAA6d,IAAAhb,EAAA0pB,MAAAa,UAAA3tB,OAAAO,EAAA6d,IAEA7d,EAAA6d,GAAAhb,EAAA0pB,MAAAa,SAWA,QAAAngB,IACArO,EACA4W,EACA3S,EACA4S,EACA4X,EACAC,GAUA,OARA3mB,MAAAC,QAAA/D,IAAA0O,EAAA1O,MACAwqB,EAAA5X,EACAA,EAAA5S,EACAA,MAAAsO,IAEAE,EAAAic,KACAD,EAAAE,IAEAC,GAAA5uB,EAAA4W,EAAA3S,EAAA4S,EAAA4X,GAGA,QAAAG,IACA5uB,EACA4W,EACA3S,EACA4S,EACA4X,GAEA,GAAAjc,EAAAvO,IAAAuO,EAAA,EAAA0F,QAMA,MAAAgJ,KAMA,IAHA1O,EAAAvO,IAAAuO,EAAAvO,EAAA4qB,MACAjY,EAAA3S,EAAA4qB,KAEAjY,EAEA,MAAAsK,KAeAnZ,OAAAC,QAAA6O,IACA,kBAAAA,GAAA,KAEA5S,QACAA,EAAA8gB,aAAwBvlB,QAAAqX,EAAA,IACxBA,EAAAlS,OAAA,GAEA8pB,IAAAE,GACA9X,EAAAoJ,GAAApJ,GACG4X,IAAAK,KACHjY,EAAAmJ,GAAAnJ,GAEA,IAAAH,GAAAQ,CACA,oBAAAN,GAAA,CACA,GAAAb,EACAmB,GAAAlX,EAAAE,QAAAF,EAAAE,OAAAgX,IAAAlT,GAAA+qB,gBAAAnY,GAGAF,EAFA1S,GAAAgrB,cAAApY,GAEA,GAAAJ,IACAxS,GAAAirB,qBAAArY,GAAA3S,EAAA4S,MACAtE,UAAAvS,GAEKwS,EAAAuD,EAAAmF,EAAAlb,EAAAyI,SAAA,aAAAmO,IAEL2W,GAAAxX,EAAA9R,EAAAjE,EAAA6W,EAAAD,GAKA,GAAAJ,IACAI,EAAA3S,EAAA4S,MACAtE,UAAAvS,OAKA0W,GAAA6W,GAAA3W,EAAA3S,EAAAjE,EAAA6W,EAEA,OAAA9O,OAAAC,QAAA0O,GACAA,EACGlE,EAAAkE,IACHlE,EAAA0E,IAAoBgY,GAAAxY,EAAAQ,GACpB1E,EAAAvO,IAAsBkrB,GAAAlrB,GACtByS,GAEAwK,KAIA,QAAAgO,IAAAxY,EAAAQ,EAAAkY,GAOA,GANA1Y,EAAAQ,KACA,kBAAAR,EAAAE,MAEAM,MAAA3E,GACA6c,GAAA,GAEA5c,EAAAkE,EAAAG,UACA,OAAApZ,GAAA,EAAAC,EAAAgZ,EAAAG,SAAAlS,OAA8ClH,EAAAC,EAAOD,IAAA,CACrD,GAAAsI,GAAA2Q,EAAAG,SAAApZ,EACA+U,GAAAzM,EAAA6Q,OACAtE,EAAAvM,EAAAmR,KAAAzE,EAAA2c,IAAA,QAAArpB,EAAA6Q,MACAsY,GAAAnpB,EAAAmR,EAAAkY,IASA,QAAAD,IAAAlrB,GACAjC,EAAAiC,EAAAorB,QACArR,GAAA/Z,EAAAorB,OAEArtB,EAAAiC,EAAAqrB,QACAtR,GAAA/Z,EAAAqrB,OAMA,QAAAC,IAAA3V,GACAA,EAAAuL,OAAA,KACAvL,EAAAqR,aAAA,IACA,IAAAxrB,GAAAma,EAAAnR,SACAkc,EAAA/K,EAAA1Z,OAAAT,EAAAylB,aACAiI,EAAAxI,KAAA3kB,OACA4Z,GAAA4L,OAAAxC,GAAAvjB,EAAAqlB,gBAAAqI,GACAvT,EAAAoL,aAAAC,GAKArL,EAAAoT,GAAA,SAAA/Y,EAAAU,EAAA9W,EAAAC,GAAiC,MAAAuQ,IAAAuL,EAAA3F,EAAAU,EAAA9W,EAAAC,GAAA,IAGjC8b,EAAA+P,eAAA,SAAA1V,EAAAU,EAAA9W,EAAAC,GAA6C,MAAAuQ,IAAAuL,EAAA3F,EAAAU,EAAA9W,EAAAC,GAAA,GAI7C,IAAA0xB,GAAA7K,KAAA1gB,IAWAuU,GAAAoB,EAAA,SAAA4V,KAAA7P,OAAAsF,GAAA,SACAzM,EAAAoB,EAAA,aAAAna,EAAAgjB,kBAAAwC,GAAA,SAyIA,QAAAwK,IAAA7V,EAAAna,GACA,GAAA0nB,GAAAvN,EAAAnR,SAAAvK,OAAA+E,OAAA2W,EAAA8V,YAAAjwB,SAEAklB,EAAAllB,EAAAylB,YACAiC,GAAA/mB,OAAAX,EAAAW,OACA+mB,EAAAjC,aAAAP,EACAwC,EAAAgH,WAAA1uB,EAAA0uB,WACAhH,EAAAiH,QAAA3uB,EAAA2uB,OAEA,IAAAuB,GAAAhL,EAAA3N,gBACAmQ,GAAAzL,UAAAiU,EAAAjU,UACAyL,EAAA1E,iBAAAkN,EAAAnN,UACA2E,EAAArC,gBAAA6K,EAAA9Y,SACAsQ,EAAAyI,cAAAD,EAAA/Y,IAEAnX,EAAAC,SACAynB,EAAAznB,OAAAD,EAAAC,OACAynB,EAAAxnB,gBAAAF,EAAAE,iBAIA,QAAA+tB,IAAA3X,GACA,GAAAtW,GAAAsW,EAAAtW,OACA,IAAAsW,EAAA8Z,MAAA,CACA,GAAAC,GAAApC,GAAA3X,EAAA8Z,MAEA,IAAAC,IADA/Z,EAAA+Z,aACA,CAGA/Z,EAAA+Z,cAEA,IAAAC,GAAAC,GAAAja,EAEAga,IACAxb,EAAAwB,EAAAka,cAAAF,GAEAtwB,EAAAsW,EAAAtW,QAAAib,EAAAoV,EAAA/Z,EAAAka,eACAxwB,EAAA1B,OACA0B,EAAAywB,WAAAzwB,EAAA1B,MAAAgY,IAIA,MAAAtW,GAGA,QAAAuwB,IAAAja,GACA,GAAAoa,GACAC,EAAAra,EAAAtW,QACA4wB,EAAAta,EAAAka,cACAK,EAAAva,EAAAwa,aACA,QAAAxuB,KAAAquB,GACAA,EAAAruB,KAAAuuB,EAAAvuB,KACAouB,IAAsBA,MACtBA,EAAApuB,GAAAyuB,GAAAJ,EAAAruB,GAAAsuB,EAAAtuB,GAAAuuB,EAAAvuB,IAGA,OAAAouB,GAGA,QAAAK,IAAAJ,EAAAC,EAAAC,GAGA,GAAAvoB,MAAAC,QAAAooB,GAAA,CACA,GAAArpB,KACAupB,GAAAvoB,MAAAC,QAAAsoB,SACAD,EAAAtoB,MAAAC,QAAAqoB,QACA,QAAA5yB,GAAA,EAAmBA,EAAA2yB,EAAAzrB,OAAmBlH,KAEtC4yB,EAAA1tB,QAAAytB,EAAA3yB,KAAA,GAAA6yB,EAAA3tB,QAAAytB,EAAA3yB,IAAA,IACAsJ,EAAAnE,KAAAwtB,EAAA3yB,GAGA,OAAAsJ,GAEA,MAAAqpB,GAIA,QAAArsB,IAAAtE,GAMAQ,KAAA8I,MAAAtJ,GAWA,QAAAgxB,IAAA1sB,GACAA,EAAA2sB,IAAA,SAAA/lB,GACA,GAAAgmB,GAAA1wB,KAAA2wB,oBAAA3wB,KAAA2wB,qBACA,IAAAD,EAAAhuB,QAAAgI,IAAA,EACA,MAAA1K,KAIA,IAAAoG,GAAA+N,EAAArI,UAAA,EAQA,OAPA1F,GAAAwqB,QAAA5wB,MACA,kBAAA0K,GAAAjD,QACAiD,EAAAjD,QAAAsE,MAAArB,EAAAtE,GACK,kBAAAsE,IACLA,EAAAqB,MAAA,KAAA3F,GAEAsqB,EAAA/tB,KAAA+H,GACA1K,MAMA,QAAA6wB,IAAA/sB,GACAA,EAAA+E,MAAA,SAAAA,GAEA,MADA7I,MAAAR,QAAAib,EAAAza,KAAAR,QAAAqJ,GACA7I,MAMA,QAAA8wB,IAAAhtB,GAMAA,EAAA0pB,IAAA,CACA,IAAAA,GAAA,CAKA1pB,GAAAwQ,OAAA,SAAA0b,GACAA,OACA,IAAAe,GAAA/wB,KACAgxB,EAAAD,EAAAvD,IACAyD,EAAAjB,EAAAkB,QAAAlB,EAAAkB,SACA,IAAAD,EAAAD,GACA,MAAAC,GAAAD,EAGA,IAAAlzB,GAAAkyB,EAAAlyB,MAAAizB,EAAAvxB,QAAA1B,KAKAqzB,EAAA,SAAA3xB,GACAQ,KAAA8I,MAAAtJ,GA6CA,OA3CA2xB,GAAAzyB,UAAAT,OAAA+E,OAAA+tB,EAAAryB,WACAyyB,EAAAzyB,UAAA+wB,YAAA0B,EACAA,EAAA3D,QACA2D,EAAA3xB,QAAAib,EACAsW,EAAAvxB,QACAwwB,GAEAmB,EAAA,MAAAJ,EAKAI,EAAA3xB,QAAAya,OACAmX,GAAAD,GAEAA,EAAA3xB,QAAAoE,UACAytB,GAAAF,GAIAA,EAAA7c,OAAAyc,EAAAzc,OACA6c,EAAAtoB,MAAAkoB,EAAAloB,MACAsoB,EAAAV,IAAAM,EAAAN,IAIAa,GAAAzvB,QAAA,SAAAvC,GACA6xB,EAAA7xB,GAAAyxB,EAAAzxB,KAGAxB,IACAqzB,EAAA3xB,QAAAywB,WAAAnyB,GAAAqzB,GAMAA,EAAAtB,aAAAkB,EAAAvxB,QACA2xB,EAAAnB,gBACAmB,EAAAb,cAAAhc,KAAiC6c,EAAA3xB,SAGjCyxB,EAAAD,GAAAG,EACAA,GAIA,QAAAC,IAAAG,GACA,GAAAtX,GAAAsX,EAAA/xB,QAAAya,KACA,QAAAnY,KAAAmY,GACA4M,GAAA0K,EAAA7yB,UAAA,SAAAoD,GAIA,QAAAuvB,IAAAE,GACA,GAAA3tB,GAAA2tB,EAAA/xB,QAAAoE,QACA,QAAA9B,KAAA8B,GACAqkB,GAAAsJ,EAAA7yB,UAAAoD,EAAA8B,EAAA9B,IAMA,QAAA0vB,IAAA1tB,GAIAwtB,GAAAzvB,QAAA,SAAAvC,GACAwE,EAAAxE,GAAA,SACAkO,EACAikB,GAEA,MAAAA,IAOA,cAAAnyB,GAAAsT,EAAA6e,KACAA,EAAA3zB,KAAA2zB,EAAA3zB,MAAA0P,EACAikB,EAAAzxB,KAAAR,QAAA+tB,MAAAjZ,OAAAmd,IAEA,cAAAnyB,GAAA,kBAAAmyB,KACAA,GAAwBxlB,KAAAwlB,EAAAtvB,OAAAsvB,IAExBzxB,KAAAR,QAAAF,EAAA,KAAAkO,GAAAikB,EACAA,GAdAzxB,KAAAR,QAAAF,EAAA,KAAAkO,MAsBA,QAAAkkB,IAAAxK,GACA,MAAAA,OAAApR,KAAAtW,QAAA1B,MAAAopB,EAAAvQ,KAGA,QAAAgb,IAAAC,EAAA9zB,GACA,MAAAgK,OAAAC,QAAA6pB,GACAA,EAAAlvB,QAAA5E,IAAA,EACG,gBAAA8zB,GACHA,EAAAhpB,MAAA,KAAAlG,QAAA5E,IAAA,IACGgV,EAAA8e,IACHA,EAAArhB,KAAAzS,GAMA,QAAA+zB,IAAAC,EAAA9gB,GACA,GAAA4C,GAAAke,EAAAle,MACAhS,EAAAkwB,EAAAlwB,KACAsjB,EAAA4M,EAAA5M,MACA,QAAApjB,KAAA8R,GAAA,CACA,GAAAme,GAAAne,EAAA9R,EACA,IAAAiwB,EAAA,CACA,GAAAj0B,GAAA4zB,GAAAK,EAAAhb,iBACAjZ,KAAAkT,EAAAlT,IACAk0B,GAAApe,EAAA9R,EAAAF,EAAAsjB,KAMA,QAAA8M,IACApe,EACA9R,EACAF,EACAqwB,GAEA,GAAAC,GAAAte,EAAA9R,IACAowB,GAAAD,GAAAC,EAAAvb,MAAAsb,EAAAtb,KACAub,EAAAC,kBAAA5tB,WAEAqP,EAAA9R,GAAA,KACAyM,EAAA3M,EAAAE,GAwMA,QAAAswB,IAAA3b,GAIA,IAHA,GAAAzS,GAAAyS,EAAAzS,KACA4K,EAAA6H,EACA4b,EAAA5b,EACAlE,EAAA8f,EAAAF,qBACAE,IAAAF,kBAAAjN,SACAmN,EAAAruB,OACAA,EAAAsuB,GAAAD,EAAAruB,QAGA,MAAAuO,EAAA3D,IAAAzO,SACAyO,KAAA5K,OACAA,EAAAsuB,GAAAtuB,EAAA4K,EAAA5K,MAGA,OAAAuuB,IAAAvuB,EAAAwuB,YAAAxuB,EAAAqrB,OAGA,QAAAiD,IAAAxsB,EAAA3F,GACA,OACAqyB,YAAA5xB,GAAAkF,EAAA0sB,YAAAryB,EAAAqyB,aACAnD,MAAA9c,EAAAzM,EAAAupB,QACAvpB,EAAAupB,MAAAlvB,EAAAkvB,OACAlvB,EAAAkvB,OAIA,QAAAkD,IACAC,EACAC,GAEA,MAAAlgB,GAAAigB,IAAAjgB,EAAAkgB,GACA7xB,GAAA4xB,EAAAE,GAAAD,IAGA,GAGA,QAAA7xB,IAAAoT,EAAAU,GACA,MAAAV,GAAAU,EAAAV,EAAA,IAAAU,EAAAV,EAAAU,GAAA,GAGA,QAAAge,IAAA/f,GACA,MAAA7K,OAAAC,QAAA4K,GACAggB,GAAAhgB,GAEA5Q,EAAA4Q,GACAigB,GAAAjgB,GAEA,gBAAAA,GACAA,EAGA,GAGA,QAAAggB,IAAAhgB,GAGA,OADAkgB,GADA/rB,EAAA,GAEAtJ,EAAA,EAAAC,EAAAkV,EAAAjO,OAAmClH,EAAAC,EAAOD,IAC1C+U,EAAAsgB,EAAAH,GAAA/f,EAAAnV,MAAA,KAAAq1B,IACA/rB,IAAgBA,GAAA,KAChBA,GAAA+rB,EAGA,OAAA/rB,GAGA,QAAA8rB,IAAAjgB,GACA,GAAA7L,GAAA,EACA,QAAAhF,KAAA6Q,GACAA,EAAA7Q,KACAgF,IAAgBA,GAAA,KAChBA,GAAAhF,EAGA,OAAAgF,GAuCA,QAAAgoB,IAAAnY,GACA,MAAAmc,IAAAnc,GACA,MAIA,SAAAA,EACA,WADA,GAMA,QAAAoc,IAAApc,GAEA,IAAAsG,GACA,QAEA,IAAA8R,GAAApY,GACA,QAIA,IAFAA,IAAAlG,cAEA,MAAAuiB,GAAArc,GACA,MAAAqc,IAAArc,EAEA,IAAAsN,GAAA9V,SAAAC,cAAAuI,EACA,OAAAA,GAAAjU,QAAA,QAEAswB,GAAArc,GACAsN,EAAAwL,cAAAzmB,OAAAiqB,oBACAhP,EAAAwL,cAAAzmB,OAAAkqB,YAGAF,GAAArc,GAAA,qBAAApG,KAAA0T,EAAA5W,YAWA,QAAA8lB,IAAAlP,GACA,mBAAAA,GAAA,CACA,GAAAmP,GAAAjlB,SAAAK,cAAAyV,EACA,OAAAmP,IAIAjlB,SAAAC,cAAA,OAIA,MAAA6V,GAMA,QAAAoP,IAAAC,EAAA7c,GACA,GAAAK,GAAA3I,SAAAC,cAAAklB,EACA,kBAAAA,EACAxc,GAGAL,EAAAzS,MAAAyS,EAAAzS,KAAA0b,WAAApN,KAAAmE,EAAAzS,KAAA0b,MAAA6T,UACAzc,EAAAhH,aAAA,uBAEAgH,GAGA,QAAA0c,IAAA7uB,EAAA2uB,GACA,MAAAnlB,UAAAqlB,gBAAAC,GAAA9uB,GAAA2uB,GAGA,QAAA3jB,IAAAkH,GACA,MAAA1I,UAAAwB,eAAAkH,GAGA,QAAA6c,IAAA7c,GACA,MAAA1I,UAAAulB,cAAA7c,GAGA,QAAAhH,IAAAjB,EAAA+kB,EAAAC,GACAhlB,EAAAiB,aAAA8jB,EAAAC,GAGA,QAAAlqB,IAAAyW,EAAAra,GACAqa,EAAAzW,YAAA5D,GAGA,QAAAwI,IAAA6R,EAAAra,GACAqa,EAAA7R,YAAAxI,GAGA,QAAA8I,IAAAuR,GACA,MAAAA,GAAAvR,WAGA,QAAAilB,IAAA1T,GACA,MAAAA,GAAA0T,YAGA,QAAAP,IAAAnT,GACA,MAAAA,GAAAmT,QAGA,QAAAQ,IAAA3T,EAAAtJ,GACAsJ,EAAA4T,YAAAld,EAGA,QAAAmd,IAAA7T,EAAAjhB,GACAihB,EAAArQ,aAAA5Q,EAAA,IAoCA,QAAA+0B,IAAAxd,EAAAyd,GACA,GAAApyB,GAAA2U,EAAAzS,KAAAyG,GACA,IAAA8H,EAAAzQ,GAAA,CAEA,GAAA6X,GAAAlD,EAAA1W,QACA0K,EAAAgM,EAAA0b,mBAAA1b,EAAAK,IACAjJ,EAAA8L,EAAA8J,KACAyQ,GACApsB,MAAAC,QAAA8F,EAAA/L,IACAyM,EAAAV,EAAA/L,GAAA2I,GACKoD,EAAA/L,KAAA2I,IACLoD,EAAA/L,OAAAwQ,IAGAmE,EAAAzS,KAAAmwB,SACArsB,MAAAC,QAAA8F,EAAA/L,IAEO+L,EAAA/L,GAAAY,QAAA+H,GAAA,GAEPoD,EAAA/L,GAAAa,KAAA8H,GAHAoD,EAAA/L,IAAA2I,GAMAoD,EAAA/L,GAAA2I,GAqBA,QAAA2pB,IAAApgB,EAAAU,GACA,MACAV,GAAAlS,MAAA4S,EAAA5S,MAEAkS,EAAA2C,MAAAjC,EAAAiC,KACA3C,EAAAmD,YAAAzC,EAAAyC,WACA5E,EAAAyB,EAAAhQ,QAAAuO,EAAAmC,EAAA1Q,OACAqwB,GAAArgB,EAAAU,IAEAlC,EAAAwB,EAAAkO,qBACAlO,EAAAgD,eAAAtC,EAAAsC,cACA3E,EAAAqC,EAAAsC,aAAAoG,QAMA,QAAAiX,IAAArgB,EAAAU,GACA,aAAAV,EAAA2C,IAA0B,QAC1B,IAAAnZ,GACA82B,EAAA/hB,EAAA/U,EAAAwW,EAAAhQ,OAAAuO,EAAA/U,IAAAkiB,QAAAliB,EAAA8B,KACAi1B,EAAAhiB,EAAA/U,EAAAkX,EAAA1Q,OAAAuO,EAAA/U,IAAAkiB,QAAAliB,EAAA8B,IACA,OAAAg1B,KAAAC,GAAAC,GAAAF,IAAAE,GAAAD,GAGA,QAAAE,IAAA7d,EAAA8d,EAAAC,GACA,GAAAn3B,GAAAsE,EACA+F,IACA,KAAArK,EAAAk3B,EAAoBl3B,GAAAm3B,IAAan3B,EACjCsE,EAAA8U,EAAApZ,GAAAsE,IACAyQ,EAAAzQ,KAAqB+F,EAAA/F,GAAAtE,EAErB,OAAAqK,GA6sBA,QAAA+sB,IAAAC,EAAApe,IACAoe,EAAA7wB,KAAAwW,YAAA/D,EAAAzS,KAAAwW,aACA8J,GAAAuQ,EAAApe,GAIA,QAAA6N,IAAAuQ,EAAApe,GACA,GAQA3U,GAAAgzB,EAAAC,EARAC,EAAAH,IAAAI,GACAC,EAAAze,IAAAwe,GACAE,EAAAC,GAAAP,EAAA7wB,KAAAwW,WAAAqa,EAAA90B,SACAs1B,EAAAD,GAAA3e,EAAAzS,KAAAwW,WAAA/D,EAAA1W,SAEAu1B,KACAC,IAGA,KAAAzzB,IAAAuzB,GACAP,EAAAK,EAAArzB,GACAizB,EAAAM,EAAAvzB,GACAgzB,GAQAC,EAAAS,SAAAV,EAAAniB,MACA8iB,GAAAV,EAAA,SAAAte,EAAAoe,GACAE,EAAAvf,KAAAuf,EAAAvf,IAAAkgB,kBACAH,EAAA5yB,KAAAoyB,KATAU,GAAAV,EAAA,OAAAte,EAAAoe,GACAE,EAAAvf,KAAAuf,EAAAvf,IAAAmgB,UACAL,EAAA3yB,KAAAoyB,GAYA,IAAAO,EAAA5wB,OAAA,CACA,GAAAkxB,GAAA,WACA,OAAAp4B,GAAA,EAAqBA,EAAA83B,EAAA5wB,OAA2BlH,IAChDi4B,GAAAH,EAAA93B,GAAA,WAAAiZ,EAAAoe,GAGAG,GACA5V,GAAA3I,EAAA,SAAAmf,GAEAA,IAYA,GARAL,EAAA7wB,QACA0a,GAAA3I,EAAA,uBACA,OAAAjZ,GAAA,EAAqBA,EAAA+3B,EAAA7wB,OAA8BlH,IACnDi4B,GAAAF,EAAA/3B,GAAA,mBAAAiZ,EAAAoe,MAKAG,EACA,IAAAlzB,IAAAqzB,GACAE,EAAAvzB,IAEA2zB,GAAAN,EAAArzB,GAAA,SAAA+yB,IAAAK,GAQA,QAAAE,IACA7a,EACAZ,GAEA,GAAA7S,GAAA7I,OAAA+E,OAAA,KACA,KAAAuX,EAEA,MAAAzT,EAEA,IAAAtJ,GAAAu3B,CACA,KAAAv3B,EAAA,EAAaA,EAAA+c,EAAA7V,OAAiBlH,IAC9Bu3B,EAAAxa,EAAA/c,GACAu3B,EAAAc,YAEAd,EAAAc,UAAAC,IAEAhvB,EAAAivB,GAAAhB,MACAA,EAAAvf,IAAAyF,EAAAtB,EAAAnR,SAAA,aAAAusB,EAAAj3B,MAAA,EAGA,OAAAgJ,GAGA,QAAAivB,IAAAhB,GACA,MAAAA,GAAAiB,SAAAjB,EAAA,SAAA92B,OAAA2D,KAAAmzB,EAAAc,eAA4E/oB,KAAA,KAG5E,QAAA2oB,IAAAV,EAAAj1B,EAAA2W,EAAAoe,EAAAK,GACA,GAAAvzB,GAAAozB,EAAAvf,KAAAuf,EAAAvf,IAAA1V,EACA,IAAA6B,EACA,IACAA,EAAA8U,EAAAK,IAAAie,EAAAte,EAAAoe,EAAAK,GACK,MAAA7jB,GACLkL,GAAAlL,EAAAoF,EAAA1W,QAAA,aAAAg1B,EAAA,SAAAj1B,EAAA,UAYA,QAAAm2B,IAAApB,EAAApe,GACA,GAAAyQ,GAAAzQ,EAAAM,gBACA,MAAAxE,EAAA2U,KAAA,IAAAA,EAAApR,KAAAtW,QAAA02B,cAGA7jB,EAAAwiB,EAAA7wB,KAAA0b,QAAArN,EAAAoE,EAAAzS,KAAA0b,QAAA,CAGA,GAAA5d,GAAA2a,EACA3F,EAAAL,EAAAK,IACAqf,EAAAtB,EAAA7wB,KAAA0b,UACAA,EAAAjJ,EAAAzS,KAAA0b,SAEAnN,GAAAmN,EAAAzH,UACAyH,EAAAjJ,EAAAzS,KAAA0b,MAAApL,KAAwCoL,GAGxC,KAAA5d,IAAA4d,GACAjD,EAAAiD,EAAA5d,GACAq0B,EAAAr0B,KACA2a,GACA2Z,GAAAtf,EAAAhV,EAAA2a,IAMA4Z,IAAAC,KAAA5W,EAAA/M,QAAAwjB,EAAAxjB,OACAyjB,GAAAtf,EAAA,QAAA4I,EAAA/M,MAEA,KAAA7Q,IAAAq0B,GACA9jB,EAAAqN,EAAA5d,MACAy0B,GAAAz0B,GACAgV,EAAA0f,kBAAAC,GAAAC,GAAA50B,IACO60B,GAAA70B,IACPgV,EAAA8f,gBAAA90B,KAMA,QAAAs0B,IAAAnS,EAAAniB,EAAA6Q,GACAsR,EAAAqP,QAAA5wB,QAAA,QACAm0B,GAAA5S,EAAAniB,EAAA6Q,GACGmkB,GAAAh1B,GAGHi1B,GAAApkB,GACAsR,EAAA2S,gBAAA90B,IAIA6Q,EAAA,oBAAA7Q,GAAA,UAAAmiB,EAAAqP,QACA,OACAxxB,EACAmiB,EAAAnU,aAAAhO,EAAA6Q,IAEGgkB,GAAA70B,GACHmiB,EAAAnU,aAAAhO,EAAAi1B,GAAApkB,IAAA,UAAAA,EAAA,gBACG4jB,GAAAz0B,GACHi1B,GAAApkB,GACAsR,EAAAuS,kBAAAC,GAAAC,GAAA50B,IAEAmiB,EAAA+S,eAAAP,GAAA30B,EAAA6Q,GAGAkkB,GAAA5S,EAAAniB,EAAA6Q,GAIA,QAAAkkB,IAAA5S,EAAAniB,EAAA6Q,GACA,GAAAokB,GAAApkB,GACAsR,EAAA2S,gBAAA90B,OACG,CAKH,GACAu0B,KAAAY,IACA,aAAAhT,EAAAqP,SACA,gBAAAxxB,IAAAmiB,EAAAiT,OACA,CACA,GAAAC,GAAA,SAAA9lB,GACAA,EAAA+lB,2BACAnT,EAAAoT,oBAAA,QAAAF,GAEAlT,GAAAqT,iBAAA,QAAAH,GAEAlT,EAAAiT,QAAA,EAEAjT,EAAAnU,aAAAhO,EAAA6Q,IAWA,QAAA4kB,IAAA1C,EAAApe,GACA,GAAAwN,GAAAxN,EAAAK,IACA9S,EAAAyS,EAAAzS,KACAwzB,EAAA3C,EAAA7wB,IACA,MACAqO,EAAArO,EAAAwuB,cACAngB,EAAArO,EAAAqrB,SACAhd,EAAAmlB,IACAnlB,EAAAmlB,EAAAhF,cACAngB,EAAAmlB,EAAAnI,SALA,CAYA,GAAAoI,GAAArF,GAAA3b,GAGAihB,EAAAzT,EAAA0T,kBACAplB,GAAAmlB,KACAD,EAAA72B,GAAA62B,EAAA/E,GAAAgF,KAIAD,IAAAxT,EAAA2T,aACA3T,EAAAnU,aAAA,QAAA2nB,GACAxT,EAAA2T,WAAAH,IAaA,QAAAI,IAAAC,GAoEA,QAAAC,MACAhmB,WAAApP,KAAAm1B,EAAA9yB,MAAAgzB,EAAAx6B,GAAAy6B,QACAD,EAAAx6B,EAAA,EArEA,GAQAI,GAAAs6B,EAAA16B,EAAA26B,EAAApmB,EARAqmB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAV,EAAA,CAGA,KAAAx6B,EAAA,EAAaA,EAAAs6B,EAAApzB,OAAgBlH,IAG7B,GAFA06B,EAAAt6B,EACAA,EAAAk6B,EAAAviB,WAAA/X,GACA46B,EACA,KAAAx6B,GAAA,KAAAs6B,IAAwCE,GAAA,OACnC,IAAAC,EACL,KAAAz6B,GAAA,KAAAs6B,IAAwCG,GAAA,OACnC,IAAAC,EACL,KAAA16B,GAAA,KAAAs6B,IAAwCI,GAAA,OACnC,IAAAC,EACL,KAAA36B,GAAA,KAAAs6B,IAAwCK,GAAA,OACnC,IACL,MAAA36B,GACA,MAAAk6B,EAAAviB,WAAA/X,EAAA,IACA,MAAAs6B,EAAAviB,WAAA/X,EAAA,IACAg7B,GAAAC,GAAAC,EASK,CACL,OAAA96B,GACA,QAAAy6B,GAAA,CAAmC,MACnC,SAAAD,GAAA,CAAmC,MACnC,SAAAE,GAAA,CAA2C,MAC3C,SAAAI,GAA2B,MAC3B,SAAAA,GAA2B,MAC3B,SAAAD,GAA4B,MAC5B,SAAAA,GAA4B,MAC5B,UAAAD,GAA2B,MAC3B,UAAAA,IAEA,QAAA56B,EAAA,CAIA,IAHA,GAAAkQ,GAAAtQ,EAAA,EACAoB,MAAA,GAEckP,GAAA,GAEd,OADAlP,EAAAk5B,EAAA7vB,OAAA6F,IADsBA,KAItBlP,GAAA+5B,GAAApoB,KAAA3R,KACA25B,GAAA,aA5BAjmB,KAAA6lB,GAEAH,EAAAx6B,EAAA,EACA26B,EAAAL,EAAA9yB,MAAA,EAAAxH,GAAAy6B,QAEAF,GAwCA,QAXAzlB,KAAA6lB,EACAA,EAAAL,EAAA9yB,MAAA,EAAAxH,GAAAy6B,OACG,IAAAD,GACHD,IAQAhmB,EACA,IAAAvU,EAAA,EAAeA,EAAAuU,EAAArN,OAAoBlH,IACnC26B,EAAAS,GAAAT,EAAApmB,EAAAvU,GAIA,OAAA26B,GAGA,QAAAS,IAAAd,EAAA9mB,GACA,GAAAxT,GAAAwT,EAAAtO,QAAA,IACA,IAAAlF,EAAA,EAEA,aAAAwT,EAAA,MAAA8mB,EAAA,GAEA,IAAAh6B,GAAAkT,EAAAhM,MAAA,EAAAxH,GACA4I,EAAA4K,EAAAhM,MAAAxH,EAAA,EACA,cAAAM,EAAA,MAAAg6B,GAAA,MAAA1xB,EAAA,IAAAA,KAMA,QAAAyyB,IAAAC,GACA3b,QAAAC,MAAA,mBAAA0b,GAGA,QAAAC,IACA77B,EACA4E,GAEA,MAAA5E,GACAA,EAAA2K,IAAA,SAAAlK,GAAgC,MAAAA,GAAAmE,KAAiBkP,OAAA,SAAAgoB,GAAuB,MAAAA,QAIxE,QAAAC,IAAAhV,EAAAnmB,EAAA6U,IACAsR,EAAAhK,QAAAgK,EAAAhK,WAAAtX,MAAsC7E,OAAA6U,UACtCsR,EAAAiV,OAAA,EAGA,QAAAC,IAAAlV,EAAAnmB,EAAA6U,IACAsR,EAAAvE,QAAAuE,EAAAvE,WAAA/c,MAAsC7E,OAAA6U,UACtCsR,EAAAiV,OAAA,EAIA,QAAAE,IAAAnV,EAAAnmB,EAAA6U,GACAsR,EAAAoV,SAAAv7B,GAAA6U,EACAsR,EAAAqV,UAAA32B,MAAqB7E,OAAA6U,UAGrB,QAAA4mB,IACAtV,EACAnmB,EACAk4B,EACArjB,EACA6mB,EACA3D,IAEA5R,EAAAzJ,aAAAyJ,EAAAzJ,gBAAA7X,MAAgD7E,OAAAk4B,UAAArjB,QAAA6mB,MAAA3D,cAChD5R,EAAAiV,OAAA,EAGA,QAAAO,IACAxV,EACAnmB,EACA6U,EACAkjB,EACA6D,EACAC,GAEA9D,KAAA7Q,GAcA6Q,EAAAhZ,gBACAgZ,GAAAhZ,QACA/e,EAAA,IAAAA,GAEA+3B,EAAAzgB,aACAygB,GAAAzgB,KACAtX,EAAA,IAAAA,GAGA+3B,EAAA3W,gBACA2W,GAAA3W,QACAphB,EAAA,IAAAA,GAMA,UAAAA,IACA+3B,EAAA+D,OACA97B,EAAA,oBACA+3B,GAAA+D,OACK/D,EAAAgE,SACL/7B,EAAA,WAIA,IAAAg8B,EACAjE,GAAAkE,cACAlE,GAAAkE,OACAD,EAAA7V,EAAA+V,eAAA/V,EAAA+V,kBAEAF,EAAA7V,EAAA6V,SAAA7V,EAAA6V,UAGA,IAAAG,IACAtnB,QAAAslB,OAEApC,KAAA7Q,KACAiV,EAAApE,YAGA,IAAAjQ,GAAAkU,EAAAh8B,EAEAgK,OAAAC,QAAA6d,GACA8T,EAAA9T,EAAAgL,QAAAqJ,GAAArU,EAAAjjB,KAAAs3B,GAEAH,EAAAh8B,GADG8nB,EACH8T,GAAAO,EAAArU,MAAAqU,GAEAA,EAGAhW,EAAAiV,OAAA,EAGA,QAAAgB,IACAjW,EACAnmB,EACAq8B,GAEA,GAAAC,GACAC,GAAApW,EAAA,IAAAnmB,IACAu8B,GAAApW,EAAA,UAAAnmB,EACA,UAAAs8B,EACA,MAAAvC,IAAAuC,EACG,SAAAD,EAAA,CACH,GAAAG,GAAAD,GAAApW,EAAAnmB,EACA,UAAAw8B,EACA,MAAAptB,MAAAC,UAAAmtB,IASA,QAAAD,IACApW,EACAnmB,EACAy8B,GAEA,GAAAt4B,EACA,WAAAA,EAAAgiB,EAAAoV,SAAAv7B,IAEA,OADAsP,GAAA6W,EAAAqV,UACA97B,EAAA,EAAAC,EAAA2P,EAAA1I,OAAoClH,EAAAC,EAAOD,IAC3C,GAAA4P,EAAA5P,GAAAM,SAAA,CACAsP,EAAAxK,OAAApF,EAAA,EACA,OAOA,MAHA+8B,UACAtW,GAAAoV,SAAAv7B,GAEAmE,EAQA,QAAAu4B,IACAvW,EACAtR,EACAkjB,GAEA,GAAAprB,GAAAorB,MACA4E,EAAAhwB,EAAAgwB,OACAxC,EAAAxtB,EAAAwtB,KAGAyC,EADA,KAEAzC,KACAyC,EACA,8CAIAD,IACAC,EAAA,MAAAA,EAAA,IAEA,IAAAC,GAAAC,GAAAjoB,EAAA+nB,EAEAzW,GAAAyJ,OACA/a,MAAA,IAAAA,EAAA,IACAwlB,WAAA,IAAAxlB,EAAA,IACA4b,SAAA,mBAAwDoM,EAAA,KAOxD,QAAAC,IACAjoB,EACAgoB,GAEA,GAAA7zB,GAAA+zB,GAAAloB,EACA,eAAA7L,EAAAhF,IACA6Q,EAAA,IAAAgoB,EAEA,QAAA7zB,EAAA,SAAAA,EAAA,SAAA6zB,EAAA,IA4BA,QAAAE,IAAA54B,GAMA,GAHAA,IAAAg2B,OACApsB,GAAA5J,EAAAyC,OAEAzC,EAAAS,QAAA,QAAAT,EAAA64B,YAAA,KAAAjvB,GAAA,EAEA,MADAkvB,IAAA94B,EAAA64B,YAAA,KACAC,IAAA,GAEAjD,IAAA71B,EAAA+C,MAAA,EAAA+1B,IACAj5B,IAAA,IAAAG,EAAA+C,MAAA+1B,GAAA,SAIAjD,IAAA71B,EACAH,IAAA,KAQA,KAHAgQ,GAAA7P,EACA84B,GAAAC,GAAAC,GAAA,GAEAC,MACAC,GAAAC,KAEAC,GAAAF,IACAG,GAAAH,IACK,KAAAA,IACLI,GAAAJ,GAIA,QACArD,IAAA71B,EAAA+C,MAAA,EAAAg2B,IACAl5B,IAAAG,EAAA+C,MAAAg2B,GAAA,EAAAC,KAIA,QAAAG,MACA,MAAAtpB,IAAAyD,aAAAwlB,IAGA,QAAAG,MACA,MAAAH,KAAAlvB,GAGA,QAAAwvB,IAAAF,GACA,YAAAA,GAAA,KAAAA,EAGA,QAAAI,IAAAJ,GACA,GAAAK,GAAA,CAEA,KADAR,GAAAD,IACAG,MAEA,GADAC,EAAAC,KACAC,GAAAF,GACAG,GAAAH,OAKA,IAFA,KAAAA,GAAuBK,IACvB,KAAAL,GAAuBK,IACvB,IAAAA,EAAA,CACAP,GAAAF,EACA,QAKA,QAAAO,IAAAH,GAEA,IADA,GAAAM,GAAAN,GACAD,OACAC,EAAAC,QACAK,KAeA,QAAA/N,IACAzJ,EACA8Q,EACA2G,GAEAC,GAAAD,CACA,IAAA/oB,GAAAoiB,EAAApiB,MACAkjB,EAAAd,EAAAc,UACAlf,EAAAsN,EAAAtN,IACArX,EAAA2kB,EAAAoV,SAAA/5B,IAaA,IAAA2kB,EAAAnC,UAGA,MAFA0Y,IAAAvW,EAAAtR,EAAAkjB,IAEA,CACG,eAAAlf,EACHilB,GAAA3X,EAAAtR,EAAAkjB,OACG,cAAAlf,GAAA,aAAArX,EACHu8B,GAAA5X,EAAAtR,EAAAkjB,OACG,cAAAlf,GAAA,UAAArX,EACHw8B,GAAA7X,EAAAtR,EAAAkjB,OACG,cAAAlf,GAAA,aAAAA,EACHolB,GAAA9X,EAAAtR,EAAAkjB,OACG,KAAA9xB,GAAAgrB,cAAApY,GAGH,MAFA6jB,IAAAvW,EAAAtR,EAAAkjB,IAEA,CAWA,UAGA,QAAAgG,IACA5X,EACAtR,EACAkjB,GAEA,GAAA4E,GAAA5E,KAAA4E,OACAuB,EAAA9B,GAAAjW,EAAA,iBACAgY,EAAA/B,GAAAjW,EAAA,sBACAiY,EAAAhC,GAAAjW,EAAA,uBACAgV,IAAAhV,EAAA,UACA,iBAAAtR,EAAA,QACAA,EAAA,IAAAqpB,EAAA,QACA,SAAAC,EACA,KAAAtpB,EAAA,IACA,OAAAA,EAAA,IAAAspB,EAAA,MAGAxC,GAAAxV,EAAA,SACA,WAAAtR,EAAA,yCAEAspB,EAAA,MAAAC,EAAA,qCAEAzB,EAAA,MAAAuB,EAAA,IAAAA,GAAA,6CAEwBpB,GAAAjoB,EAAA,wCACZioB,GAAAjoB,EAAA,wDACDioB,GAAAjoB,EAAA,WACX,SAIA,QAAAmpB,IACA7X,EACAtR,EACAkjB,GAEA,GAAA4E,GAAA5E,KAAA4E,OACAuB,EAAA9B,GAAAjW,EAAA,gBACA+X,GAAAvB,EAAA,MAAAuB,EAAA,IAAAA,EACA/C,GAAAhV,EAAA,gBAAAtR,EAAA,IAAAqpB,EAAA,KACAvC,GAAAxV,EAAA,SAAA2W,GAAAjoB,EAAAqpB,GAAA,SAGA,QAAAJ,IACA3X,EACAtR,EACAkjB,GAEA,GAAA4E,GAAA5E,KAAA4E,OACA0B,EAAA,0JAGA1B,EAAA,sBAGA2B,EAAA,uBAAAD,EAAA,GACAC,KAAA,IAAAxB,GAAAjoB,EAFA,6DAGA8mB,GAAAxV,EAAA,SAAAmY,EAAA,SAGA,QAAAL,IACA9X,EACAtR,EACAkjB,GAEA,GAAAv2B,GAAA2kB,EAAAoV,SAAA/5B,KAgBAmL,EAAAorB,MACAwG,EAAA5xB,EAAA4xB,KACA5B,EAAAhwB,EAAAgwB,OACAxC,EAAAxtB,EAAAwtB,KACAqE,GAAAD,GAAA,UAAA/8B,EACA0f,EAAAqd,EACA,SACA,UAAA/8B,EACAi9B,GACA,QAEA7B,EAAA,qBACAzC,KACAyC,EAAA,8BAEAD,IACAC,EAAA,MAAAA,EAAA,IAGA,IAAA0B,GAAAxB,GAAAjoB,EAAA+nB,EACA4B,KACAF,EAAA,qCAA8CA,GAG9CnD,GAAAhV,EAAA,YAAAtR,EAAA,KACA8mB,GAAAxV,EAAAjF,EAAAod,EAAA,UACAnE,GAAAwC,IACAhB,GAAAxV,EAAA,yBAUA,QAAAuY,IAAAr7B,GAEA,GAAAoR,EAAApR,EAAAo7B,KAAA,CAEA,GAAAvd,GAAAqX,GAAA,gBACAl1B,GAAA6d,MAAApe,OAAAO,EAAAo7B,IAAAp7B,EAAA6d,cACA7d,GAAAo7B,IAKAhqB,EAAApR,EAAAs7B,OACAt7B,EAAAu7B,UAAA97B,OAAAO,EAAAs7B,IAAAt7B,EAAAu7B,kBACAv7B,GAAAs7B,KAMA,QAAAE,IAAAl3B,EAAAuZ,EAAAnC,GACA,GAAA7G,GAAA4mB,EACA,gBAAAC,KAEA,OADAp3B,EAAAsG,MAAA,KAAAD,YAEAgxB,GAAA9d,EAAA6d,EAAAhgB,EAAA7G,IAKA,QAAA+mB,IACA/d,EACAvZ,EACAu3B,EACAngB,EACAqC,GAEAzZ,EAAAgY,GAAAhY,GACAu3B,IAAgBv3B,EAAAk3B,GAAAl3B,EAAAuZ,EAAAnC,IAChB+f,GAAAtF,iBACAtY,EACAvZ,EACAw3B,IACSpgB,UAAAqC,WACTrC,GAIA,QAAAigB,IACA9d,EACAvZ,EACAoX,EACA7G,IAEAA,GAAA4mB,IAAAvF,oBACArY,EACAvZ,EAAAiY,WAAAjY,EACAoX,GAIA,QAAAqgB,IAAArI,EAAApe,GACA,IAAApE,EAAAwiB,EAAA7wB,KAAA7C,MAAAkR,EAAAoE,EAAAzS,KAAA7C,IAAA,CAGA,GAAAA,GAAAsV,EAAAzS,KAAA7C,OACA0d,EAAAgW,EAAA7wB,KAAA7C,MACAy7B,IAAAnmB,EAAAK,IACA0lB,GAAAr7B,GACAyd,GAAAzd,EAAA0d,EAAAke,GAAAD,GAAArmB,EAAA1W,SACA68B,OAAAtqB,IAUA,QAAA6qB,IAAAtI,EAAApe,GACA,IAAApE,EAAAwiB,EAAA7wB,KAAA4mB,YAAAvY,EAAAoE,EAAAzS,KAAA4mB,UAAA,CAGA,GAAA9oB,GAAA2a,EACA3F,EAAAL,EAAAK,IACAsmB,EAAAvI,EAAA7wB,KAAA4mB,aACA3Q,EAAAxD,EAAAzS,KAAA4mB,YAEArY,GAAA0H,EAAAhC,UACAgC,EAAAxD,EAAAzS,KAAA4mB,SAAAtW,KAA2C2F,GAG3C,KAAAnY,IAAAs7B,GACA/qB,EAAA4H,EAAAnY,MACAgV,EAAAhV,GAAA,GAGA,KAAAA,IAAAmY,GAAA,CAKA,GAJAwC,EAAAxC,EAAAnY,GAIA,gBAAAA,GAAA,cAAAA,EAAA,CAEA,GADA2U,EAAAG,WAA2BH,EAAAG,SAAAlS,OAAA,GAC3B+X,IAAA2gB,EAAAt7B,GAAkC,QAGlC,KAAAgV,EAAAlH,WAAAlL,QACAoS,EAAApN,YAAAoN,EAAAlH,WAAA,IAIA,aAAA9N,EAAA,CAGAgV,EAAAumB,OAAA5gB,CAEA,IAAA6gB,GAAAjrB,EAAAoK,GAAA,GAAAxJ,OAAAwJ,EACA8gB,IAAAzmB,EAAAwmB,KACAxmB,EAAAnE,MAAA2qB,OAGAxmB,GAAAhV,GAAA2a,IAQA,QAAA8gB,IAAAzmB,EAAA0mB,GACA,OAAA1mB,EAAA2mB,YACA,WAAA3mB,EAAAwc,SACAoK,GAAA5mB,EAAA0mB,IACAG,GAAA7mB,EAAA0mB,IAIA,QAAAE,IAAA5mB,EAAA0mB,GAGA,GAAAI,IAAA,CAGA,KAAOA,EAAAzvB,SAAA0vB,gBAAA/mB,EAA+C,MAAAzF,IACtD,MAAAusB,IAAA9mB,EAAAnE,QAAA6qB,EAGA,QAAAG,IAAA7mB,EAAAkC,GACA,GAAArG,GAAAmE,EAAAnE,MACAkjB,EAAA/e,EAAAgnB,WACA,IAAAvrB,EAAAsjB,GAAA,CACA,GAAAA,EAAAwG,KAEA,QAEA,IAAAxG,EAAA4E,OACA,MAAApnB,GAAAV,KAAAU,EAAA2F,EAEA,IAAA6c,EAAAoC,KACA,MAAAtlB,GAAAslB,SAAAjf,EAAAif,OAGA,MAAAtlB,KAAAqG,EAwBA,QAAA+kB,IAAA/5B,GACA,GAAAorB,GAAA4O,GAAAh6B,EAAAorB,MAGA,OAAAprB,GAAAi6B,YACA3pB,EAAAtQ,EAAAi6B,YAAA7O,GACAA,EAIA,QAAA4O,IAAAE,GACA,MAAAp2B,OAAAC,QAAAm2B,GACAzpB,EAAAypB,GAEA,gBAAAA,GACAC,GAAAD,GAEAA,EAOA,QAAAE,IAAA3nB,EAAA4nB,GACA,GACAC,GADAx3B,IAGA,IAAAu3B,EAEA,IADA,GAAAhM,GAAA5b,EACA4b,EAAAF,oBACAE,IAAAF,kBAAAjN,SAEAmN,EAAAruB,OACAs6B,EAAAP,GAAA1L,EAAAruB,QAEAsQ,EAAAxN,EAAAw3B,IAKAA,EAAAP,GAAAtnB,EAAAzS,QACAsQ,EAAAxN,EAAAw3B,EAIA,KADA,GAAA1vB,GAAA6H,EACA7H,IAAAzO,QACAyO,EAAA5K,OAAAs6B,EAAAP,GAAAnvB,EAAA5K,QACAsQ,EAAAxN,EAAAw3B,EAGA,OAAAx3B,GA8CA,QAAAy3B,IAAA1J,EAAApe,GACA,GAAAzS,GAAAyS,EAAAzS,KACAwzB,EAAA3C,EAAA7wB,IAEA,MAAAqO,EAAArO,EAAAi6B,cAAA5rB,EAAArO,EAAAorB,QACA/c,EAAAmlB,EAAAyG,cAAA5rB,EAAAmlB,EAAApI,QADA,CAMA,GAAA3S,GAAA3e,EACAmmB,EAAAxN,EAAAK,IACA0nB,EAAAhH,EAAAyG,YACAQ,EAAAjH,EAAAkH,iBAAAlH,EAAApI,UAGAuP,EAAAH,GAAAC,EAEArP,EAAA4O,GAAAvnB,EAAAzS,KAAAorB,UAKA3Y,GAAAzS,KAAA06B,gBAAAnsB,EAAA6c,EAAAnX,QACA3D,KAAe8a,GACfA,CAEA,IAAAwP,GAAAR,GAAA3nB,GAAA,EAEA,KAAA3Y,IAAA6gC,GACAtsB,EAAAusB,EAAA9gC,KACA+gC,GAAA5a,EAAAnmB,EAAA,GAGA,KAAAA,IAAA8gC,IACAniB,EAAAmiB,EAAA9gC,MACA6gC,EAAA7gC,IAEA+gC,GAAA5a,EAAAnmB,EAAA,MAAA2e,EAAA,GAAAA,IAgBA,QAAAqiB,IAAA7a,EAAAwT,GAEA,GAAAA,QAAAQ,QAKA,GAAAhU,EAAA8a,UACAtH,EAAA/0B,QAAA,QACA+0B,EAAA7uB,MAAA,OAAA/G,QAAA,SAAAjE,GAA6C,MAAAqmB,GAAA8a,UAAAz+B,IAAA1C,KAE7CqmB,EAAA8a,UAAAz+B,IAAAm3B,OAEG,CACH,GAAAhb,GAAA,KAAAwH,EAAA+a,aAAA,iBACAviB,GAAA/Z,QAAA,IAAA+0B,EAAA,QACAxT,EAAAnU,aAAA,SAAA2M,EAAAgb,GAAAQ,SASA,QAAAgH,IAAAhb,EAAAwT,GAEA,GAAAA,QAAAQ,QAKA,GAAAhU,EAAA8a,UACAtH,EAAA/0B,QAAA,QACA+0B,EAAA7uB,MAAA,OAAA/G,QAAA,SAAAjE,GAA6C,MAAAqmB,GAAA8a,UAAAxwB,OAAA3Q,KAE7CqmB,EAAA8a,UAAAxwB,OAAAkpB,GAEAxT,EAAA8a,UAAAr6B,QACAuf,EAAA2S,gBAAA,aAEG,CAGH,IAFA,GAAAna,GAAA,KAAAwH,EAAA+a,aAAA,kBACAE,EAAA,IAAAzH,EAAA,IACAhb,EAAA/Z,QAAAw8B,IAAA,GACAziB,IAAA0iB,QAAAD,EAAA,IAEAziB,KAAAwb,OACAxb,EACAwH,EAAAnU,aAAA,QAAA2M,GAEAwH,EAAA2S,gBAAA,UAOA,QAAAwI,IAAA5pB,GACA,GAAAA,EAAA,CAIA,mBAAAA,GAAA,CACA,GAAA1O,KAKA,QAJA,IAAA0O,EAAApG,KACAkF,EAAAxN,EAAAu4B,GAAA7pB,EAAA1X,MAAA,MAEAwW,EAAAxN,EAAA0O,GACA1O,EACG,sBAAA0O,GACH6pB,GAAA7pB,OADG,IAgDH,QAAA8pB,IAAA39B,GACA49B,GAAA,WACAA,GAAA59B,KAIA,QAAA69B,IAAAvb,EAAAwT,GACA,GAAAgI,GAAAxb,EAAA0T,qBAAA1T,EAAA0T,sBACA8H,GAAA/8B,QAAA+0B,GAAA,IACAgI,EAAA98B,KAAA80B,GACAqH,GAAA7a,EAAAwT,IAIA,QAAAiI,IAAAzb,EAAAwT,GACAxT,EAAA0T,oBACAppB,EAAA0V,EAAA0T,mBAAAF,GAEAwH,GAAAhb,EAAAwT,GAGA,QAAAkI,IACA1b,EACA2b,EACA/4B,GAEA,GAAA4D,GAAAo1B,GAAA5b,EAAA2b,GACAtgC,EAAAmL,EAAAnL,KACA2iB,EAAAxX,EAAAwX,QACA6d,EAAAr1B,EAAAq1B,SACA,KAAAxgC,EAAc,MAAAuH,IACd,IAAAmY,GAAA1f,IAAAygC,GAAAC,GAAAC,GACAC,EAAA,EACAC,EAAA,WACAlc,EAAAoT,oBAAArY,EAAAohB,GACAv5B,KAEAu5B,EAAA,SAAA/uB,GACAA,EAAA6E,SAAA+N,KACAic,GAAAJ,GACAK,IAIAne,YAAA,WACAke,EAAAJ,GACAK,KAEGle,EAAA,GACHgC,EAAAqT,iBAAAtY,EAAAohB,GAKA,QAAAP,IAAA5b,EAAA2b,GACA,GAQAtgC,GARAoO,EAAA1E,OAAAq3B,iBAAApc,GACAqc,EAAA5yB,EAAA6yB,GAAA,SAAA33B,MAAA,MACA43B,EAAA9yB,EAAA6yB,GAAA,YAAA33B,MAAA,MACA63B,EAAAC,GAAAJ,EAAAE,GACAG,EAAAjzB,EAAAkzB,GAAA,SAAAh4B,MAAA,MACAi4B,EAAAnzB,EAAAkzB,GAAA,YAAAh4B,MAAA,MACAk4B,EAAAJ,GAAAC,EAAAE,GAGA5e,EAAA,EACA6d,EAAA,CA8BA,OA5BAF,KAAAG,GACAU,EAAA,IACAnhC,EAAAygC,GACA9d,EAAAwe,EACAX,EAAAU,EAAA97B,QAEGk7B,IAAAmB,GACHD,EAAA,IACAxhC,EAAAyhC,GACA9e,EAAA6e,EACAhB,EAAAe,EAAAn8B,SAGAud,EAAA/O,KAAAgG,IAAAunB,EAAAK,GACAxhC,EAAA2iB,EAAA,EACAwe,EAAAK,EACAf,GACAgB,GACA,KACAjB,EAAAxgC,EACAA,IAAAygC,GACAS,EAAA97B,OACAm8B,EAAAn8B,OACA,IAMApF,OACA2iB,UACA6d,YACAkB,aANA1hC,IAAAygC,IACAkB,GAAA1wB,KAAA7C,EAAA6yB,GAAA,cASA,QAAAG,IAAAQ,EAAAC,GAEA,KAAAD,EAAAx8B,OAAAy8B,EAAAz8B,QACAw8B,IAAAtgC,OAAAsgC,EAGA,OAAAhuB,MAAAgG,IAAAnN,MAAA,KAAAo1B,EAAAt5B,IAAA,SAAAhK,EAAAL,GACA,MAAA4jC,IAAAvjC,GAAAujC,GAAAF,EAAA1jC,OAIA,QAAA4jC,IAAAviC,GACA,WAAA6J,OAAA7J,EAAAmG,MAAA,OAKA,QAAAq8B,IAAA5qB,EAAA6qB,GACA,GAAArd,GAAAxN,EAAAK,GAGAvE,GAAA0R,EAAAsd,YACAtd,EAAAsd,SAAAC,WAAA,EACAvd,EAAAsd,WAGA,IAAAv9B,GAAAo7B,GAAA3oB,EAAAzS,KAAAy9B,WACA,KAAApvB,EAAArO,KAKAuO,EAAA0R,EAAAyd,WAAA,IAAAzd,EAAA0d,SAAA,CA4BA,IAxBA,GAAAvyB,GAAApL,EAAAoL,IACA9P,EAAA0E,EAAA1E,KACAsiC,EAAA59B,EAAA49B,WACAC,EAAA79B,EAAA69B,aACAC,EAAA99B,EAAA89B,iBACAC,EAAA/9B,EAAA+9B,YACAC,EAAAh+B,EAAAg+B,cACAC,EAAAj+B,EAAAi+B,kBACAC,EAAAl+B,EAAAk+B,YACAb,EAAAr9B,EAAAq9B,MACAc,EAAAn+B,EAAAm+B,WACAC,EAAAp+B,EAAAo+B,eACAC,EAAAr+B,EAAAq+B,aACAC,EAAAt+B,EAAAs+B,OACAC,EAAAv+B,EAAAu+B,YACAC,EAAAx+B,EAAAw+B,gBACAC,EAAAz+B,EAAAy+B,SAMA1iC,EAAA2iC,GACAC,EAAAD,GAAAziC,OACA0iC,KAAAxiC,QACAwiC,IAAAxiC,OACAJ,EAAA4iC,EAAA5iC,OAGA,IAAA6iC,IAAA7iC,EAAA8jB,aAAApN,EAAAosB,YAEA,KAAAD,GAAAN,GAAA,KAAAA,EAAA,CAIA,GAAAQ,GAAAF,GAAAb,EACAA,EACAH,EACAmB,EAAAH,GAAAX,EACAA,EACAH,EACAkB,EAAAJ,GAAAZ,EACAA,EACAH,EAEAoB,EAAAL,EACAP,GAAAH,EACAA,EACAgB,EAAAN,GACA,kBAAAN,KACAjB,EACA8B,EAAAP,EACAL,GAAAJ,EACAA,EACAiB,EAAAR,EACAJ,GAAAJ,EACAA,EAEAiB,EAAAhwB,EACAtR,EAAA0gC,GACAA,EAAApB,MACAoB,GAOAa,GAAA,IAAAl0B,IAAA6nB,GACAsM,EAAAC,GAAAN,GAEAr8B,EAAAod,EAAAyd,SAAAtsB,EAAA,WACAkuB,IACA5D,GAAAzb,EAAA+e,GACAtD,GAAAzb,EAAA8e,IAEAl8B,EAAA26B,WACA8B,GACA5D,GAAAzb,EAAA6e,GAEAM,KAAAnf,IAEAkf,KAAAlf,GAEAA,EAAAyd,SAAA,MAGAjrB,GAAAzS,KAAAy/B,MAEArkB,GAAA3I,EAAA,oBACA,GAAAtW,GAAA8jB,EAAArV,WACA80B,EAAAvjC,KAAAwjC,UAAAxjC,EAAAwjC,SAAAltB,EAAA3U,IACA4hC,IACAA,EAAA/sB,MAAAF,EAAAE,KACA+sB,EAAA5sB,IAAAyqB,UAEAmC,EAAA5sB,IAAAyqB,WAEA2B,KAAAjf,EAAApd,KAKAo8B,KAAAhf,GACAqf,IACA9D,GAAAvb,EAAA6e,GACAtD,GAAAvb,EAAA8e,GACAzD,GAAA,WACAI,GAAAzb,EAAA6e,GACAj8B,EAAA26B,YACAhC,GAAAvb,EAAA+e,GACAO,IACAK,GAAAP,GACArhB,WAAAnb,EAAAw8B,GAEA1D,GAAA1b,EAAA3kB,EAAAuH,QAOA4P,EAAAzS,KAAAy/B,OACAnC,OACA4B,KAAAjf,EAAApd,IAGAy8B,GAAAC,GACA18B,MAIA,QAAAg9B,IAAAptB,EAAAqtB,GAsEA,QAAAC,KAEAl9B,EAAA26B,YAIA/qB,EAAAzS,KAAAy/B,QACAxf,EAAArV,WAAA+0B,WAAA1f,EAAArV,WAAA+0B,cAA6DltB,EAAA,KAAAA,GAE7DutB,KAAA/f,GACAqf,IACA9D,GAAAvb,EAAAggB,GACAzE,GAAAvb,EAAAigB,GACA5E,GAAA,WACAI,GAAAzb,EAAAggB,GACAp9B,EAAA26B,YACAhC,GAAAvb,EAAAkgB,GACAZ,IACAK,GAAAQ,GACApiB,WAAAnb,EAAAu9B,GAEAzE,GAAA1b,EAAA3kB,EAAAuH,QAMAg9B,KAAA5f,EAAApd,GACAy8B,GAAAC,GACA18B,KAlGA,GAAAod,GAAAxN,EAAAK,GAGAvE,GAAA0R,EAAAyd,YACAzd,EAAAyd,SAAAF,WAAA,EACAvd,EAAAyd,WAGA,IAAA19B,GAAAo7B,GAAA3oB,EAAAzS,KAAAy9B,WACA,IAAApvB,EAAArO,IAAA,IAAAigB,EAAA0d,SACA,MAAAmC,IAIA,KAAAvxB,EAAA0R,EAAAsd,UAAA,CAIA,GAAAnyB,GAAApL,EAAAoL,IACA9P,EAAA0E,EAAA1E,KACA2kC,EAAAjgC,EAAAigC,WACAE,EAAAngC,EAAAmgC,aACAD,EAAAlgC,EAAAkgC,iBACAF,EAAAhgC,EAAAggC,YACAH,EAAA7/B,EAAA6/B,MACAQ,EAAArgC,EAAAqgC,WACAC,EAAAtgC,EAAAsgC,eACAC,EAAAvgC,EAAAugC,WACA9B,EAAAz+B,EAAAy+B,SAEAa,GAAA,IAAAl0B,IAAA6nB,GACAsM,EAAAC,GAAAK,GAEAO,EAAA/wB,EACAtR,EAAA0gC,GACAA,EAAAoB,MACApB,GAOA57B,EAAAod,EAAAsd,SAAAnsB,EAAA,WACA6O,EAAArV,YAAAqV,EAAArV,WAAA+0B,WACA1f,EAAArV,WAAA+0B,SAAAltB,EAAA3U,KAAA,MAEAwhC,IACA5D,GAAAzb,EAAAkgB,GACAzE,GAAAzb,EAAAigB,IAEAr9B,EAAA26B,WACA8B,GACA5D,GAAAzb,EAAAggB,GAEAK,KAAArgB,KAEA6f,IACAO,KAAApgB,IAEAA,EAAAsd,SAAA,MAGAgD,GACAA,EAAAR,GAEAA,KAsDA,QAAAH,IAAA3hC,GACA,sBAAAA,KAAAqR,MAAArR,GASA,QAAAuhC,IAAA7hC,GACA,GAAA0Q,EAAA1Q,GACA,QAEA,IAAA6iC,GAAA7iC,EAAA8c,GACA,OAAAlM,GAAAiyB,GAEAhB,GACA17B,MAAAC,QAAAy8B,GACAA,EAAA,GACAA,IAGA7iC,EAAAsS,SAAAtS,EAAA+C,QAAA,EAIA,QAAA+/B,IAAAzL,EAAAviB,IACA,IAAAA,EAAAzS,KAAAy/B,MACApC,GAAA5qB,GAuGA,QAAAiuB,IAAAzgB,EAAA0gB,EAAAhrB,GACAirB,GAAA3gB,EAAA0gB,EAAAhrB,IAEA0c,IAAAC,KACAtU,WAAA,WACA4iB,GAAA3gB,EAAA0gB,EAAAhrB,IACK,GAIL,QAAAirB,IAAA3gB,EAAA0gB,EAAAhrB,GACA,GAAAhH,GAAAgyB,EAAAhyB,MACAkyB,EAAA5gB,EAAAsP,QACA,KAAAsR,GAAA/8B,MAAAC,QAAA4K,GAAA,CASA,OADAygB,GAAA0R,EACAtnC,EAAA,EAAAC,EAAAwmB,EAAAzkB,QAAAkF,OAAwClH,EAAAC,EAAOD,IAE/C,GADAsnC,EAAA7gB,EAAAzkB,QAAAhC,GACAqnC,EACAzR,EAAAje,EAAAxC,EAAAoyB,GAAAD,KAAA,EACAA,EAAA1R,eACA0R,EAAA1R,gBAGA,IAAAze,EAAAowB,GAAAD,GAAAnyB,GAIA,YAHAsR,EAAA+gB,gBAAAxnC,IACAymB,EAAA+gB,cAAAxnC,GAMAqnC,KACA5gB,EAAA+gB,eAAA,IAIA,QAAAC,IAAAtyB,EAAAnT,GACA,MAAAA,GAAAwV,MAAA,SAAAhX,GAAqC,OAAA2W,EAAA3W,EAAA2U,KAGrC,QAAAoyB,IAAAD,GACA,gBAAAA,GACAA,EAAAzH,OACAyH,EAAAnyB,MAGA,QAAAuyB,IAAA7zB,GACAA,EAAA6E,OAAAunB,WAAA,EAGA,QAAA0H,IAAA9zB,GAEAA,EAAA6E,OAAAunB,YACApsB,EAAA6E,OAAAunB,WAAA,EACA2H,GAAA/zB,EAAA6E,OAAA,UAGA,QAAAkvB,IAAAnhB,EAAA3kB,GACA,GAAA+R,GAAAlD,SAAAk3B,YAAA,aACAh0B,GAAAi0B,UAAAhmC,GAAA,MACA2kB,EAAAshB,cAAAl0B,GAMA,QAAAm0B,IAAA/uB,GACA,OAAAA,EAAA0b,mBAAA1b,EAAAzS,MAAAyS,EAAAzS,KAAAy9B,WAEAhrB,EADA+uB,GAAA/uB,EAAA0b,kBAAAjN,QAyFA,QAAAugB,IAAAhvB,GACA,GAAAivB,GAAAjvB,KAAAM,gBACA,OAAA2uB,MAAA5vB,KAAAtW,QAAA8jB,SACAmiB,GAAAtjB,GAAAujB,EAAA9uB,WAEAH,EAIA,QAAAkvB,IAAAjlB,GACA,GAAA1c,MACAxE,EAAAkhB,EAAAlY,QAEA,QAAA1G,KAAAtC,GAAAic,UACAzX,EAAAlC,GAAA4e,EAAA5e,EAIA,IAAAygB,GAAA/iB,EAAAgjB,gBACA,QAAAojB,KAAArjB,GACAve,EAAAkW,GAAA0rB,IAAArjB,EAAAqjB,EAEA,OAAA5hC,GAGA,QAAA6hC,IAAAllC,EAAAmlC,GACA,oBAAAv1B,KAAAu1B,EAAAnvB,KACA,MAAAhW,GAAA,cACAsZ,MAAA6rB,EAAA/uB,iBAAA0E,YAKA,QAAAsqB,IAAAtvB,GACA,KAAAA,IAAAtW,QACA,GAAAsW,EAAAzS,KAAAy9B,WACA,SAKA,QAAAuE,IAAAlgC,EAAAmgC,GACA,MAAAA,GAAAnkC,MAAAgE,EAAAhE,KAAAmkC,EAAAtvB,MAAA7Q,EAAA6Q,IAuQA,QAAAuvB,IAAAtoC,GAEAA,EAAAkZ,IAAAqvB,SACAvoC,EAAAkZ,IAAAqvB,UAGAvoC,EAAAkZ,IAAA4qB,UACA9jC,EAAAkZ,IAAA4qB,WAIA,QAAA0E,IAAAxoC,GACAA,EAAAoG,KAAAqiC,OAAAzoC,EAAAkZ,IAAAwvB,wBAGA,QAAAC,IAAA3oC,GACA,GAAA4oC,GAAA5oC,EAAAoG,KAAAyiC,IACAJ,EAAAzoC,EAAAoG,KAAAqiC,OACAK,EAAAF,EAAAG,KAAAN,EAAAM,KACAC,EAAAJ,EAAAK,IAAAR,EAAAQ,GACA,IAAAH,GAAAE,EAAA,CACAhpC,EAAAoG,KAAA8iC,OAAA,CACA,IAAAjoC,GAAAjB,EAAAkZ,IAAAsY,KACAvwB,GAAAkoC,UAAAloC,EAAAmoC,gBAAA,aAAAN,EAAA,MAAAE,EAAA,MACA/nC,EAAAooC,mBAAA,MA+EA,QAAAC,IACArwB,EACAswB,GAEA,GAAAC,GAAAD,EAAAE,GAAAF,GAAAG,EACA,IAAAF,EAAA72B,KAAAsG,GAAA,CAOA,IAJA,GAGAuF,GAAA9M,EAAAi4B,EAHAC,KACAC,KACApnB,EAAA+mB,EAAA/mB,UAAA,EAEAjE,EAAAgrB,EAAAM,KAAA7wB,IAAA,CACAvH,EAAA8M,EAAA9M,MAEAA,EAAA+Q,IACAonB,EAAA9kC,KAAA4kC,EAAA1wB,EAAA7R,MAAAqb,EAAA/Q,IACAk4B,EAAA7kC,KAAAuK,KAAAC,UAAAo6B,IAGA,IAAAzP,GAAAD,GAAAzb,EAAA,GAAA6b,OACAuP,GAAA7kC,KAAA,MAAAm1B,EAAA,KACA2P,EAAA9kC,MAAoBglC,WAAA7P,IACpBzX,EAAA/Q,EAAA8M,EAAA,GAAA1X,OAMA,MAJA2b,GAAAxJ,EAAAnS,SACA+iC,EAAA9kC,KAAA4kC,EAAA1wB,EAAA7R,MAAAqb,IACAmnB,EAAA7kC,KAAAuK,KAAAC,UAAAo6B,MAGApP,WAAAqP,EAAA16B,KAAA,KACA06B,OAAAC,IAMA,QAAAG,IAAA3jB,EAAAzkB,GACA,GACAgzB,IADAhzB,EAAAm6B,KACAU,GAAApW,EAAA,SAYAuO,KACAvO,EAAAuO,YAAAtlB,KAAAC,UAAAqlB,GAEA,IAAAqV,GAAA3N,GAAAjW,EAAA,WACA4jB,KACA5jB,EAAA4jB,gBAIA,QAAAC,IAAA7jB,GACA,GAAAjgB,GAAA,EAOA,OANAigB,GAAAuO,cACAxuB,GAAA,eAAAigB,EAAA,iBAEAA,EAAA4jB,eACA7jC,GAAA,SAAAigB,EAAA,kBAEAjgB,EAWA,QAAA+jC,IAAA9jB,EAAAzkB,GACA,GACAy+B,IADAz+B,EAAAm6B,KACAU,GAAApW,EAAA,SACA,IAAAga,EAAA,CAaAha,EAAAga,YAAA/wB,KAAAC,UAAAgxB,GAAAF,IAGA,GAAA+J,GAAA9N,GAAAjW,EAAA,WACA+jB,KACA/jB,EAAA+jB,gBAIA,QAAAC,IAAAhkB,GACA,GAAAjgB,GAAA,EAOA,OANAigB,GAAAga,cACAj6B,GAAA,eAAAigB,EAAA,iBAEAA,EAAA+jB,eACAhkC,GAAA,UAAAigB,EAAA,mBAEAjgB,EA6FA,QAAAkkC,IAAAv1B,EAAAw1B,GACA,GAAAC,GAAAD,EAAAE,GAAAC,EACA,OAAA31B,GAAAwsB,QAAAiJ,EAAA,SAAAhsB,GAA6C,MAAAmsB,IAAAnsB,KAG7C,QAAAosB,IAAAC,EAAAjpC,GA8HA,QAAAkpC,GAAApqC,GACAgR,GAAAhR,EACAmqC,IAAAE,UAAArqC,GAuEA,QAAAsqC,GAAAtV,EAAAlf,EAAA+rB,GACA,GAAAsG,GAAAoC,CASA,IARA,MAAAz0B,IAAwBA,EAAA9E,GACxB,MAAA6wB,IAAsBA,EAAA7wB,GAEtBgkB,IACAuV,EAAAvV,EAAA7iB,eAIA6iB,EACA,IAAAmT,EAAAqC,EAAApkC,OAAA,EAAkC+hC,GAAA,GAClCqC,EAAArC,GAAAsC,gBAAAF,EAD4CpC,SAO5CA,GAAA,CAGA,IAAAA,GAAA,GAEA,OAAAjpC,GAAAsrC,EAAApkC,OAAA,EAAoClH,GAAAipC,EAAUjpC,IAS9CgC,EAAA2gC,KACA3gC,EAAA2gC,IAAA2I,EAAAtrC,GAAAmZ,IAAAvC,EAAA+rB,EAKA2I,GAAApkC,OAAA+hC,EACAuC,EAAAvC,GAAAqC,EAAArC,EAAA,GAAA9vB,QACK,OAAAkyB,EACLrpC,EAAA4U,OACA5U,EAAA4U,MAAAkf,MAAA,EAAAlf,EAAA+rB,GAEK,MAAA0I,IACLrpC,EAAA4U,OACA5U,EAAA4U,MAAAkf,MAAA,EAAAlf,EAAA+rB,GAEA3gC,EAAA2gC,KACA3gC,EAAA2gC,IAAA7M,EAAAlf,EAAA+rB,IAjPA,IANA,GAKA7f,GAAA0oB,EALAF,KACAG,EAAAzpC,EAAAypC,WACAC,EAAA1pC,EAAA2pC,YAAAC,GACAC,EAAA7pC,EAAA8pC,kBAAAF,GACA95B,EAAA,EAEAm5B,GAAA,CAGA,GAFAnoB,EAAAmoB,EAEAO,GAAAO,GAAAP,GAgFK,CACL,GAAAQ,GAAA,EACAC,EAAAT,EAAAv4B,cACAi5B,EAAAC,GAAAF,KAAAE,GAAAF,GAAA,GAAAG,QAAA,kBAAAH,EAAA,gBACAI,EAAApB,EAAAtJ,QAAAuK,EAAA,SAAA1+B,EAAA6L,EAAAizB,GAaA,MAZAN,GAAAM,EAAAplC,OACA6kC,GAAAE,IAAA,aAAAA,IACA5yB,IACAsoB,QAAA,4BACAA,QAAA,mCAEA4K,GAAAN,EAAA5yB,KACAA,IAAA7R,MAAA,IAEAxF,EAAAwqC,OACAxqC,EAAAwqC,MAAAnzB,GAEA,IAEAvH,IAAAm5B,EAAA/jC,OAAAmlC,EAAAnlC,OACA+jC,EAAAoB,EACAjB,EAAAa,EAAAn6B,EAAAk6B,EAAAl6B,OArGA,CACA,GAAA26B,GAAAxB,EAAA/lC,QAAA,IACA,QAAAunC,EAAA,CAEA,GAAAC,GAAA35B,KAAAk4B,GAAA,CACA,GAAA0B,GAAA1B,EAAA/lC,QAAA,SAEA,IAAAynC,GAAA,GACA3qC,EAAA4qC,mBACA5qC,EAAA0qC,QAAAzB,EAAAE,UAAA,EAAAwB,IAEAzB,EAAAyB,EAAA,EACA,WAKA,GAAAE,GAAA95B,KAAAk4B,GAAA,CACA,GAAA6B,GAAA7B,EAAA/lC,QAAA,KAEA,IAAA4nC,GAAA,GACA5B,EAAA4B,EAAA,EACA,WAKA,GAAAC,GAAA9B,EAAArsB,MAAAouB,GACA,IAAAD,EAAA,CACA7B,EAAA6B,EAAA,GAAA7lC,OACA,UAIA,GAAA+lC,GAAAhC,EAAArsB,MAAA0tB,GACA,IAAAW,EAAA,CACA,GAAAC,GAAAp7B,CACAo5B,GAAA+B,EAAA,GAAA/lC,QACAkkC,EAAA6B,EAAA,GAAAC,EAAAp7B,EACA,UAIA,GAAAq7B,GA8EA,WACA,GAAAv2B,GAAAq0B,EAAArsB,MAAAwuB,GACA,IAAAx2B,EAAA,CACA,GAAAgI,IACAkX,QAAAlf,EAAA,GACAsL,SACAtL,MAAA9E,EAEAo5B,GAAAt0B,EAAA,GAAA1P,OAEA,KADA,GAAAy7B,GAAA0K,IACA1K,EAAAsI,EAAArsB,MAAA0uB,OAAAD,EAAApC,EAAArsB,MAAA2uB,MACArC,EAAAmC,EAAA,GAAAnmC,QACA0X,EAAAsD,MAAA/c,KAAAkoC,EAEA,IAAA1K,EAIA,MAHA/jB,GAAA4uB,WAAA7K,EAAA,GACAuI,EAAAvI,EAAA,GAAAz7B,QACA0X,EAAA+jB,IAAA7wB,EACA8M,KA/FA,IAAAuuB,EAAA,EAoGA,SAAAvuB,GACA,GAAAkX,GAAAlX,EAAAkX,QACA0X,EAAA5uB,EAAA4uB,UAEA/B,KACA,MAAAD,GAAAiC,GAAA3X,IACAsV,EAAAI,GAEAK,EAAA/V,IAAA0V,IAAA1V,GACAsV,EAAAtV,GAQA,QAJA4X,GAAAhC,EAAA5V,MAAA0X,EAEAvtC,EAAA2e,EAAAsD,MAAAhb,OACAgb,EAAA,GAAA5X,OAAArK,GACAD,EAAA,EAAmBA,EAAAC,EAAOD,IAAA,CAC1B,GAAA4I,GAAAgW,EAAAsD,MAAAliB,EAEA2tC,MAAA,IAAA/kC,EAAA,GAAA1D,QAAA,QACA,KAAA0D,EAAA,UAA6BA,GAAA,GAC7B,KAAAA,EAAA,UAA6BA,GAAA,GAC7B,KAAAA,EAAA,UAA6BA,GAAA,GAE7B,IAAAuM,GAAAvM,EAAA,IAAAA,EAAA,IAAAA,EAAA,OACA+hC,EAAA,MAAA7U,GAAA,SAAAltB,EAAA,GACA5G,EAAA4rC,4BACA5rC,EAAA2oC,oBACAzoB,GAAAliB,IACAM,KAAAsI,EAAA,GACAuM,MAAAu1B,GAAAv1B,EAAAw1B,IAIA+C,IACApC,EAAAnmC,MAAkBgU,IAAA2c,EAAAyV,cAAAzV,EAAA7iB,cAAAiP,UAClBspB,EAAA1V,GAGA9zB,EAAA4U,OACA5U,EAAA4U,MAAAkf,EAAA5T,EAAAwrB,EAAA9uB,EAAAhI,MAAAgI,EAAA+jB,MA5IAwK,GACAZ,GAAAf,EAAAP,IACAC,EAAA,EAEA,WAIA,GAAA7xB,OAAA,GAAAw0B,MAAA,GAAAjQ,MAAA,EACA,IAAA6O,GAAA,GAEA,IADAoB,EAAA5C,EAAAzjC,MAAAilC,KAEAH,GAAAv5B,KAAA86B,IACAT,GAAAr6B,KAAA86B,IACAnB,GAAA35B,KAAA86B,IACAhB,GAAA95B,KAAA86B,KAGAjQ,EAAAiQ,EAAA3oC,QAAA,QACA,IACAunC,GAAA7O,EACAiQ,EAAA5C,EAAAzjC,MAAAilC,EAEApzB,GAAA4xB,EAAAE,UAAA,EAAAsB,GACAvB,EAAAuB,GAGAA,EAAA,IACApzB,EAAA4xB,EACAA,EAAA,IAGAjpC,EAAAwqC,OAAAnzB,GACArX,EAAAwqC,MAAAnzB,GA0BA,GAAA4xB,IAAAnoB,EAAA,CACA9gB,EAAAwqC,OAAAxqC,EAAAwqC,MAAAvB,EAIA,QAKAG,IA4JA,QAAA0C,IACA30B,EACA+I,EACAvf,GAEA,OACAb,KAAA,EACAqX,MACA2iB,UAAA5Z,EACA2Z,SAAAkS,GAAA7rB,GACAvf,SACAyW,aAOA,QAAA40B,IACAC,EACAjsC,GA6BA,QAAAksC,GAAAC,GAEAA,EAAAC,MACAC,GAAA,GAEAC,GAAAH,EAAAh1B,OACAo1B,GAAA,EAGA,QAAAvuC,GAAA,EAAmBA,EAAAwuC,GAAAtnC,OAA2BlH,IAC9CwuC,GAAAxuC,GAAAmuC,EAAAnsC,GArCAysC,GAAAzsC,EAAAm6B,MAAAd,GAEAiT,GAAAtsC,EAAA0sC,UAAA9C,GACA+C,GAAA3sC,EAAAmrB,aAAAye,GACAgD,GAAA5sC,EAAAsvB,iBAAAsa,GAEAiD,GAAAtT,GAAAv5B,EAAAtC,QAAA,iBACAovC,GAAAvT,GAAAv5B,EAAAtC,QAAA,oBACA8uC,GAAAjT,GAAAv5B,EAAAtC,QAAA,qBAEAiqC,GAAA3nC,EAAA2nC,UAEA,IAEA7jC,GACAipC,EAHAzD,KACA0D,GAAA,IAAAhtC,EAAAgtC,mBAGAX,GAAA,EACAE,GAAA,CA4MA,OApLAvD,IAAAiD,GACA9R,KAAAsS,GACAhD,WAAAzpC,EAAAypC,WACAE,WAAA3pC,EAAA2pC,WACAG,iBAAA9pC,EAAA8pC,iBACAnB,qBAAA3oC,EAAA2oC,qBACAiD,4BAAA5rC,EAAA4rC,4BACAhB,kBAAA5qC,EAAAitC,SACAr4B,MAAA,SAAAuC,EAAA+I,EAAAwrB,GAGA,GAAAj0B,GAAAs1B,KAAAt1B,IAAAm1B,GAAAz1B,EAIA0f,KAAA,QAAApf,IACAyI,EAAAgtB,GAAAhtB,GAGA,IAAAisB,GAAAL,GAAA30B,EAAA+I,EAAA6sB,EACAt1B,KACA00B,EAAA10B,MAGA01B,GAAAhB,KAAAxzB,OACAwzB,EAAAiB,WAAA,EASA,QAAApvC,GAAA,EAAqBA,EAAA8uC,GAAA5nC,OAA0BlH,IAC/CmuC,EAAAW,GAAA9uC,GAAAmuC,EAAAnsC,IAAAmsC,CA4DA,IAzDAE,IACAgB,GAAAlB,GACAA,EAAAC,MACAC,GAAA,IAGAC,GAAAH,EAAAh1B,OACAo1B,GAAA,GAEAF,EACAiB,GAAAnB,GACOA,EAAAoB,YAEPC,GAAArB,GACAsB,GAAAtB,GACAuB,GAAAvB,GAEAwB,GAAAxB,EAAAnsC,IAqBA8D,EAGOwlC,EAAApkC,QAEPpB,EAAA8pC,KAAAzB,EAAA0B,QAAA1B,EAAA2B,OAEAC,GAAAjqC,GACAw0B,IAAA6T,EAAA0B,OACAG,MAAA7B,IARAroC,EAAAqoC,EAkBAY,IAAAZ,EAAAiB,UACA,GAAAjB,EAAA0B,QAAA1B,EAAA2B,KACAG,GAAA9B,EAAAY,OACS,IAAAZ,EAAA+B,UAAA,CACTnB,EAAArT,OAAA,CACA,IAAAp7B,GAAA6tC,EAAAgC,YAAA,aAAuDpB,EAAAznB,cAAAynB,EAAAznB,iBAA6DhnB,GAAA6tC,MAEpHY,GAAA31B,SAAAjU,KAAAgpC,GACAA,EAAAxrC,OAAAosC,CAGArB,GAIAQ,EAAAC,IAHAY,EAAAZ,EACA7C,EAAAnmC,KAAAgpC,KAMAxL,IAAA,WAEA,GAAAwL,GAAA7C,IAAApkC,OAAA,GACAkpC,EAAAjC,EAAA/0B,SAAA+0B,EAAA/0B,SAAAlS,OAAA,EACAkpC,IAAA,IAAAA,EAAAtuC,MAAA,MAAAsuC,EAAA/2B,OAAAk1B,GACAJ,EAAA/0B,SAAAP,MAGAyyB,EAAApkC,QAAA,EACA6nC,EAAAzD,IAAApkC,OAAA,GACAgnC,EAAAC,IAGA3B,MAAA,SAAAnzB,GACA,GAAA01B,KAgBAlW,IACA,aAAAkW,EAAA51B,KACA41B,EAAAlT,SAAAwM,cAAAhvB,GAFA,CAMA,GAAAD,GAAA21B,EAAA31B,QAKA,IAJAC,EAAAk1B,GAAAl1B,EAAAohB,OACA4V,GAAAtB,GAAA11B,EAAAi3B,GAAAj3B,GAEA21B,GAAA51B,EAAAlS,OAAA,OACA,CACA,GAAAoC,IACA+kC,GAAA,MAAAh1B,IAAA/P,EAAAogC,GAAArwB,EAAAswB,KACAvwB,EAAAjU,MACArD,KAAA,EACA64B,WAAArxB,EAAAqxB,WACAqP,OAAA1gC,EAAA0gC,OACA3wB,SAES,MAAAA,GAAAD,EAAAlS,QAAA,MAAAkS,IAAAlS,OAAA,GAAAmS,MACTD,EAAAjU,MACArD,KAAA,EACAuX,YAKAqzB,QAAA,SAAArzB,GACA01B,EAAA31B,SAAAjU,MACArD,KAAA,EACAuX,OACAM,WAAA,OAIA7T,EAGA,QAAAupC,IAAA5oB,GACA,MAAAoW,GAAApW,EAAA,WACAA,EAAA2nB,KAAA,GAIA,QAAAkB,IAAA7oB,GACA,GAAAxmB,GAAAwmB,EAAAqV,UAAA50B,MACA,IAAAjH,EAEA,OADAiiB,GAAAuE,EAAAvE,MAAA,GAAA5X,OAAArK,GACAD,EAAA,EAAmBA,EAAAC,EAAOD,IAC1BkiB,EAAAliB,IACAM,KAAAmmB,EAAAqV,UAAA97B,GAAAM,KACA6U,MAAAzF,KAAAC,UAAA8W,EAAAqV,UAAA97B,GAAAmV,YAGGsR,GAAA2nB,MAEH3nB,EAAAiV,OAAA,GAIA,QAAAiU,IAAAxB,EAAAnsC,GACAuuC,GAAApC,GAIAA,EAAAzS,OAAAyS,EAAA7pC,MAAA6pC,EAAArS,UAAA50B,OAEAspC,GAAArC,GACAsC,GAAAtC,GACAuC,GAAAvC,EACA,QAAAnuC,GAAA,EAAiBA,EAAA6uC,GAAA3nC,OAAuBlH,IACxCmuC,EAAAU,GAAA7uC,GAAAmuC,EAAAnsC,IAAAmsC,CAEAwC,IAAAxC,GAGA,QAAAoC,IAAA9pB,GACA,GAAA6T,GAAAoC,GAAAjW,EAAA,MACA6T,KAIA7T,EAAAniB,IAAAg2B,GAIA,QAAAkW,IAAA/pB,GACA,GAAAxZ,GAAAyvB,GAAAjW,EAAA,MACAxZ,KACAwZ,EAAAxZ,MACAwZ,EAAAkQ,SAAAia,GAAAnqB,IAIA,QAAA+oB,IAAA/oB,GACA,GAAA6T,EACA,IAAAA,EAAAuC,GAAApW,EAAA,UACA,GAAAnd,GAAAunC,GAAAvW,EACAhxB,IACAwN,EAAA2P,EAAAnd,IAWA,QAAAunC,IAAAvW,GACA,GAAAwW,GAAAxW,EAAA1b,MAAAmyB,GACA,IAAAD,EAAA,CACA,GAAAxnC,KACAA,GAAA0nC,IAAAF,EAAA,GAAArW,MACA,IAAAwW,GAAAH,EAAA,GAAArW,OAAAkH,QAAAuP,GAAA,IACAC,EAAAF,EAAAryB,MAAAwyB,GAUA,OATAD,IACA7nC,EAAA2nC,QAAAtP,QAAAyP,GAAA,IACA9nC,EAAA+nC,UAAAF,EAAA,GAAA1W,OACA0W,EAAA,KACA7nC,EAAAgoC,UAAAH,EAAA,GAAA1W,SAGAnxB,EAAA2nC,QAEA3nC,GAGA,QAAAmmC,IAAAhpB,GACA,GAAA6T,GAAAuC,GAAApW,EAAA,OACA,IAAA6T,EACA7T,EAAAmpB,GAAAtV,EACAyV,GAAAtpB,GACA6T,MACA0V,MAAAvpB,QAEG,CACH,MAAAoW,GAAApW,EAAA,YACAA,EAAAqpB,MAAA,EAEA,IAAAD,GAAAhT,GAAApW,EAAA,YACAopB,KACAppB,EAAAopB,WAKA,QAAAI,IAAAxpB,EAAA9jB,GACA,GAAA+3B,GAAA6W,GAAA5uC,EAAAyW,SACAshB,MAAAkV,IACAG,GAAArV,GACAJ,IAAA7T,EAAAopB,OACAG,MAAAvpB,IAUA,QAAA8qB,IAAAn4B,GAEA,IADA,GAAApZ,GAAAoZ,EAAAlS,OACAlH,KAAA,CACA,OAAAoZ,EAAApZ,GAAA8B,KACA,MAAAsX,GAAApZ,EAQAoZ,GAAAP,OAKA,QAAAk3B,IAAAtpB,EAAA+qB,GACA/qB,EAAAgrB,eACAhrB,EAAAgrB,iBAEAhrB,EAAAgrB,aAAAtsC,KAAAqsC,GAGA,QAAA9B,IAAAjpB,GAEA,MADAoW,GAAApW,EAAA,YAEAA,EAAA7O,MAAA,GAIA,QAAA64B,IAAAhqB,GACA,YAAAA,EAAAtN,IACAsN,EAAAirB,SAAAhV,GAAAjW,EAAA,YAQG,CACH,GAAAypB,EACA,cAAAzpB,EAAAtN,KACA+2B,EAAArT,GAAApW,EAAA,SAWAA,EAAAypB,aAAArT,GAAApW,EAAA,gBACKypB,EAAArT,GAAApW,EAAA,iBAULA,EAAAypB,YAEA,IAAAC,GAAAzT,GAAAjW,EAAA,OACA0pB,KACA1pB,EAAA0pB,WAAA,OAAAA,EAAA,YAAAA,EAGA,aAAA1pB,EAAAtN,KAAAsN,EAAAypB,WACAvU,GAAAlV,EAAA,OAAA0pB,KAMA,QAAAO,IAAAjqB,GACA,GAAA0gB,IACAA,EAAAzK,GAAAjW,EAAA,SACAA,EAAAnC,UAAA6iB,GAEA,MAAAtK,GAAApW,EAAA,qBACAA,EAAAmK,gBAAA,GAIA,QAAA+f,IAAAlqB,GACA,GACAzmB,GAAAC,EAAAK,EAAAk4B,EAAArjB,EAAAkjB,EAAAsZ,EADA/hC,EAAA6W,EAAAqV,SAEA,KAAA97B,EAAA,EAAAC,EAAA2P,EAAA1I,OAA8BlH,EAAAC,EAAOD,IAGrC,GAFAM,EAAAk4B,EAAA5oB,EAAA5P,GAAAM,KACA6U,EAAAvF,EAAA5P,GAAAmV,MACAy8B,GAAA7+B,KAAAzS,GAQA,GANAmmB,EAAAorB,aAAA,EAEAxZ,EAAAyZ,GAAAxxC,GACA+3B,IACA/3B,IAAAqhC,QAAAoQ,GAAA,KAEAC,GAAAj/B,KAAAzS,GACAA,IAAAqhC,QAAAqQ,GAAA,IACA78B,EAAAklB,GAAAllB,GACAw8B,GAAA,EACAtZ,IACAA,EAAAna,OACAyzB,GAAA,EAEA,eADArxC,EAAAoc,GAAApc,MACuCA,EAAA,cAEvC+3B,EAAA4Z,QACA3xC,EAAAoc,GAAApc,IAEA+3B,EAAAtuB,MACAkyB,GACAxV,EACA,UAAA/J,GAAApc,GACA88B,GAAAjoB,EAAA,YAIAw8B,IACAlrB,EAAAnC,WAAAqqB,GAAAloB,EAAAtN,IAAAsN,EAAAoV,SAAA/5B,KAAAxB,GAEAm7B,GAAAhV,EAAAnmB,EAAA6U,GAEAwmB,GAAAlV,EAAAnmB,EAAA6U,OAEO,IAAA+8B,GAAAn/B,KAAAzS,GACPA,IAAAqhC,QAAAuQ,GAAA,IACAjW,GAAAxV,EAAAnmB,EAAA6U,EAAAkjB,GAAA,EAAAoW,QACO,CACPnuC,IAAAqhC,QAAAiQ,GAAA,GAEA,IAAAO,GAAA7xC,EAAAse,MAAAwzB,IACApW,EAAAmW,KAAA,EACAnW,KACA17B,IAAAkH,MAAA,IAAAw0B,EAAA90B,OAAA,KAEA60B,GAAAtV,EAAAnmB,EAAAk4B,EAAArjB,EAAA6mB,EAAA3D,OAKK,CAaLsD,GAAAlV,EAAAnmB,EAAAoP,KAAAC,UAAAwF,KAGAsR,EAAAnC,WACA,UAAAhkB,GACAquC,GAAAloB,EAAAtN,IAAAsN,EAAAoV,SAAA/5B,KAAAxB,IACAm7B,GAAAhV,EAAAnmB,EAAA,SAMA,QAAAswC,IAAAnqB,GAEA,IADA,GAAA9jB,GAAA8jB,EACA9jB,GAAA,CACA,OAAAmS,KAAAnS,EAAAquC,IACA,QAEAruC,YAEA,SAGA,QAAAmvC,IAAAxxC,GACA,GAAAse,GAAAte,EAAAse,MAAAmzB,GACA,IAAAnzB,EAAA,CACA,GAAA/H,KAEA,OADA+H,GAAAva,QAAA,SAAAlE,GAAgC0W,EAAA1W,EAAAqH,MAAA,SAChCqP,GAIA,QAAAk3B,IAAA7rB,GAEA,OADA7X,MACArK,EAAA,EAAAC,EAAAiiB,EAAAhb,OAAmClH,EAAAC,EAAOD,IAO1CqK,EAAA6X,EAAAliB,GAAAM,MAAA4hB,EAAAliB,GAAAmV,KAEA,OAAA9K,GAIA,QAAAgmC,IAAA5pB,GACA,iBAAAA,EAAAtN,KAAA,UAAAsN,EAAAtN,IAGA,QAAAg2B,IAAA1oB,GACA,MACA,UAAAA,EAAAtN,KACA,WAAAsN,EAAAtN,OACAsN,EAAAoV,SAAA/5B,MACA,oBAAA2kB,EAAAoV,SAAA/5B,MASA,QAAAotC,IAAAhtB,GAEA,OADA5Y,MACAtJ,EAAA,EAAiBA,EAAAkiB,EAAAhb,OAAkBlH,IAAA,CACnC,GAAAqtC,GAAAnrB,EAAAliB,EACAqyC,IAAAt/B,KAAAs6B,EAAA/sC,QACA+sC,EAAA/sC,KAAA+sC,EAAA/sC,KAAAqhC,QAAA2Q,GAAA,IACAhpC,EAAAnE,KAAAkoC,IAGA,MAAA/jC,GA+BA,QAAAipC,IAAA9rB,EAAAzkB,GACA,aAAAykB,EAAAtN,IAAA,CACA,GAAA9O,GAAAoc,EAAAoV,QACA,KAAAxxB,EAAA,WACA,MAGA,IAAAmoC,EAQA,KAPAnoC,EAAA,UAAAA,EAAA,kBACAmoC,EAAA9V,GAAAjW,EAAA,SAEApc,EAAAvI,MAAA0wC,IAAAnoC,EAAA,YACAmoC,EAAA,IAAAnoC,EAAA,oBAGAmoC,EAAA,CACA,GAAAC,GAAA5V,GAAApW,EAAA,WACAisB,EAAAD,EAAA,MAAAA,EAAA,OACAE,EAAA,MAAA9V,GAAApW,EAAA,aACAmsB,EAAA/V,GAAApW,EAAA,gBAEAosB,EAAAC,GAAArsB,EAEA+oB,IAAAqD,GACAjX,GAAAiX,EAAA,mBACAlD,GAAAkD,EAAA7wC,GACA6wC,EAAAtD,WAAA,EACAsD,EAAAjD,GAAA,IAAA4C,EAAA,iBAAAE,EACA3C,GAAA8C,GACAvY,IAAAuY,EAAAjD,GACAI,MAAA6C,GAGA,IAAAE,GAAAD,GAAArsB,EACAoW,IAAAkW,EAAA,YACAnX,GAAAmX,EAAA,gBACApD,GAAAoD,EAAA/wC,GACA+tC,GAAA8C,GACAvY,IAAA,IAAAkY,EAAA,cAAAE,EACA1C,MAAA+C,GAGA,IAAAC,GAAAF,GAAArsB,EAeA,OAdAoW,IAAAmW,EAAA,YACApX,GAAAoX,EAAA,QAAAR,GACA7C,GAAAqD,EAAAhxC,GACA+tC,GAAA8C,GACAvY,IAAAmY,EACAzC,MAAAgD,IAGAL,EACAE,EAAA/C,MAAA,EACO8C,IACPC,EAAAhD,OAAA+C,GAGAC,IAKA,QAAAC,IAAArsB,GACA,MAAAqnB,IAAArnB,EAAAtN,IAAAsN,EAAAqV,UAAAt0B,QAAAif,EAAA9jB,QAeA,QAAA0W,IAAAoN,EAAA8Q,GACAA,EAAApiB,OACAsmB,GAAAhV,EAAA,oBAAA8Q,EAAA,WAMA,QAAA0T,IAAAxkB,EAAA8Q,GACAA,EAAApiB,OACAsmB,GAAAhV,EAAA,kBAAA8Q,EAAA,WA2CA,QAAA0b,IAAAntC,EAAA9D,GACA8D,IACAotC,GAAAC,GAAAnxC,EAAAoxC,YAAA,IACAC,GAAArxC,EAAAuvB,eAAAqa,GAEA0H,GAAAxtC,GAEAytC,GAAAztC,GAAA,IAGA,QAAA0tC,IAAApvC,GACA,MAAA2R,GACA,2DACA3R,EAAA,IAAAA,EAAA,KAIA,QAAAkvC,IAAA3wB,GAEA,GADAA,EAAA8wB,OAAA/5B,GAAAiJ,GACA,IAAAA,EAAA7gB,KAAA,CAIA,IACAuxC,GAAA1wB,EAAAxJ,MACA,SAAAwJ,EAAAxJ,KACA,MAAAwJ,EAAAkZ,SAAA,mBAEA,MAEA,QAAA77B,GAAA,EAAAC,EAAA0iB,EAAAvJ,SAAAlS,OAA6ClH,EAAAC,EAAOD,IAAA,CACpD,GAAAsI,GAAAqa,EAAAvJ,SAAApZ,EACAszC,IAAAhrC,GACAA,EAAAmrC,SACA9wB,EAAA8wB,QAAA,GAGA,GAAA9wB,EAAA8uB,aACA,OAAAiC,GAAA,EAAAC,EAAAhxB,EAAA8uB,aAAAvqC,OAAuDwsC,EAAAC,EAAWD,IAAA,CAClE,GAAA1D,GAAArtB,EAAA8uB,aAAAiC,GAAA1D,KACAsD,IAAAtD,GACAA,EAAAyD,SACA9wB,EAAA8wB,QAAA,KAOA,QAAAF,IAAA5wB,EAAA4K,GACA,OAAA5K,EAAA7gB,KAAA,CAOA,IANA6gB,EAAA8wB,QAAA9wB,EAAA/K,QACA+K,EAAAixB,YAAArmB,GAKA5K,EAAA8wB,QAAA9wB,EAAAvJ,SAAAlS,SACA,IAAAyb,EAAAvJ,SAAAlS,QACA,IAAAyb,EAAAvJ,SAAA,GAAAtX,MAGA,YADA6gB,EAAAkxB,YAAA,EAKA,IAFAlxB,EAAAkxB,YAAA,EAEAlxB,EAAAvJ,SACA,OAAApZ,GAAA,EAAAC,EAAA0iB,EAAAvJ,SAAAlS,OAA+ClH,EAAAC,EAAOD,IACtDuzC,GAAA5wB,EAAAvJ,SAAApZ,GAAAutB,KAAA5K,EAAAquB,IAGA,IAAAruB,EAAA8uB,aACA,OAAAiC,GAAA,EAAAC,EAAAhxB,EAAA8uB,aAAAvqC,OAAuDwsC,EAAAC,EAAWD,IAClEH,GAAA5wB,EAAA8uB,aAAAiC,GAAA1D,MAAAziB,IAMA,QAAA7T,IAAAiJ,GACA,WAAAA,EAAA7gB,OAGA,IAAA6gB,EAAA7gB,SAGA6gB,EAAAyrB,MACAzrB,EAAAkvB,aACAlvB,EAAAitB,IAAAjtB,EAAAquB,KACA8C,GAAAnxB,EAAAxJ,OACAk6B,GAAA1wB,EAAAxJ,MACA46B,GAAApxB,KACAliB,OAAA2D,KAAAue,GAAAnL,MAAA07B,OAIA,QAAAa,IAAApxB,GACA,KAAAA,EAAAhgB,QAAA,CAEA,GADAggB,IAAAhgB,OACA,aAAAggB,EAAAxJ,IACA,QAEA,IAAAwJ,EAAAquB,IACA,SAGA,SAqDA,QAAAgD,IACA1X,EACAjkB,EACA8jB,GAEA,GAAA7yB,GAAA+O,EAAA,aAAkC,MAClC,QAAA/X,KAAAg8B,GACAhzB,GAAA,IAAAhJ,EAAA,KAAA2zC,GAAA3zC,EAAAg8B,EAAAh8B,IAAA,GAEA,OAAAgJ,GAAA9B,MAAA,UAGA,QAAAysC,IACA3zC,EACA2H,GAEA,IAAAA,EACA,oBAGA,IAAAqC,MAAAC,QAAAtC,GACA,UAAAA,EAAAoC,IAAA,SAAApC,GAAmD,MAAAgsC,IAAA3zC,EAAA2H,KAAoCqH,KAAA,QAGvF,IAAA4kC,GAAAC,GAAAphC,KAAA9K,EAAAkN,OACAi/B,EAAAC,GAAAthC,KAAA9K,EAAAkN,MAEA,IAAAlN,EAAAowB,UAMG,CACH,GAAAuG,GAAA,GACA0V,EAAA,GACAlwC,IACA,QAAAE,KAAA2D,GAAAowB,UACA,GAAAkc,GAAAjwC,GACAgwC,GAAAC,GAAAjwC,GAEAwoB,GAAAxoB,IACAF,EAAAe,KAAAb,OAEO,cAAAA,EAAA,CACP,GAAA+zB,GAAApwB,EAAA,SACAqsC,IAAAE,IACA,6BACAhhC,OAAA,SAAAihC,GAA4C,OAAApc,EAAAoc,KAC5CpqC,IAAA,SAAAoqC,GAAyC,gBAAAA,EAAA,QACzCnlC,KAAA,WAGAlL,GAAAe,KAAAb,EAGAF,GAAA8C,SACA03B,GAAA8V,GAAAtwC,IAGAkwC,IACA1V,GAAA0V,EAQA,2BAA8B1V,GAN9BsV,EACA,UAAAjsC,EAAA,iBACAmsC,EACA,WAAAnsC,EAAA,kBACAA,EAAAkN,OAE8B,IAzC9B,MAAA++B,IAAAE,EACAnsC,EAAAkN,MAGA,oBAA8BlN,EAAA,UAyC9B,QAAAysC,IAAAtwC,GACA,mCAAAA,EAAAiG,IAAAsqC,IAAArlC,KAAA,sBAGA,QAAAqlC,IAAArwC,GACA,GAAAswC,GAAAC,SAAAvwC,EAAA,GACA,IAAAswC,EACA,0BAAAA,CAEA,IAAAE,GAAAhoB,GAAAxoB,GACAywC,EAAAC,GAAA1wC,EACA,OACA,qBACAoL,KAAAC,UAAArL,GAAA,IACAoL,KAAAC,UAAAmlC,GAAA,eAEAplC,KAAAC,UAAAolC,GACA,IAMA,QAAApxC,IAAA8iB,EAAA8Q,GAIA9Q,EAAAwuB,cAAA,SAAArW,GAAsC,YAAAA,EAAA,IAAArH,EAAA,WAKtC,QAAA2d,IAAAzuB,EAAA8Q,GACA9Q,EAAA0uB,SAAA,SAAAvW,GACA,YAAAA,EAAA,KAAAnY,EAAA,SAAA8Q,EAAA,WAAAA,EAAAc,WAAAd,EAAAc,UAAAna,KAAA,iBAAAqZ,EAAAc,WAAAd,EAAAc,UAAAtuB,KAAA,iBA4BA,QAAAqrC,IACAC,EACArzC,GAEA,GAAAgC,GAAA,GAAAsxC,IAAAtzC,EAEA,QACAC,OAAA,sBAFAozC,EAAAE,GAAAF,EAAArxC,GAAA,aAEyB,IACzB9B,gBAAA8B,EAAA9B,iBAIA,QAAAqzC,IAAA9uB,EAAAziB,GACA,GAAAyiB,EAAAotB,aAAAptB,EAAA+uB,gBACA,MAAAC,IAAAhvB,EAAAziB,EACG,IAAAyiB,EAAA7O,OAAA6O,EAAAivB,cACH,MAAAC,IAAAlvB,EAAAziB,EACG,IAAAyiB,EAAAuqB,MAAAvqB,EAAAmvB,aACH,MAAAC,IAAApvB,EAAAziB,EACG,IAAAyiB,EAAAmpB,KAAAnpB,EAAAqvB,YACH,MAAAC,IAAAtvB,EAAAziB,EACG,iBAAAyiB,EAAAtN,KAAAsN,EAAA0pB,WAEA,aAAA1pB,EAAAtN,IACH,MAAA68B,IAAAvvB,EAAAziB,EAGA,IAAA46B,EACA,IAAAnY,EAAAnC,UACAsa,EAAAqX,GAAAxvB,EAAAnC,UAAAmC,EAAAziB,OACK,CACL,GAAAwC,GAAAigB,EAAAiV,UAAA5mB,GAAAohC,GAAAzvB,EAAAziB,GAEAoV,EAAAqN,EAAAmK,eAAA,KAAAulB,GAAA1vB,EAAAziB,GAAA,EACA46B,GAAA,OAAAnY,EAAA,SAAAjgB,EAAA,IAAAA,EAAA,KAAA4S,EAAA,IAAAA,EAAA,QAGA,OAAApZ,GAAA,EAAmBA,EAAAgE,EAAA6qC,WAAA3nC,OAA6BlH,IAChD4+B,EAAA56B,EAAA6qC,WAAA7uC,GAAAymB,EAAAmY,EAEA,OAAAA,GAlBA,MAAAuX,IAAA1vB,EAAAziB,IAAA,SAuBA,QAAAyxC,IAAAhvB,EAAAziB,GAGA,MAFAyiB,GAAA+uB,iBAAA,EACAxxC,EAAA9B,gBAAAiD,KAAA,qBAA0CowC,GAAA9uB,EAAAziB,GAAA,KAC1C,OAAAA,EAAA9B,gBAAAgF,OAAA,IAAAuf,EAAAmtB,YAAA,gBAIA,QAAA+B,IAAAlvB,EAAAziB,GAEA,GADAyiB,EAAAivB,eAAA,EACAjvB,EAAAmpB,KAAAnpB,EAAAqvB,YACA,MAAAC,IAAAtvB,EAAAziB,EACG,IAAAyiB,EAAAmtB,YAAA,CAGH,IAFA,GAAAtvC,GAAA,GACA3B,EAAA8jB,EAAA9jB,OACAA,GAAA,CACA,GAAAA,EAAAquC,IAAA,CACA1sC,EAAA3B,EAAA2B,GACA,OAEA3B,WAEA,MAAA2B,GAMA,MAAAixC,GAAA9uB,EAAAziB,GAAA,IAAAA,EAAAoyC,SAAA,IAAA9xC,EAAA,IAFAixC,GAAA9uB,EAAAziB,GAIA,MAAAyxC,IAAAhvB,EAAAziB,GAIA,QAAA+xC,IACAtvB,EACAziB,EACAqyC,EACAC,GAGA,MADA7vB,GAAAqvB,aAAA,EACAS,GAAA9vB,EAAAgrB,aAAAjqC,QAAAxD,EAAAqyC,EAAAC,GAGA,QAAAC,IACAC,EACAxyC,EACAqyC,EACAC,GAcA,QAAAG,GAAAhwB,GACA,MAAA4vB,GACAA,EAAA5vB,EAAAziB,GACAyiB,EAAA7O,KACA+9B,GAAAlvB,EAAAziB,GACAuxC,GAAA9uB,EAAAziB,GAjBA,IAAAwyC,EAAAtvC,OACA,MAAAovC,IAAA,MAGA,IAAA9E,GAAAgF,EAAAzzB,OACA,OAAAyuB,GAAAlX,IACA,IAAAkX,EAAA,SAAAiF,EAAAjF,EAAAxB,OAAA,IAAAuG,GAAAC,EAAAxyC,EAAAqyC,EAAAC,GAEA,GAAAG,EAAAjF,EAAAxB,OAaA,QAAA6F,IACApvB,EACAziB,EACAqyC,EACAK,GAEA,GAAApc,GAAA7T,EAAAuqB,IACAC,EAAAxqB,EAAAwqB,MACAI,EAAA5qB,EAAA4qB,UAAA,IAAA5qB,EAAA,aACA6qB,EAAA7qB,EAAA6qB,UAAA,IAAA7qB,EAAA,YAiBA,OADAA,GAAAmvB,cAAA,GACAc,GAAA,WAAApc,EAAA,cACA2W,EAAAI,EAAAC,EAAA,aACA+E,GAAAd,IAAA9uB,EAAAziB,GACA,KAGA,QAAAkyC,IAAAzvB,EAAAziB,GACA,GAAAwC,GAAA,IAIAuW,EAAA45B,GAAAlwB,EAAAziB,EACA+Y,KAAavW,GAAAuW,EAAA,KAGb0J,EAAAniB,MACAkC,GAAA,OAAAigB,EAAA,SAGAA,EAAAxZ,MACAzG,GAAA,OAAAigB,EAAA,SAEAA,EAAAkQ,WACAnwB,GAAA,kBAGAigB,EAAA2nB,MACA5nC,GAAA,aAGAigB,EAAAnC,YACA9d,GAAA,QAAAigB,EAAA,SAGA,QAAAzmB,GAAA,EAAiBA,EAAAgE,EAAA4yC,WAAA1vC,OAA6BlH,IAC9CwG,GAAAxC,EAAA4yC,WAAA52C,GAAAymB,EA+BA,IA5BAA,EAAAvE,QACA1b,GAAA,UAAoBqwC,GAAApwB,EAAAvE,OAAA,MAGpBuE,EAAAhK,QACAjW,GAAA,aAAuBqwC,GAAApwB,EAAAhK,OAAA,MAGvBgK,EAAA6V,SACA91B,GAAAwtC,GAAAvtB,EAAA6V,QAAA,EAAAt4B,EAAAm4B,MAAA,KAEA1V,EAAA+V,eACAh2B,GAAAwtC,GAAAvtB,EAAA+V,cAAA,EAAAx4B,EAAAm4B,MAAA,KAIA1V,EAAA0pB,aAAA1pB,EAAAypB,YACA1pC,GAAA,QAAAigB,EAAA,gBAGAA,EAAAa,cACA9gB,GAAAswC,GAAArwB,EAAAa,YAAAtjB,GAAA,KAGAyiB,EAAAyJ,QACA1pB,GAAA,gBAAoBigB,EAAAyJ,MAAA,mBAAAzJ,EAAAyJ,MAAA,wBAAAzJ,EAAAyJ,MAAA,iBAGpBzJ,EAAAmK,eAAA,CACA,GAAAA,GAAAmmB,GAAAtwB,EAAAziB,EACA4sB,KACApqB,GAAAoqB,EAAA,KAYA,MATApqB,KAAAm7B,QAAA,aAEAlb,EAAA0uB,WACA3uC,EAAAigB,EAAA0uB,SAAA3uC,IAGAigB,EAAAwuB,gBACAzuC,EAAAigB,EAAAwuB,cAAAzuC,IAEAA,EAGA,QAAAmwC,IAAAlwB,EAAAziB,GACA,GAAA+Y,GAAA0J,EAAAzJ,UACA,IAAAD,EAAA,CACA,GAEA/c,GAAAC,EAAAs3B,EAAAyf,EAFA1tC,EAAA,eACA2tC,GAAA,CAEA,KAAAj3C,EAAA,EAAAC,EAAA8c,EAAA7V,OAA8BlH,EAAAC,EAAOD,IAAA,CACrCu3B,EAAAxa,EAAA/c,GACAg3C,GAAA,CACA,IAAAE,GAAAlzC,EAAAgZ,WAAAua,EAAAj3B,KACA42C,KAGAF,IAAAE,EAAAzwB,EAAA8Q,EAAAvzB,EAAAm4B,OAEA6a,IACAC,GAAA,EACA3tC,GAAA,UAAeiuB,EAAA,mBAAAA,EAAA,aAAAA,EAAApiB,MAAA,WAAAoiB,EAAA,sBAAA7nB,KAAAC,UAAA4nB,EAAApiB,OAAA,KAAAoiB,EAAAyE,IAAA,SAAAzE,EAAA,aAAAA,EAAAc,UAAA,cAAA3oB,KAAAC,UAAA4nB,EAAAc,WAAA,UAGf,MAAA4e,GACA3tC,EAAA9B,MAAA,cADA,IAKA,QAAAuvC,IAAAtwB,EAAAziB,GACA,GAAAqxC,GAAA5uB,EAAArN,SAAA,EAMA,QAAAi8B,EAAAvzC,KAAA,CACA,GAAAq1C,GAAA/B,GAAAC,EAAArxC,EAAAhC,QACA,4CAA+Cm1C,EAAA,6BAAiCA,EAAAj1C,gBAAAmI,IAAA,SAAAu0B,GAA4E,oBAAqBA,EAAA,MAAkBtvB,KAAA,WAInM,QAAAwnC,IACAtxB,EACAxhB,GAEA,yBAAAvD,OAAA2D,KAAAohB,GAAAnb,IAAA,SAAA/F,GACA,MAAA8yC,IAAA9yC,EAAAkhB,EAAAlhB,GAAAN,KACKsL,KAAA,UAGL,QAAA8nC,IACA9yC,EACAmiB,EACAziB,GAEA,MAAAyiB,GAAAuqB,MAAAvqB,EAAAmvB,aACAyB,GAAA/yC,EAAAmiB,EAAAziB,GAQA,QAAYM,EAAA,gBANZmR,OAAAgR,EAAAypB,WAAA,aACA,aAAAzpB,EAAAtN,IACAsN,EAAAmpB,GACAnpB,EAAA,QAAA0vB,GAAA1vB,EAAAziB,IAAA,0BACAmyC,GAAA1vB,EAAAziB,IAAA,YACAuxC,GAAA9uB,EAAAziB,IAAA,KAIA,QAAAqzC,IACA/yC,EACAmiB,EACAziB,GAEA,GAAAs2B,GAAA7T,EAAAuqB,IACAC,EAAAxqB,EAAAwqB,MACAI,EAAA5qB,EAAA4qB,UAAA,IAAA5qB,EAAA,aACA6qB,EAAA7qB,EAAA6qB,UAAA,IAAA7qB,EAAA,YAEA,OADAA,GAAAmvB,cAAA,EACA,OAAAtb,EAAA,cACA2W,EAAAI,EAAAC,EAAA,YACA8F,GAAA9yC,EAAAmiB,EAAAziB,GACA,KAGA,QAAAmyC,IACA1vB,EACAziB,EACAszC,EACAC,EACAC,GAEA,GAAAp+B,GAAAqN,EAAArN,QACA,IAAAA,EAAAlS,OAAA,CACA,GAAAuwC,GAAAr+B,EAAA,EAEA,QAAAA,EAAAlS,QACAuwC,EAAAzG,KACA,aAAAyG,EAAAt+B,KACA,SAAAs+B,EAAAt+B,IAEA,OAAAo+B,GAAAhC,IAAAkC,EAAAzzC,EAEA,IAAAgtB,GAAAsmB,EACAI,GAAAt+B,EAAApV,EAAA2zC,gBACA,EACAT,EAAAM,GAAAI,EACA,WAAAx+B,EAAA/O,IAAA,SAAAjK,GAA8C,MAAA82C,GAAA92C,EAAA4D,KAAwBsL,KAAA,UAAA0hB,EAAA,IAAAA,EAAA,KAQtE,QAAA0mB,IACAt+B,EACAu+B,GAGA,OADAruC,GAAA,EACAtJ,EAAA,EAAiBA,EAAAoZ,EAAAlS,OAAqBlH,IAAA,CACtC,GAAAymB,GAAArN,EAAApZ,EACA,QAAAymB,EAAA3kB,KAAA,CAGA,GAAA+1C,GAAApxB,IACAA,EAAAgrB,cAAAhrB,EAAAgrB,aAAAqG,KAAA,SAAA13C,GAA+D,MAAAy3C,IAAAz3C,EAAA4vC,SAAsC,CACrG1mC,EAAA,CACA,QAEAquC,EAAAlxB,IACAA,EAAAgrB,cAAAhrB,EAAAgrB,aAAAqG,KAAA,SAAA13C,GAA+D,MAAAu3C,GAAAv3C,EAAA4vC,YAC/D1mC,EAAA,IAGA,MAAAA,GAGA,QAAAuuC,IAAApxB,GACA,WAAA3R,KAAA2R,EAAAuqB,KAAA,aAAAvqB,EAAAtN,KAAA,SAAAsN,EAAAtN,IAGA,QAAAy+B,IAAAj1B,EAAA3e,GACA,WAAA2e,EAAA7gB,KACAyzC,GAAA5yB,EAAA3e,GACG,IAAA2e,EAAA7gB,MAAA6gB,EAAAhJ,UACHo+B,GAAAp1B,GAEAq1B,GAAAr1B,GAIA,QAAAq1B,IAAA3+B,GACA,iBAAAA,EAAAvX,KACAuX,EAAAshB,WACAsd,GAAAvoC,KAAAC,UAAA0J,UAAA,IAGA,QAAA0+B,IAAArL,GACA,YAAAh9B,KAAAC,UAAA+8B,EAAArzB,MAAA,IAGA,QAAA28B,IAAAvvB,EAAAziB,GACA,GAAA0tC,GAAAjrB,EAAAirB,UAAA,YACAt4B,EAAA+8B,GAAA1vB,EAAAziB,GACAsF,EAAA,MAAAooC,GAAAt4B,EAAA,IAAAA,EAAA,IACA8I,EAAAuE,EAAAvE,OAAA,IAA6BuE,EAAAvE,MAAA7X,IAAA,SAAAmM,GAAgC,MAAAkG,IAAAlG,EAAAlW,MAAA,IAAAkW,EAAA,QAAiDlH,KAAA,SAC9G4oC,EAAAzxB,EAAAoV,SAAA,SAUA,QATA3Z,IAAAg2B,GAAA9+B,IACA9P,GAAA,SAEA4Y,IACA5Y,GAAA,IAAA4Y,GAEAg2B,IACA5uC,IAAA4Y,EAAA,gBAAAg2B,GAEA5uC,EAAA,IAIA,QAAA2sC,IACAkC,EACA1xB,EACAziB,GAEA,GAAAoV,GAAAqN,EAAAmK,eAAA,KAAAulB,GAAA1vB,EAAAziB,GAAA,EACA,aAAAm0C,EAAA,IAAAjC,GAAAzvB,EAAAziB,IAAAoV,EAAA,IAAAA,EAAA,QAGA,QAAAy9B,IAAAp6B,GAEA,OADAnT,GAAA,GACAtJ,EAAA,EAAiBA,EAAAyc,EAAAvV,OAAkBlH,IAAA,CACnC,GAAAke,GAAAzB,EAAAzc,EAGAsJ,IAAA,IAAA4U,EAAA,UAAA+5B,GAAA/5B,EAAA/I,OAAA,IAGA,MAAA7L,GAAA9B,MAAA,MAIA,QAAAywC,IAAA5+B,GACA,MAAAA,GACAsoB,QAAA,qBACAA,QAAA,qBAgHA,QAAAyW,IAAAxZ,EAAAyZ,GACA,IACA,UAAA1kC,UAAAirB,GACG,MAAAj1B,GAEH,MADA0uC,GAAAlzC,MAAiBwE,MAAAi1B,SACjBztB,GAIA,QAAAmnC,IAAAC,GACA,GAAAniC,GAAA3V,OAAA+E,OAAA,KAEA,iBACAyoC,EACAjsC,EACAma,GAEAna,EAAA8U,KAAuB9U,EACvBA,GAAAm6B,WACAn6B,GAAAm6B,IAqBA,IAAA73B,GAAAtC,EAAA2nC,WACAl0B,OAAAzT,EAAA2nC,YAAAsE,EACAA,CACA,IAAA73B,EAAA9R,GACA,MAAA8R,GAAA9R,EAIA,IAAAk0C,GAAAD,EAAAtK,EAAAjsC,GAiBAsH,KACAmvC,IAyBA,OAxBAnvC,GAAArH,OAAAm2C,GAAAI,EAAAv2C,OAAAw2C,GACAnvC,EAAApH,gBAAAs2C,EAAAt2C,gBAAAmI,IAAA,SAAAu0B,GACA,MAAAwZ,IAAAxZ,EAAA6Z,KAsBAriC,EAAA9R,GAAAgF,GAsFA,QAAAovC,IAAAC,GAGA,MAFAC,QAAAjoC,SAAAC,cAAA,OACAgoC,GAAAC,UAAAF,EAAA,iCACAC,GAAAC,UAAA3zC,QAAA,SAAqC,EAwFrC,QAAA4zC,IAAAryB,GACA,GAAAA,EAAAsyB,UACA,MAAAtyB,GAAAsyB,SAEA,IAAAC,GAAAroC,SAAAC,cAAA,MAEA,OADAooC,GAAAloC,YAAA2V,EAAAwyB,WAAA,IACAD,EAAAH;;;;;AAhsVA,GAAArxB,IAAA/mB,OAAAy4C,WA6CA7jC,GAAA5U,OAAAS,UAAA2O,SAmEAikC,GAAA/9B,EAAA,qBAKAmX,GAAAnX,EAAA,8BAiBA5U,GAAAV,OAAAS,UAAAC,eAmBAg4C,GAAA,SACAz8B,GAAAvG,EAAA,SAAA7B,GACA,MAAAA,GAAAqtB,QAAAwX,GAAA,SAAA3d,EAAAp7B,GAAkD,MAAAA,KAAAg5C,cAAA,OAMlDt7B,GAAA3H,EAAA,SAAA7B,GACA,MAAAA,GAAA7J,OAAA,GAAA2uC,cAAA9kC,EAAA9M,MAAA,KAMA6xC,GAAA,aACA/6B,GAAAnI,EAAA,SAAA7B,GACA,MAAAA,GAAAqtB,QAAA0X,GAAA,OAAApmC,gBA8BAxE,GAAAkF,SAAAzS,UAAAuN,KACAiI,EACAL,EAgDAu1B,GAAA,SAAAp1B,EAAAU,EAAA9W,GAA6B,UAK7BgsB,GAAA,SAAAoP,GAA6B,MAAAA,IAoE7B8d,GAAA,uBAEAxlB,IACA,YACA,YACA,UAGAylB,IACA,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,cACA,iBAKAhzC,IAKAizC,sBAAA/4C,OAAA+E,OAAA,MAKAa,QAAA,EAKAozC,eAAA,EAKAtsC,UAAA,EAKAusC,aAAA,EAKAn6B,aAAA,KAKAo6B,YAAA,KAKAC,mBAMA9sB,SAAArsB,OAAA+E,OAAA,MAMA+rB,cAAAqa,GAMAiO,eAAAjO,GAMArW,iBAAAqW,GAKAta,gBAAAngB,EAKAqgB,qBAAApF,GAMAe,YAAAye,GAKAkO,gBAAAP,IA4BAphC,GAAA,UAkBA4hC,GAAA,gBAGAt6B,GAAA,mBAAAjU,QACAkU,GAAA,mBAAAs6B,gCAAAC,SACAC,GAAAx6B,IAAAs6B,cAAAC,SAAAhnC,cACAknC,GAAA16B,IAAAjU,OAAAsH,UAAAE,UAAAC,cACA4lB,GAAAshB,IAAA,eAAApnC,KAAAonC,IACA1gB,GAAA0gB,OAAAj1C,QAAA,cACA4zB,GAAAqhB,OAAAj1C,QAAA,WAEAk1C,IADAD,OAAAj1C,QAAA,WACAi1C,IAAA,uBAAApnC,KAAAonC,KAAA,QAAAD,IAIAlwB,IAHAmwB,IAAA,cAAApnC,KAAAonC,OAGqBzsC,OAErB+xB,IAAA,CACA,IAAAhgB,GACA,IACA,GAAAiK,MACAjpB,QAAAC,eAAAgpB,GAAA,WACA7oB,IAAA,WAEA4+B,IAAA,KAGAj0B,OAAAsuB,iBAAA,oBAAApQ,IACG,MAAA7V,IAKH,GAAAwmC,IA2BAC,GA1BA3/B,GAAA,WAWA,WAVA7F,KAAAulC,KAOAA,IALA56B,KAAAC,QAAA,KAAA/K,GAGA,WAAAA,EAAA,QAAA4lC,IAAAC,SAKAH,IAIAltC,GAAAsS,IAAAjU,OAAAC,6BAOA2X,GACA,mBAAAC,SAAAhL,EAAAgL,SACA,mBAAAiI,UAAAjT,EAAAiT,QAAAC,QAMA+uB,IAFA,mBAAAG,MAAApiC,EAAAoiC,KAEAA,IAGA,WACA,QAAAA,KACAj4C,KAAAkF,IAAAjH,OAAA+E,OAAA,MAYA,MAVAi1C,GAAAv5C,UAAA6f,IAAA,SAAAzc,GACA,WAAA9B,KAAAkF,IAAApD,IAEAm2C,EAAAv5C,UAAA4B,IAAA,SAAAwB,GACA9B,KAAAkF,IAAApD,IAAA,GAEAm2C,EAAAv5C,UAAAwf,MAAA,WACAle,KAAAkF,IAAAjH,OAAA+E,OAAA,OAGAi1C,IAMA,IAAAte,IAAAhrB,EA+FAupC,GAAA,EAMAjiC,GAAA,WACAjW,KAAAwN,GAAA0qC,KACAl4C,KAAAyC,QAGAwT,IAAAvX,UAAAy5C,OAAA,SAAAptC,GACA/K,KAAAyC,KAAAE,KAAAoI,IAGAkL,GAAAvX,UAAA05C,UAAA,SAAArtC,GACAwD,EAAAvO,KAAAyC,KAAAsI,IAGAkL,GAAAvX,UAAAoa,OAAA,WACA7C,GAAAC,QACAD,GAAAC,OAAAmiC,OAAAr4C,OAIAiW,GAAAvX,UAAAua,OAAA,WAGA,OADAxW,GAAAzC,KAAAyC,KAAAuC,QACAxH,EAAA,EAAAC,EAAAgF,EAAAiC,OAAkClH,EAAAC,EAAOD,IACzCiF,EAAAjF,GAAA2E,UAOA8T,GAAAC,OAAA,IACA,IAAAC,OAaAI,GAAA,SACAI,EACA3S,EACA4S,EACAC,EACAC,EACA/W,EACAgX,EACAC,GAEAhX,KAAA2W,MACA3W,KAAAgE,OACAhE,KAAA4W,WACA5W,KAAA6W,OACA7W,KAAA8W,MACA9W,KAAAiX,OAAA3E,GACAtS,KAAAD,UACAC,KAAAoX,cAAA9E,GACAtS,KAAAqX,cAAA/E,GACAtS,KAAAsX,cAAAhF,GACAtS,KAAA8B,IAAAkC,KAAAlC,IACA9B,KAAA+W,mBACA/W,KAAAmyB,sBAAA7f,GACAtS,KAAAG,WAAAmS,GACAtS,KAAAs4C,KAAA,EACAt4C,KAAAkX,UAAA,EACAlX,KAAA6iC,cAAA,EACA7iC,KAAAmX,WAAA,EACAnX,KAAAuX,UAAA,EACAvX,KAAAqrB,QAAA,EACArrB,KAAAgX,eACAhX,KAAAkhB,cAAA5O,GACAtS,KAAAkiB,oBAAA,GAGAtX,IAA0B9E,OAAS3H,cAAA,GAInCyM,IAAA9E,MAAAzH,IAAA,WACA,MAAA2B,MAAAmyB,mBAGAl0B,OAAAuI,iBAAA+P,GAAA7X,UAAAkM,GAEA,IAAAqW,IAAA,SAAApK,OACA,KAAAA,MAAA,GAEA,IAAAsJ,GAAA,GAAA5J,GAGA,OAFA4J,GAAAtJ,OACAsJ,EAAAhJ,WAAA,EACAgJ,GAsCAo4B,GAAAzwC,MAAApJ,UACA85C,GAAAv6C,OAAA+E,OAAAu1C,KAGA,OACA,MACA,QACA,UACA,SACA,OACA,WAMA12C,QAAA,SAAA42C,GAEA,GAAAC,GAAAH,GAAAE,EACAjjC,GAAAgjC,GAAAC,EAAA,WAEA,IADA,GAAAryC,MAAAyF,EAAAC,UAAApH,OACAmH,KAAAzF,EAAAyF,GAAAC,UAAAD,EAEA,IAEA8pB,GAFA/M,EAAA8vB,EAAA3sC,MAAA/L,KAAAoG,GACA4R,EAAAhY,KAAAiY,MAEA,QAAAwgC,GACA,WACA,cACA9iB,EAAAvvB,CACA,MACA,cACAuvB,EAAAvvB,EAAApB,MAAA,GAMA,MAHA2wB,IAAmB3d,EAAA2gC,aAAAhjB,GAEnB3d,EAAAU,IAAAO,SACA2P,KAMA,IAAAgwB,IAAA36C,OAAA46C,oBAAAL,IAMA/gC,IAAA,EAYAS,GAAA,SAAAvF,GAKA,GAJA3S,KAAA2S,QACA3S,KAAA0Y,IAAA,GAAAzC,IACAjW,KAAAsY,QAAA,EACA9C,EAAA7C,EAAA,SAAA3S,MACA8H,MAAAC,QAAA4K,GAAA,EACA4kC,GACA7/B,EACAG,GACAlF,EAAA6lC,GAAAI,IACA54C,KAAA24C,aAAAhmC,OAEA3S,MAAA84C,KAAAnmC,GASAuF,IAAAxZ,UAAAo6C,KAAA,SAAAp3C,GAEA,OADAE,GAAA3D,OAAA2D,KAAAF,GACAlE,EAAA,EAAiBA,EAAAoE,EAAA8C,OAAiBlH,IAClC+a,EAAA7W,EAAAE,EAAApE,KAOA0a,GAAAxZ,UAAAi6C,aAAA,SAAAI,GACA,OAAAv7C,GAAA,EAAAC,EAAAs7C,EAAAr0C,OAAmClH,EAAAC,EAAOD,IAC1Csa,EAAAihC,EAAAv7C,IA8MA,IAAAod,IAAA7W,GAAAizC,qBAkFAp8B,IAAA5W,KAAA,SACAyV,EACAC,EACAC,GAEA,MAAAA,GAcAH,EAAAC,EAAAC,EAAAC,GAbAD,GAAA,kBAAAA,GAQAD,EAEAD,EAAAC,EAAAC,IAsBAq9B,GAAAl1C,QAAA,SAAA/B,GACA8a,GAAA9a,GAAAga,IAyBAwX,GAAAzvB,QAAA,SAAAvC,GACAsb,GAAAtb,EAAA,KAAAya,IASAa,GAAA1P,MAAA,SACAuO,EACAC,EACAC,EACA7X,GAMA,GAHA2X,IAAA+N,KAAkC/N,MAAAnH,IAClCoH,IAAA8N,KAAiC9N,MAAApH,KAEjCoH,EAAkB,MAAAzb,QAAA+E,OAAAyW,GAAA,KAIlB,KAAAA,EAAmB,MAAAC,EACnB,IAAArF,KACAC,GAAAD,EAAAoF,EACA,QAAAmsB,KAAAlsB,GAAA,CACA,GAAAvZ,GAAAkU,EAAAuxB,GACA9/B,EAAA4T,EAAAksB,EACAzlC,KAAA2H,MAAAC,QAAA5H,KACAA,OAEAkU,EAAAuxB,GAAAzlC,EACAA,EAAAS,OAAAkF,GACAgC,MAAAC,QAAAjC,SAEA,MAAAuO,IAMAuG,GAAAX,MACAW,GAAAwM,QACAxM,GAAAR,OACAQ,GAAAhX,SAAA,SACA6V,EACAC,EACAC,EACA7X,GAKA,IAAA2X,EAAmB,MAAAC,EACnB,IAAArF,GAAApW,OAAA+E,OAAA,KAGA,OAFAsR,GAAAD,EAAAoF,GACAC,GAAiBpF,EAAAD,EAAAqF,GACjBrF,GAEAuG,GAAA6N,QAAAjP,CAKA,IAkcAsE,IACAD,GAncAhD,GAAA,SAAApB,EAAAC,GACA,WAAApH,KAAAoH,EACAD,EACAC,GA2aA8D,MACAF,IAAA,EAqBAK,IAAA,CAOA,aAAAvL,GAAAyD,EAAAzD,GACAyL,GAAA,WACAzL,EAAAiL,SAEC,uBAAA27B,kBACDnjC,EAAAmjC,iBAEA,uCAAAA,eAAA3rC,WAUAwQ,GAAA,WACAmE,WAAA3E,GAAA,QAVA,CACA,GAAA47B,IAAA,GAAAD,gBACAE,GAAAD,GAAAE,KACAF,IAAAG,MAAAC,UAAAh8B,GACAQ,GAAA,WACAq7B,GAAAI,YAAA,IAWA,sBAAAtyC,UAAA6O,EAAA7O,SAAA,CACA,GAAApI,IAAAoI,QAAAC,SACA6W,IAAA,WACAlf,GAAAsD,KAAAmb,IAMAu6B,IAAgB51B,WAAArT,QAIhBmP,IAAAD,EA+CA,IA+iBA3H,IA3cA+H,GAAA,GAAA65B,IAqCA74B,GAAAtL,EAAA,SAAA7V,GACA,GAAAohB,GAAA,MAAAphB,EAAAmK,OAAA,EACAnK,GAAAohB,EAAAphB,EAAAkH,MAAA,GAAAlH,CACA,IAAAk/B,GAAA,MAAAl/B,EAAAmK,OAAA,EACAnK,GAAAk/B,EAAAl/B,EAAAkH,MAAA,GAAAlH,CACA,IAAA+e,GAAA,MAAA/e,EAAAmK,OAAA,EAEA,OADAnK,GAAA+e,EAAA/e,EAAAkH,MAAA,GAAAlH,GAEAA,OACAsX,KAAA4nB,EACAngB,UACAqC,aA6lBAwjB,GAAA,KAkUA3c,MACAC,MACAzH,MAEA0H,IAAA,EACAC,IAAA,EACA5W,GAAA,EAmIAiqC,GAAA,EAOA/0B,GAAA,SACA7K,EACA4O,EACA1hB,EACArH,EACAg6C,GAEAx5C,KAAA2Z,KACA6/B,IACA7/B,EAAA+J,SAAA1jB,MAEA2Z,EAAAsN,UAAAtkB,KAAA3C,MAEAR,GACAQ,KAAAsH,OAAA9H,EAAA8H,KACAtH,KAAAy5C,OAAAj6C,EAAAi6C,KACAz5C,KAAAq8B,OAAA78B,EAAA68B,KACAr8B,KAAAuH,OAAA/H,EAAA+H,MAEAvH,KAAAsH,KAAAtH,KAAAy5C,KAAAz5C,KAAAq8B,KAAAr8B,KAAAuH,MAAA,EAEAvH,KAAA6G,KACA7G,KAAAwN,KAAA+rC,GACAv5C,KAAAgS,QAAA,EACAhS,KAAAooB,MAAApoB,KAAAq8B,KACAr8B,KAAA05C,QACA15C,KAAA25C,WACA35C,KAAA45C,OAAA,GAAA9B,IACA93C,KAAA65C,UAAA,GAAA/B,IACA93C,KAAAm4B,WAEA,GAEA,kBAAA5P,GACAvoB,KAAAjC,OAAAwqB,GAEAvoB,KAAAjC,OAAA2X,EAAA6S,GACAvoB,KAAAjC,SACAiC,KAAAjC,OAAA,eASAiC,KAAA2S,MAAA3S,KAAAq8B,SACA/pB,GACAtS,KAAA3B,MAMAmmB,IAAA9lB,UAAAL,IAAA,WACA0X,EAAA/V,KACA,IAAA2S,GACAgH,EAAA3Z,KAAA2Z,EACA,KACAhH,EAAA3S,KAAAjC,OAAAL,KAAAic,KACG,MAAAtI,GACH,IAAArR,KAAAy5C,KAGA,KAAApoC,EAFAkL,IAAAlL,EAAAsI,EAAA,uBAAA3Z,KAAA,gBAIG,QAGHA,KAAAsH,MACAyW,GAAApL,GAEAyD,IACApW,KAAA85C,cAEA,MAAAnnC,IAMA6R,GAAA9lB,UAAA25C,OAAA,SAAA3/B,GACA,GAAAlL,GAAAkL,EAAAlL,EACAxN,MAAA65C,UAAAt7B,IAAA/Q,KACAxN,KAAA65C,UAAAv5C,IAAAkN,GACAxN,KAAA25C,QAAAh3C,KAAA+V,GACA1Y,KAAA45C,OAAAr7B,IAAA/Q,IACAkL,EAAAy/B,OAAAn4C,QAQAwkB,GAAA9lB,UAAAo7C,YAAA,WAIA,IAHA,GAAA9vC,GAAAhK,KAEAxC,EAAAwC,KAAA05C,KAAAh1C,OACAlH,KAAA,CACA,GAAAkb,GAAA1O,EAAA0vC,KAAAl8C,EACAwM,GAAA6vC,UAAAt7B,IAAA7F,EAAAlL,KACAkL,EAAA0/B,UAAApuC,GAGA,GAAA+vC,GAAA/5C,KAAA45C,MACA55C,MAAA45C,OAAA55C,KAAA65C,UACA75C,KAAA65C,UAAAE,EACA/5C,KAAA65C,UAAA37B,QACA67B,EAAA/5C,KAAA05C,KACA15C,KAAA05C,KAAA15C,KAAA25C,QACA35C,KAAA25C,QAAAI,EACA/5C,KAAA25C,QAAAj1C,OAAA,GAOA8f,GAAA9lB,UAAAyD,OAAA,WAEAnC,KAAAq8B,KACAr8B,KAAAooB,OAAA,EACGpoB,KAAAuH,KACHvH,KAAAsmB,MAEAM,GAAA5mB,OAQAwkB,GAAA9lB,UAAA4nB,IAAA,WACA,GAAAtmB,KAAAgS,OAAA,CACA,GAAAW,GAAA3S,KAAA3B,KACA,IACAsU,IAAA3S,KAAA2S,OAIA5Q,EAAA4Q,IACA3S,KAAAsH,KACA,CAEA,GAAAkuB,GAAAx1B,KAAA2S,KAEA,IADA3S,KAAA2S,QACA3S,KAAAy5C,KACA,IACAz5C,KAAA6G,GAAAnJ,KAAAsC,KAAA2Z,GAAAhH,EAAA6iB,GACS,MAAAnkB,GACTkL,GAAAlL,EAAArR,KAAA2Z,GAAA,yBAAA3Z,KAAA,oBAGAA,MAAA6G,GAAAnJ,KAAAsC,KAAA2Z,GAAAhH,EAAA6iB,MAUAhR,GAAA9lB,UAAA2pB,SAAA,WACAroB,KAAA2S,MAAA3S,KAAA3B,MACA2B,KAAAooB,OAAA,GAMA5D,GAAA9lB,UAAAoa,OAAA,WAIA,IAHA,GAAA9O,GAAAhK,KAEAxC,EAAAwC,KAAA05C,KAAAh1C,OACAlH,KACAwM,EAAA0vC,KAAAl8C,GAAAsb,UAOA0L,GAAA9lB,UAAAs7C,SAAA,WACA,GAAAhwC,GAAAhK,IAEA,IAAAA,KAAAgS,OAAA,CAIAhS,KAAA2Z,GAAAoK,mBACAxV,EAAAvO,KAAA2Z,GAAAsN,UAAAjnB,KAGA,KADA,GAAAxC,GAAAwC,KAAA05C,KAAAh1C,OACAlH,KACAwM,EAAA0vC,KAAAl8C,GAAA46C,UAAApuC,EAEAhK,MAAAgS,QAAA,GAMA,IAAA+U,KACA3oB,YAAA,EACAD,cAAA,EACAE,IAAAsQ,EACAzJ,IAAAyJ,GAsIAqZ,IAA8BqU,MAAA,EA6lB9B5Q,IAAAgB,GAAA/tB,UAoFA,IAAA4vB,KACAvlB,KAAA,SACA0N,EACAyN,EACA6J,EACAC,GAEA,GACAvX,EAAA0b,oBACA1b,EAAA0b,kBAAArO,cACArN,EAAAzS,KAAAi2C,UACA,CAEA,GAAAC,GAAAzjC,CACA6X,IAAA6rB,SAAAD,SACK,EACLzjC,EAAA0b,kBAAArE,GACArX,EACAisB,GACA3U,EACAC,IAEAosB,OAAAl2B,EAAAzN,EAAAK,QAAAxE,GAAA4R,KAIAi2B,SAAA,SAAAtlB,EAAApe,GACA,GAAAjX,GAAAiX,EAAAM,gBAEA0N,IADAhO,EAAA0b,kBAAA0C,EAAA1C,kBAGA3yB,EAAAic,UACAjc,EAAA+iB,UACA9L,EACAjX,EAAAoX,WAIAyjC,OAAA,SAAA5jC,GACA,GAAA1W,GAAA0W,EAAA1W,QACAoyB,EAAA1b,EAAA0b,iBACAA,GAAAtO,aACAsO,EAAAtO,YAAA,EACAO,GAAA+N,EAAA,YAEA1b,EAAAzS,KAAAi2C,YACAl6C,EAAA8jB,WAMA8C,GAAAwL,GAEA1M,GAAA0M,GAAA,KAKAmoB,QAAA,SAAA7jC,GACA,GAAA0b,GAAA1b,EAAA0b,iBACAA,GAAArO,eACArN,EAAAzS,KAAAi2C,UAGAt0B,GAAAwM,GAAA,GAFAA,EAAA5tB,cAQA8pB,GAAApwB,OAAA2D,KAAA0sB,IAsJAO,GAAA,EACAH,GAAA,EAuPA6rB,GAAA,GAEA,SAAAz2C,GACAA,EAAApF,UAAAoK,MAAA,SAAAtJ,GACA,GAAAma,GAAA3Z,IAEA2Z,GAAA6gC,KAAAD,KAWA5gC,EAAAtB,QAAA,EAEA7Y,KAAAyuB,aAIAuB,GAAA7V,EAAAna,GAEAma,EAAAnR,SAAAiS,EACAgT,GAAA9T,EAAA8V,aACAjwB,MACAma,GAOAA,EAAAuR,aAAAvR,EAGAA,EAAA8gC,MAAA9gC,EACA0J,GAAA1J,GACAyI,GAAAzI,GACA2V,GAAA3V,GACAyK,GAAAzK,EAAA,gBACAgP,GAAAhP,GACAqN,GAAArN,GACA6O,GAAA7O,GACAyK,GAAAzK,EAAA,WASAA,EAAAnR,SAAAyb,IACAtK,EAAAygC,OAAAzgC,EAAAnR,SAAAyb,MA4FAngB,IAtoCA,SAAAA,GAIA,GAAA42C,KACAA,GAAAr8C,IAAA,WAA6B,MAAA2B,MAAAqE,MAC7B,IAAAs2C,KACAA,GAAAt8C,IAAA,WAA8B,MAAA2B,MAAAkc,QAa9Bje,OAAAC,eAAA4F,EAAApF,UAAA,QAAAg8C,GACAz8C,OAAAC,eAAA4F,EAAApF,UAAA,SAAAi8C,GAEA72C,EAAApF,UAAAk8C,KAAA11C,EACApB,EAAApF,UAAAm8C,QAAA1hC,EAEArV,EAAApF,UAAA2I,OAAA,SACAkhB,EACA1hB,EACArH,GAEA,GAAAma,GAAA3Z,IACA,IAAA4S,EAAA/L,GACA,MAAAyhB,IAAA3O,EAAA4O,EAAA1hB,EAAArH,EAEAA,SACAA,EAAAi6C,MAAA,CACA,IAAArzB,GAAA,GAAA5B,IAAA7K,EAAA4O,EAAA1hB,EAAArH,EAIA,OAHAA,GAAAs7C,WACAj0C,EAAAnJ,KAAAic,EAAAyM,EAAAzT,OAEA,WACAyT,EAAA4zB,cA6lCAl2C,IA/uEA,SAAAA,GACA,GAAAi3C,GAAA,QACAj3C,GAAApF,UAAAikB,IAAA,SAAA3D,EAAArd,GACA,GAAAqI,GAAAhK,KAEA2Z,EAAA3Z,IACA,IAAA8H,MAAAC,QAAAiX,GACA,OAAAxhB,GAAA,EAAAC,EAAAuhB,EAAAta,OAAuClH,EAAAC,EAAOD,IAC9CwM,EAAA2Y,IAAA3D,EAAAxhB,GAAAmE,QAGAgY,EAAA0I,QAAArD,KAAArF,EAAA0I,QAAArD,QAAArc,KAAAhB,GAGAo5C,EAAAxqC,KAAAyO,KACArF,EAAA2I,eAAA,EAGA,OAAA3I,IAGA7V,EAAApF,UAAAgkB,MAAA,SAAA1D,EAAArd,GAEA,QAAAR,KACAwY,EAAAkJ,KAAA7D,EAAA7d,GACAQ,EAAAoK,MAAA4N,EAAA7N,WAHA,GAAA6N,GAAA3Z,IAOA,OAFAmB,GAAAQ,KACAgY,EAAAgJ,IAAA3D,EAAA7d,GACAwY,GAGA7V,EAAApF,UAAAmkB,KAAA,SAAA7D,EAAArd,GACA,GAAAqI,GAAAhK,KAEA2Z,EAAA3Z,IAEA,KAAA8L,UAAApH,OAEA,MADAiV,GAAA0I,QAAApkB,OAAA+E,OAAA,MACA2W,CAGA,IAAA7R,MAAAC,QAAAiX,GAAA,CACA,OAAAxhB,GAAA,EAAAC,EAAAuhB,EAAAta,OAAuClH,EAAAC,EAAOD,IAC9CwM,EAAA6Y,KAAA7D,EAAAxhB,GAAAmE,EAEA,OAAAgY,GAGA,GAAAqhC,GAAArhC,EAAA0I,QAAArD,EACA,KAAAg8B,EACA,MAAArhC,EAEA,KAAAhY,EAEA,MADAgY,GAAA0I,QAAArD,GAAA,KACArF,CAEA,IAAAhY,EAIA,IAFA,GAAAkF,GACAqqC,EAAA8J,EAAAt2C,OACAwsC,KAEA,IADArqC,EAAAm0C,EAAA9J,MACAvvC,GAAAkF,EAAAlF,OAAA,CACAq5C,EAAAp4C,OAAAsuC,EAAA,EACA,OAIA,MAAAv3B,IAGA7V,EAAApF,UAAAmnB,MAAA,SAAA7G,GACA,GAAArF,GAAA3Z,KAaAg7C,EAAArhC,EAAA0I,QAAArD,EACA,IAAAg8B,EAAA,CACAA,IAAAt2C,OAAA,EAAAyP,EAAA6mC,IAEA,QADA50C,GAAA+N,EAAArI,UAAA,GACAtO,EAAA,EAAAC,EAAAu9C,EAAAt2C,OAAqClH,EAAAC,EAAOD,IAC5C,IACAw9C,EAAAx9C,GAAAuO,MAAA4N,EAAAvT,GACS,MAAAiL,GACTkL,GAAAlL,EAAAsI,EAAA,sBAAAqF,EAAA,MAIA,MAAArF,KA8oEA7V,IAziEA,SAAAA,GACAA,EAAApF,UAAA4lB,QAAA,SAAA7N,EAAAyN,GACA,GAAAvK,GAAA3Z,IACA2Z,GAAAkK,YACAO,GAAAzK,EAAA,eAEA,IAAAshC,GAAAthC,EAAAwK,IACA+2B,EAAAvhC,EAAAuL,OACAi2B,EAAAzY,EACAA,IAAA/oB,EACAA,EAAAuL,OAAAzO,EAGAykC,EAYAvhC,EAAAwK,IAAAxK,EAAAyhC,UAAAF,EAAAzkC,IAVAkD,EAAAwK,IAAAxK,EAAAyhC,UACAzhC,EAAAwK,IAAA1N,EAAAyN,GAAA,EACAvK,EAAAnR,SAAA0lB,WACAvU,EAAAnR,SAAA2lB,SAIAxU,EAAAnR,SAAA0lB,WAAAvU,EAAAnR,SAAA2lB,QAAA,MAKAuU,GAAAyY,EAEAF,IACAA,EAAAI,QAAA,MAEA1hC,EAAAwK,MACAxK,EAAAwK,IAAAk3B,QAAA1hC,GAGAA,EAAA1Z,QAAA0Z,EAAA+C,SAAA/C,EAAA1Z,SAAA0Z,EAAA+C,QAAAwI,SACAvL,EAAA+C,QAAAyH,IAAAxK,EAAAwK,MAMArgB,EAAApF,UAAAijB,aAAA,WACA,GAAAhI,GAAA3Z,IACA2Z,GAAA+J,UACA/J,EAAA+J,SAAAvhB,UAIA2B,EAAApF,UAAA6F,SAAA,WACA,GAAAoV,GAAA3Z,IACA,KAAA2Z,EAAAoK,kBAAA,CAGAK,GAAAzK,EAAA,iBACAA,EAAAoK,mBAAA,CAEA,IAAA5jB,GAAAwZ,EAAA+C,SACAvc,KAAA4jB,mBAAApK,EAAAnR,SAAA8a,UACA/U,EAAApO,EAAAojB,UAAA5J,GAGAA,EAAA+J,UACA/J,EAAA+J,SAAAs2B,UAGA,KADA,GAAAx8C,GAAAmc,EAAAsN,UAAAviB,OACAlH,KACAmc,EAAAsN,UAAAzpB,GAAAw8C,UAIArgC,GAAAtV,MAAA4T,QACA0B,EAAAtV,MAAA4T,OAAAK,UAGAqB,EAAAmK,cAAA,EAEAnK,EAAAyhC,UAAAzhC,EAAAuL,OAAA,MAEAd,GAAAzK,EAAA,aAEAA,EAAAkJ,OAEAlJ,EAAAwK,MACAxK,EAAAwK,IAAAk3B,QAAA,MAGA1hC,EAAA1Z,SACA0Z,EAAA1Z,OAAAE,OAAA,SAi9DA2D,IA/NA,SAAAA,GAEA2nB,GAAA3nB,EAAApF,WAEAoF,EAAApF,UAAA48C,UAAA,SAAA35C,GACA,MAAA2C,IAAA3C,EAAA3B,OAGA8D,EAAApF,UAAA6lB,QAAA,WACA,GAAA5K,GAAA3Z,KACAyK,EAAAkP,EAAAnR,SACA/I,EAAAgL,EAAAhL,OACAwlB,EAAAxa,EAAAwa,YAUAA,KACAtL,EAAAoL,aAAAE,EAAAjhB,KAAA8gB,aAAAE,IAKArL,EAAA1Z,OAAAglB,CAEA,IAAAxO,EACA,KACAA,EAAAhX,EAAA/B,KAAAic,EAAAuR,aAAAvR,EAAA+P,gBACK,MAAArY,GACLkL,GAAAlL,EAAAsI,EAAA,UAgBAlD,EAAAkD,EAAAuL,OAgBA,MAZAzO,aAAAF,MAQAE,EAAAwK,MAGAxK,EAAAtW,OAAA8kB,EACAxO,IA8JA3S,GA4MA,IAAAy3C,KAAAtoC,OAAA22B,OAAA9hC,OAEA0zC,IACA19C,KAAA,aACAwlB,UAAA,EAEArJ,OACAwhC,QAAAF,GACAG,QAAAH,GACAriC,KAAAjG,OAAAvK,SAGAizC,QAAA,WACA37C,KAAA4T,MAAA3V,OAAA+E,OAAA,MACAhD,KAAA4B,SAGAg6C,UAAA,WACA,GAAA5xC,GAAAhK,IAEA,QAAA8B,KAAAkI,GAAA4J,MACAoe,GAAAhoB,EAAA4J,MAAA9R,EAAAkI,EAAApI,OAIAi6C,QAAA,WACA,GAAA7xC,GAAAhK,IAEAA,MAAAqH,OAAA,mBAAApF,GACA4vB,GAAA7nB,EAAA,SAAAlM,GAA0C,MAAA6zB,IAAA1vB,EAAAnE,OAE1CkC,KAAAqH,OAAA,mBAAApF,GACA4vB,GAAA7nB,EAAA,SAAAlM,GAA0C,OAAA6zB,GAAA1vB,EAAAnE,QAI1C2B,OAAA,WACA,GAAAwjB,GAAAjjB,KAAAulB,OAAAhmB,QACAkX,EAAA0L,GAAAc,GACAlM,EAAAN,KAAAM,gBACA,IAAAA,EAAA,CAEA,GAAAjZ,GAAA4zB,GAAA3a,GACAtM,EAAAzK,KACAy7C,EAAAhxC,EAAAgxC,QACAC,EAAAjxC,EAAAixC,OACA,IAEAD,KAAA39C,IAAA6zB,GAAA8pB,EAAA39C,KAEA49C,GAAA59C,GAAA6zB,GAAA+pB,EAAA59C,GAEA,MAAA2Y,EAGA,IAAAqlC,GAAA97C,KACA4T,EAAAkoC,EAAAloC,MACAhS,EAAAk6C,EAAAl6C,KACAE,EAAA,MAAA2U,EAAA3U,IAGAiV,EAAAjB,KAAA0X,KAAAzW,EAAAJ,IAAA,KAAAI,EAAA,QACAN,EAAA3U,GACA8R,GAAA9R,IACA2U,EAAA0b,kBAAAve,EAAA9R,GAAAqwB,kBAEA5jB,EAAA3M,EAAAE,GACAF,EAAAe,KAAAb,KAEA8R,EAAA9R,GAAA2U,EACA7U,EAAAe,KAAAb,GAEA9B,KAAAkZ,KAAAtX,EAAA8C,OAAA2tC,SAAAryC,KAAAkZ,MACA8Y,GAAApe,EAAAhS,EAAA,GAAAA,EAAA5B,KAAAklB,SAIAzO,EAAAzS,KAAAi2C,WAAA,EAEA,MAAAxjC,IAAAwM,KAAA,KAIA84B,IACAP,eAKA,SAAA13C,GAEA,GAAAk4C,KACAA,GAAA39C,IAAA,WAA+B,MAAA0F,KAQ/B9F,OAAAC,eAAA4F,EAAA,SAAAk4C,GAKAl4C,EAAAm4C,MACAtiB,QACArlB,SACAmG,eACAlC,kBAGAzU,EAAAoB,MACApB,EAAAwH,OAAA6N,EACArV,EAAAQ,YAEAR,EAAAtE,QAAAvB,OAAA+E,OAAA,MACAsuB,GAAAzvB,QAAA,SAAAvC,GACAwE,EAAAtE,QAAAF,EAAA,KAAArB,OAAA+E,OAAA,QAKAc,EAAAtE,QAAA+tB,MAAAzpB,EAEAwQ,EAAAxQ,EAAAtE,QAAAywB,WAAA8rB,IAEAvrB,GAAA1sB,GACA+sB,GAAA/sB,GACAgtB,GAAAhtB,GACA0tB,GAAA1tB,IAGAA,IAEA7F,OAAAC,eAAA4F,GAAApF,UAAA,aACAL,IAAA8Z,KAGAla,OAAAC,eAAA4F,GAAApF,UAAA,eACAL,IAAA,WAEA,MAAA2B,MAAAC,QAAAD,KAAAC,OAAAC,cAKAjC,OAAAC,eAAA4F,GAAA,2BACA6O,MAAA8Z,KAGA3oB,GAAA6E,QAAA,QAMA,IAwoDAkD,IACAiG,GACAqpB,GACAJ,GACAC,GACAC,GAsFAU,GAiMAiB,GA2PAsf,GA/pEA7E,GAAA9jC,EAAA,eAGA4oC,GAAA5oC,EAAA,yCACAoX,GAAA,SAAAhU,EAAArX,EAAAurC,GACA,MACA,UAAAA,GAAAsR,GAAAxlC,IAAA,WAAArX,GACA,aAAAurC,GAAA,WAAAl0B,GACA,YAAAk0B,GAAA,UAAAl0B,GACA,UAAAk0B,GAAA,UAAAl0B,GAIAggB,GAAApjB,EAAA,wCAEAujB,GAAAvjB,EACA,wYAQAkjB,GAAA,+BAEAF,GAAA,SAAAz4B,GACA,YAAAA,EAAAmK,OAAA,cAAAnK,EAAAkH,MAAA,MAGA0xB,GAAA,SAAA54B,GACA,MAAAy4B,IAAAz4B,KAAAkH,MAAA,EAAAlH,EAAA4G,QAAA,IAGAqyB,GAAA,SAAA90B,GACA,aAAAA,IAAA,IAAAA,GAsFAwxB,IACA2oB,IAAA,6BACAC,KAAA,sCAGAC,GAAA/oC,EACA,snBAeAuf,GAAAvf,EACA,kNAGA,GAGA24B,GAAA,SAAAv1B,GAA+B,cAAAA,GAE/BoY,GAAA,SAAApY,GACA,MAAA2lC,IAAA3lC,IAAAmc,GAAAnc,IAcAqc,GAAA/0B,OAAA+E,OAAA,MA0BAwxB,GAAAjhB,EAAA,6CAiFAgpC,GAAAt+C,OAAAy4C,QACAtoC,cAAAilB,GACAG,mBACA7jB,kBACA+jB,iBACA7jB,gBACAnG,eACA4E,eACAM,cACAilB,eACAP,WACAQ,kBACAE,mBAKAvpB,IACAzH,OAAA,SAAAg2B,EAAAviB,GACAwd,GAAAxd,IAEAtU,OAAA,SAAA0yB,EAAApe,GACAoe,EAAA7wB,KAAAyG,MAAAgM,EAAAzS,KAAAyG,MACAwpB,GAAAY,GAAA,GACAZ,GAAAxd,KAGA6jC,QAAA,SAAA7jC,GACAwd,GAAAxd,GAAA,KA2CAwe,GAAA,GAAA1e,IAAA,UAEAoG,IAAA,iDAuuBAnC,IACAxX,OAAA4xB,GACAzyB,OAAAyyB,GACA0lB,QAAA,SAAA7jC,GACAme,GAAAne,EAAAwe,MAsEAa,GAAA73B,OAAA+E,OAAA,MAwCAw5C,IACA/xC,GACA+P,IAoGAkF,IACA1c,OAAAizB,GACA9zB,OAAA8zB,IAoCAwmB,IACAz5C,OAAAu0B,GACAp1B,OAAAo1B,IAKAoB,GAAA,gBAiaA4D,GAAA,MACAE,GAAA,MAmPA3C,IACA92B,OAAAk6B,GACA/6B,OAAA+6B,IA4FAtS,IACA5nB,OAAAm6B,GACAh7B,OAAAg7B,IAKAgB,GAAAxqB,EAAA,SAAAnE,GACA,GAAA1I,MACA41C,EAAA,gBACAC,EAAA,OAOA,OANAntC,GAAA5G,MAAA8zC,GAAA76C,QAAA,SAAAuK,GACA,GAAAA,EAAA,CACA,GAAA2tC,GAAA3tC,EAAAxD,MAAA+zC,EACA5C,GAAAr1C,OAAA,IAAAoC,EAAAizC,EAAA,GAAA9hB,QAAA8hB,EAAA,GAAA9hB,WAGAnxB,IA4DA81C,GAAA,MACAC,GAAA,iBACAhe,GAAA,SAAA5a,EAAAnmB,EAAAmE,GAEA,GAAA26C,GAAArsC,KAAAzS,GACAmmB,EAAAmL,MAAA0tB,YAAAh/C,EAAAmE,OACG,IAAA46C,GAAAtsC,KAAAtO,GACHgiB,EAAAmL,MAAA0tB,YAAAh/C,EAAAmE,EAAAk9B,QAAA0d,GAAA,qBACG,CACH,GAAAE,GAAAC,GAAAl/C,EACA,IAAAgK,MAAAC,QAAA9F,GAIA,OAAAzE,GAAA,EAAAqO,EAAA5J,EAAAyC,OAAuClH,EAAAqO,EAASrO,IAChDymB,EAAAmL,MAAA2tB,GAAA96C,EAAAzE,OAGAymB,GAAAmL,MAAA2tB,GAAA96C,IAKAg7C,IAAA,qBAGAD,GAAArpC,EAAA,SAAA+H,GAGA,GAFAwgC,OAAA/tC,SAAAC,cAAA,OAAAghB,MAEA,YADA1T,EAAAxB,GAAAwB,KACAA,IAAAwgC,IACA,MAAAxgC,EAGA,QADAwhC,GAAAxhC,EAAAzT,OAAA,GAAA2uC,cAAAl7B,EAAA1W,MAAA,GACAxH,EAAA,EAAiBA,EAAAy/C,GAAAv4C,OAAwBlH,IAAA,CACzC,GAAAM,GAAAm/C,GAAAz/C,GAAA0/C,CACA,IAAAp/C,IAAAo+C,IACA,MAAAp+C,MAgDAsxB,IACApsB,OAAAu7B,GACAp8B,OAAAo8B,IAoFAc,GAAA1rB,EAAA,SAAA7V,GACA,OACA8jC,WAAA9jC,EAAA,SACA+jC,aAAA/jC,EAAA,YACAgkC,iBAAAhkC,EAAA,gBACAmmC,WAAAnmC,EAAA,SACAqmC,aAAArmC,EAAA,YACAomC,iBAAApmC,EAAA,mBAIAq/C,GAAAlgC,KAAAga,GACA8I,GAAA,aACAgB,GAAA,YAGAR,GAAA,aACAP,GAAA,gBACAY,GAAA,YACAX,GAAA,cACAkd,UAEA7qC,KAAAtJ,OAAAo0C,qBACA9qC,KAAAtJ,OAAAq0C,wBAEA9c,GAAA,mBACAP,GAAA,2BAEA1tB,KAAAtJ,OAAAs0C,oBACAhrC,KAAAtJ,OAAAu0C,uBAEA3c,GAAA,kBACAX,GAAA,sBAKA,IAAAV,IAAAtiB,GACAjU,OAAAw0C,sBACAx0C,OAAAw0C,sBAAAvxC,KAAAjD,QACAgZ,WACA,SAAArgB,GAA8C,MAAAA,MAsD9Cs/B,GAAA,yBAqXAQ,GAAAxkB,IACAja,OAAAyhC,GACAgZ,SAAAhZ,GACAl2B,OAAA,SAAAkI,EAAAqtB,IAEA,IAAArtB,EAAAzS,KAAAy/B,KACAI,GAAAptB,EAAAqtB,GAEAA,SAKA4Z,IACAh+B,GACA+8B,GACA3iB,GACAlP,GACAwE,GACAqS,IAOAvkC,GAAAwgD,GAAA98C,OAAA47C,IAEAmB,GAj6EA,SAAAC,GAgBA,QAAAC,GAAA/mC,GACA,UAAAP,IAAAgmC,EAAAjpB,QAAAxc,GAAArG,wBAA2D6B,GAAAwE,GAG3D,QAAAgnC,GAAAC,EAAAx7B,GACA,QAAAhU,KACA,KAAAA,EAAAgU,WACAy7B,EAAAD,GAIA,MADAxvC,GAAAgU,YACAhU,EAGA,QAAAyvC,GAAA/5B,GACA,GAAA9jB,GAAAo8C,EAAA3tC,WAAAqV,EAEA1R,GAAApS,IACAo8C,EAAA7yC,YAAAvJ,EAAA8jB,GAsBA,QAAAg6B,GACAxnC,EACAynC,EACAnwB,EACAC,EACAmwB,EACAC,EACA9uC,GAYA,GAVAiD,EAAAkE,EAAAK,MAAAvE,EAAA6rC,KAMA3nC,EAAA2nC,EAAA9uC,GAAAkH,EAAAC,IAGAA,EAAAosB,cAAAsb,GACA7wB,EAAA7W,EAAAynC,EAAAnwB,EAAAC,GAAA,CAIA,GAAAhqB,GAAAyS,EAAAzS,KACA4S,EAAAH,EAAAG,SACAD,EAAAF,EAAAE,GACApE,GAAAoE,IAeAF,EAAAK,IAAAL,EAAAQ,GACAslC,EAAA/oB,gBAAA/c,EAAAQ,GAAAN,GACA4lC,EAAAnuC,cAAAuI,EAAAF,GACA4nC,EAAA5nC,GAIA6nC,EAAA7nC,EAAAG,EAAAsnC,GACA3rC,EAAAvO,IACAu6C,EAAA9nC,EAAAynC,GAEA7D,EAAAtsB,EAAAtX,EAAAK,IAAAkX,IAMKxb,EAAAiE,EAAAU,YACLV,EAAAK,IAAAylC,EAAA7oB,cAAAjd,EAAAI,MACAwjC,EAAAtsB,EAAAtX,EAAAK,IAAAkX,KAEAvX,EAAAK,IAAAylC,EAAA5sC,eAAA8G,EAAAI,MACAwjC,EAAAtsB,EAAAtX,EAAAK,IAAAkX,KAIA,QAAAV,GAAA7W,EAAAynC,EAAAnwB,EAAAC,GACA,GAAAxwB,GAAAiZ,EAAAzS,IACA,IAAAuO,EAAA/U,GAAA,CACA,GAAAghD,GAAAjsC,EAAAkE,EAAA0b,oBAAA30B,EAAAy8C,SAQA,IAPA1nC,EAAA/U,IAAAsC,OAAAyS,EAAA/U,IAAAuL,OACAvL,EAAAiZ,GAAA,EAAAsX,EAAAC,GAMAzb,EAAAkE,EAAA0b,mBAKA,MAJAssB,GAAAhoC,EAAAynC,GACA1rC,EAAAgsC,IACAE,EAAAjoC,EAAAynC,EAAAnwB,EAAAC,IAEA,GAKA,QAAAywB,GAAAhoC,EAAAynC,GACA3rC,EAAAkE,EAAAzS,KAAA26C,iBACAT,EAAAv7C,KAAAoJ,MAAAmyC,EAAAznC,EAAAzS,KAAA26C,eACAloC,EAAAzS,KAAA26C,cAAA,MAEAloC,EAAAK,IAAAL,EAAA0b,kBAAAhO,IACAy6B,EAAAnoC,IACA8nC,EAAA9nC,EAAAynC,GACAG,EAAA5nC,KAIAwd,GAAAxd,GAEAynC,EAAAv7C,KAAA8T,IAIA,QAAAioC,GAAAjoC,EAAAynC,EAAAnwB,EAAAC,GAOA,IANA,GAAAxwB,GAKAqhD,EAAApoC,EACAooC,EAAA1sB,mBAEA,GADA0sB,IAAA1sB,kBAAAjN,OACA3S,EAAA/U,EAAAqhD,EAAA76C,OAAAuO,EAAA/U,IAAAikC,YAAA,CACA,IAAAjkC,EAAA,EAAmBA,EAAAw9C,EAAAyC,SAAA/4C,SAAyBlH,EAC5Cw9C,EAAAyC,SAAAjgD,GAAAy3B,GAAA4pB,EAEAX,GAAAv7C,KAAAk8C,EACA,OAKAxE,EAAAtsB,EAAAtX,EAAAK,IAAAkX,GAGA,QAAAqsB,GAAAl6C,EAAA2W,EAAAgoC,GACAvsC,EAAApS,KACAoS,EAAAusC,GACAA,EAAAlwC,aAAAzO,GACAo8C,EAAA1sC,aAAA1P,EAAA2W,EAAAgoC,GAGAvC,EAAAjuC,YAAAnO,EAAA2W,IAKA,QAAAwnC,GAAA7nC,EAAAG,EAAAsnC,GACA,GAAAp2C,MAAAC,QAAA6O,GAIA,OAAApZ,GAAA,EAAqBA,EAAAoZ,EAAAlS,SAAqBlH,EAC1CygD,EAAArnC,EAAApZ,GAAA0gD,EAAAznC,EAAAK,IAAA,QAAAF,EAAApZ,OAEKkV,GAAA+D,EAAAI,OACL0lC,EAAAjuC,YAAAmI,EAAAK,IAAAylC,EAAA5sC,eAAAsD,OAAAwD,EAAAI,QAIA,QAAA+nC,GAAAnoC,GACA,KAAAA,EAAA0b,mBACA1b,IAAA0b,kBAAAjN,MAEA,OAAA3S,GAAAkE,EAAAE,KAGA,QAAA4nC,GAAA9nC,EAAAynC,GACA,OAAAhN,GAAA,EAAqBA,EAAA8J,EAAAh4C,OAAA0B,SAAyBwsC,EAC9C8J,EAAAh4C,OAAAkuC,GAAAjc,GAAAxe,EAEAjZ,GAAAiZ,EAAAzS,KAAAlE,KACAyS,EAAA/U,KACA+U,EAAA/U,EAAAwF,SAA4BxF,EAAAwF,OAAAiyB,GAAAxe,GAC5BlE,EAAA/U,EAAA68C,SAA4B6D,EAAAv7C,KAAA8T,IAO5B,QAAA4nC,GAAA5nC,GACA,GAAAjZ,EACA,IAAA+U,EAAA/U,EAAAiZ,EAAAa,WACAilC,EAAAvoB,cAAAvd,EAAAK,IAAAtZ,OAGA,KADA,GAAAuhD,GAAAtoC,EACAsoC,GACAxsC,EAAA/U,EAAAuhD,EAAAh/C,UAAAwS,EAAA/U,IAAAgL,SAAA3I,WACA08C,EAAAvoB,cAAAvd,EAAAK,IAAAtZ,GAEAuhD,IAAA5+C,MAIAoS,GAAA/U,EAAAklC,KACAllC,IAAAiZ,EAAA1W,SACAvC,IAAAiZ,EAAAW,WACA7E,EAAA/U,IAAAgL,SAAA3I,WAEA08C,EAAAvoB,cAAAvd,EAAAK,IAAAtZ,GAIA,QAAAwhD,GAAAjxB,EAAAC,EAAAZ,EAAA6xB,EAAAtqB,EAAAupB,GACA,KAAUe,GAAAtqB,IAAoBsqB,EAC9BhB,EAAA7wB,EAAA6xB,GAAAf,EAAAnwB,EAAAC,GAAA,EAAAZ,EAAA6xB,GAIA,QAAAC,GAAAzoC,GACA,GAAAjZ,GAAAsQ,EACA9J,EAAAyS,EAAAzS,IACA,IAAAuO,EAAAvO,GAEA,IADAuO,EAAA/U,EAAAwG,EAAAlE,OAAAyS,EAAA/U,IAAA88C,UAAyD98C,EAAAiZ,GACzDjZ,EAAA,EAAiBA,EAAAw9C,EAAAV,QAAA51C,SAAwBlH,EAAOw9C,EAAAV,QAAA98C,GAAAiZ,EAEhD,IAAAlE,EAAA/U,EAAAiZ,EAAAG,UACA,IAAA9I,EAAA,EAAiBA,EAAA2I,EAAAG,SAAAlS,SAA2BoJ,EAC5CoxC,EAAAzoC,EAAAG,SAAA9I,IAKA,QAAAqxC,GAAApxB,EAAAX,EAAA6xB,EAAAtqB,GACA,KAAUsqB,GAAAtqB,IAAoBsqB,EAAA,CAC9B,GAAAG,GAAAhyB,EAAA6xB,EACA1sC,GAAA6sC,KACA7sC,EAAA6sC,EAAAzoC,MACA0oC,EAAAD,GACAF,EAAAE,IAEApB,EAAAoB,EAAAtoC,OAMA,QAAAuoC,GAAA5oC,EAAAqtB,GACA,GAAAvxB,EAAAuxB,IAAAvxB,EAAAkE,EAAAzS,MAAA,CACA,GAAAxG,GACA+kB,EAAAy4B,EAAAzsC,OAAA7J,OAAA,CAaA,KAZA6N,EAAAuxB,GAGAA,EAAAvhB,aAGAuhB,EAAAga,EAAArnC,EAAAK,IAAAyL,GAGAhQ,EAAA/U,EAAAiZ,EAAA0b,oBAAA5f,EAAA/U,IAAA0nB,SAAA3S,EAAA/U,EAAAwG,OACAq7C,EAAA7hD,EAAAsmC,GAEAtmC,EAAA,EAAiBA,EAAAw9C,EAAAzsC,OAAA7J,SAAuBlH,EACxCw9C,EAAAzsC,OAAA/Q,GAAAiZ,EAAAqtB,EAEAvxB,GAAA/U,EAAAiZ,EAAAzS,KAAAlE,OAAAyS,EAAA/U,IAAA+Q,QACA/Q,EAAAiZ,EAAAqtB,GAEAA,QAGAka,GAAAvnC,EAAAK,KAIA,QAAAwoC,GAAAvxB,EAAAwxB,EAAAC,EAAAtB,EAAAuB,GAoBA,IAnBA,GAQAC,GAAAC,EAAAC,EAAA5xB,EARA6xB,EAAA,EACAC,EAAA,EACAC,EAAAR,EAAA76C,OAAA,EACAs7C,EAAAT,EAAA,GACAU,EAAAV,EAAAQ,GACAG,EAAAV,EAAA96C,OAAA,EACAy7C,EAAAX,EAAA,GACAY,EAAAZ,EAAAU,GAMAG,GAAAZ,EAMAI,GAAAE,GAAAD,GAAAI,GACA7tC,EAAA2tC,GACAA,EAAAT,IAAAM,GACOxtC,EAAA4tC,GACPA,EAAAV,IAAAQ,GACO3rB,GAAA4rB,EAAAG,IACPG,EAAAN,EAAAG,EAAAjC,GACA8B,EAAAT,IAAAM,GACAM,EAAAX,IAAAM,IACO1rB,GAAA6rB,EAAAG,IACPE,EAAAL,EAAAG,EAAAlC,GACA+B,EAAAV,IAAAQ,GACAK,EAAAZ,IAAAU,IACO9rB,GAAA4rB,EAAAI,IACPE,EAAAN,EAAAI,EAAAlC,GACAmC,GAAA9D,EAAA1sC,aAAAke,EAAAiyB,EAAAlpC,IAAAylC,EAAA1oB,YAAAosB,EAAAnpC,MACAkpC,EAAAT,IAAAM,GACAO,EAAAZ,IAAAU,IACO9rB,GAAA6rB,EAAAE,IACPG,EAAAL,EAAAE,EAAAjC,GACAmC,GAAA9D,EAAA1sC,aAAAke,EAAAkyB,EAAAnpC,IAAAkpC,EAAAlpC,KACAmpC,EAAAV,IAAAQ,GACAI,EAAAX,IAAAM,KAEAztC,EAAAqtC,KAAmCA,EAAAjrB,GAAA8qB,EAAAM,EAAAE,IACnCJ,EAAAptC,EAAA4tC,EAAAr+C,KACA49C,EAAAS,EAAAr+C,KACAy+C,EAAAJ,EAAAZ,EAAAM,EAAAE,GACA1tC,EAAAstC,GACA1B,EAAAkC,EAAAjC,EAAAnwB,EAAAiyB,EAAAlpC,KAAA,EAAA0oC,EAAAM,IAEAF,EAAAL,EAAAI,GACAvrB,GAAAwrB,EAAAO,IACAG,EAAAV,EAAAO,EAAAjC,GACAqB,EAAAI,OAAArtC,GACA+tC,GAAA9D,EAAA1sC,aAAAke,EAAA6xB,EAAA9oC,IAAAkpC,EAAAlpC,MAGAmnC,EAAAkC,EAAAjC,EAAAnwB,EAAAiyB,EAAAlpC,KAAA,EAAA0oC,EAAAM,IAGAK,EAAAX,IAAAM,GAGAD,GAAAE,GACA/xB,EAAA3b,EAAAmtC,EAAAU,EAAA,SAAAV,EAAAU,EAAA,GAAAppC,IACAkoC,EAAAjxB,EAAAC,EAAAwxB,EAAAM,EAAAI,EAAAhC,IACK4B,EAAAI,GACLf,EAAApxB,EAAAwxB,EAAAM,EAAAE,GAsBA,QAAAQ,GAAApgC,EAAAo/B,EAAAnrC,EAAA+rB,GACA,OAAA3iC,GAAA4W,EAAuB5W,EAAA2iC,EAAS3iC,IAAA,CAChC,GAAAI,GAAA2hD,EAAA/hD,EACA,IAAA+U,EAAA3U,IAAAw2B,GAAAjU,EAAAviB,GAA2C,MAAAJ,IAI3C,QAAA8iD,GAAAzrB,EAAApe,EAAAynC,EAAAuB,GACA,GAAA5qB,IAAApe,EAAA,CAIA,GAAAK,GAAAL,EAAAK,IAAA+d,EAAA/d,GAEA,IAAAtE,EAAAqiB,EAAA3S,oBAMA,YALA3P,EAAAkE,EAAAO,aAAAsK,UACAk/B,EAAA3rB,EAAA/d,IAAAL,EAAAynC,GAEAznC,EAAAyL,oBAAA,EASA,IAAA1P,EAAAiE,EAAAS,WACA1E,EAAAqiB,EAAA3d,WACAT,EAAA3U,MAAA+yB,EAAA/yB,MACA0Q,EAAAiE,EAAAc,WAAA/E,EAAAiE,EAAA4U,SAGA,YADA5U,EAAA0b,kBAAA0C,EAAA1C,kBAIA,IAAA30B,GACAwG,EAAAyS,EAAAzS,IACAuO,GAAAvO,IAAAuO,EAAA/U,EAAAwG,EAAAlE,OAAAyS,EAAA/U,IAAA28C,WACA38C,EAAAq3B,EAAApe,EAGA,IAAA8oC,GAAA1qB,EAAAje,SACAwoC,EAAA3oC,EAAAG,QACA,IAAArE,EAAAvO,IAAA46C,EAAAnoC,GAAA,CACA,IAAAjZ,EAAA,EAAiBA,EAAAw9C,EAAA74C,OAAAuC,SAAuBlH,EAAOw9C,EAAA74C,OAAA3E,GAAAq3B,EAAApe,EAC/ClE,GAAA/U,EAAAwG,EAAAlE,OAAAyS,EAAA/U,IAAA2E,SAAwD3E,EAAAq3B,EAAApe,GAExDpE,EAAAoE,EAAAI,MACAtE,EAAAgtC,IAAAhtC,EAAA6sC,GACAG,IAAAH,GAA2BE,EAAAxoC,EAAAyoC,EAAAH,EAAAlB,EAAAuB,GACpBltC,EAAA6sC,IACP7sC,EAAAsiB,EAAAhe,OAAmC0lC,EAAAzoB,eAAAhd,EAAA,IACnCkoC,EAAAloC,EAAA,KAAAsoC,EAAA,EAAAA,EAAA16C,OAAA,EAAAw5C,IACO3rC,EAAAgtC,GACPJ,EAAAroC,EAAAyoC,EAAA,EAAAA,EAAA76C,OAAA,GACO6N,EAAAsiB,EAAAhe,OACP0lC,EAAAzoB,eAAAhd,EAAA,IAEK+d,EAAAhe,OAAAJ,EAAAI,MACL0lC,EAAAzoB,eAAAhd,EAAAL,EAAAI,MAEAtE,EAAAvO,IACAuO,EAAA/U,EAAAwG,EAAAlE,OAAAyS,EAAA/U,IAAAijD,YAA2DjjD,EAAAq3B,EAAApe,IAI3D,QAAAiqC,GAAAjqC,EAAAsP,EAAA46B,GAGA,GAAAnuC,EAAAmuC,IAAApuC,EAAAkE,EAAAtW,QACAsW,EAAAtW,OAAA6D,KAAA26C,cAAA54B,MAEA,QAAAvoB,GAAA,EAAqBA,EAAAuoB,EAAArhB,SAAkBlH,EACvCuoB,EAAAvoB,GAAAwG,KAAAlE,KAAAu6C,OAAAt0B,EAAAvoB,IAaA,QAAAgjD,GAAA1pC,EAAAL,EAAAynC,EAAArS,GACA,GAAAruC,GACAmZ,EAAAF,EAAAE,IACA3S,EAAAyS,EAAAzS,KACA4S,EAAAH,EAAAG,QAIA,IAHAi1B,KAAA7nC,KAAA4nC,IACAn1B,EAAAK,MAEAtE,EAAAiE,EAAAU,YAAA5E,EAAAkE,EAAAO,cAEA,MADAP,GAAAyL,oBAAA,GACA,CAQA,IAAA3P,EAAAvO,KACAuO,EAAA/U,EAAAwG,EAAAlE,OAAAyS,EAAA/U,IAAAuL,OAAsDvL,EAAAiZ,GAAA,GACtDlE,EAAA/U,EAAAiZ,EAAA0b,oBAGA,MADAssB,GAAAhoC,EAAAynC,IACA,CAGA,IAAA3rC,EAAAoE,GAAA,CACA,GAAApE,EAAAqE,GAEA,GAAAE,EAAA8pC,gBAIA,GAAAruC,EAAA/U,EAAAwG,IAAAuO,EAAA/U,IAAAotB,WAAArY,EAAA/U,IAAA64C,YACA,GAAA74C,IAAAsZ,EAAAu/B,UAWA,aAEW,CAIX,OAFAwK,IAAA,EACAxuB,EAAAvb,EAAA9G,WACAkhC,EAAA,EAA6BA,EAAAt6B,EAAAlS,OAAuBwsC,IAAA,CACpD,IAAA7e,IAAAmuB,EAAAnuB,EAAAzb,EAAAs6B,GAAAgN,EAAArS,GAAA,CACAgV,GAAA,CACA,OAEAxuB,IAAAwB,YAIA,IAAAgtB,GAAAxuB,EAUA,aAxCAisB,GAAA7nC,EAAAG,EAAAsnC,EA6CA,IAAA3rC,EAAAvO,GAAA,CACA,GAAA88C,IAAA,CACA,QAAAh/C,KAAAkC,GACA,IAAA+8C,EAAAj/C,GAAA,CACAg/C,GAAA,EACAvC,EAAA9nC,EAAAynC,EACA,QAGA4C,GAAA98C,EAAA,OAEA+Z,GAAA/Z,EAAA,YAGK8S,GAAA9S,OAAAyS,EAAAI,OACLC,EAAA9S,KAAAyS,EAAAI,KAEA,UAxkBA,GAAArZ,GAAAsQ,EACAktC,KAEA99C,EAAA0gD,EAAA1gD,QACAq/C,EAAAqB,EAAArB,OAEA,KAAA/+C,EAAA,EAAaA,EAAAmf,GAAAjY,SAAkBlH,EAE/B,IADAw9C,EAAAr+B,GAAAnf,OACAsQ,EAAA,EAAeA,EAAA5Q,EAAAwH,SAAoBoJ,EACnCyE,EAAArV,EAAA4Q,GAAA6O,GAAAnf,MACAw9C,EAAAr+B,GAAAnf,IAAAmF,KAAAzF,EAAA4Q,GAAA6O,GAAAnf,IA2CA,IAobAujD,GAAAxtC,EAAA,0CA6GA,iBAAAshB,EAAApe,EAAAyN,EAAAu7B,EAAA1xB,EAAAC,GACA,GAAA3b,EAAAoE,GAEA,YADAlE,EAAAsiB,IAA4BqqB,EAAArqB,GAI5B,IAAAmsB,IAAA,EACA9C,IAEA,IAAA7rC,EAAAwiB,GAEAmsB,GAAA,EACA/C,EAAAxnC,EAAAynC,EAAAnwB,EAAAC,OACK,CACL,GAAAizB,GAAA1uC,EAAAsiB,EAAA8M,SACA,KAAAsf,GAAA7sB,GAAAS,EAAApe,GAEA6pC,EAAAzrB,EAAApe,EAAAynC,EAAAuB,OACO,CACP,GAAAwB,EAAA,CAQA,GAJA,IAAApsB,EAAA8M,UAAA9M,EAAAqsB,aAAApK,MACAjiB,EAAA+B,gBAAAkgB,IACA5yB,GAAA,GAEA1R,EAAA0R,IACAs8B,EAAA3rB,EAAApe,EAAAynC,GAEA,MADAwC,GAAAjqC,EAAAynC,GAAA,GACArpB,CAaAA,GAAAgpB,EAAAhpB,GAIA,GAAAssB,GAAAtsB,EAAA/d,IACAsqC,EAAA7E,EAAA3tC,WAAAuyC,EAcA,IAXAlD,EACAxnC,EACAynC,EAIAiD,EAAA5f,SAAA,KAAA6f,EACA7E,EAAA1oB,YAAAstB,IAIA5uC,EAAAkE,EAAAtW,QAGA,IAFA,GAAA4+C,GAAAtoC,EAAAtW,OACAkhD,EAAAzC,EAAAnoC,GACAsoC,GAAA,CACA,OAAAvhD,GAAA,EAA2BA,EAAAw9C,EAAAV,QAAA51C,SAAwBlH,EACnDw9C,EAAAV,QAAA98C,GAAAuhD,EAGA,IADAA,EAAAjoC,IAAAL,EAAAK,IACAuqC,EAAA,CACA,OAAAnQ,GAAA,EAA+BA,EAAA8J,EAAAh4C,OAAA0B,SAAyBwsC,EACxD8J,EAAAh4C,OAAAkuC,GAAAjc,GAAA8pB,EAKA,IAAA1E,GAAA0E,EAAA/6C,KAAAlE,KAAAu6C,MACA,IAAAA,EAAA76B,OAEA,OAAA8hC,GAAA,EAAiCA,EAAAjH,EAAA57B,IAAA/Z,OAAyB48C,IAC1DjH,EAAA57B,IAAA6iC,SAIArtB,IAAA8qB,EAEAA,KAAA5+C,OAKAoS,EAAA6uC,GACAjC,EAAAiC,GAAAvsB,GAAA,KACStiB,EAAAsiB,EAAAle,MACTuoC,EAAArqB,IAMA,MADA6rB,GAAAjqC,EAAAynC,EAAA8C,GACAvqC,EAAAK,OAquDiCylC,WAAAr/C,YAQjC+5B,KAEA9oB,SAAAmpB,iBAAA,6BACA,GAAArT,GAAA9V,SAAA0vB,aACA5Z,MAAAs9B,QACAnc,GAAAnhB,EAAA,UAKA,IAAAu9B,KACA7rB,SAAA,SAAA1R,EAAA0gB,EAAAluB,EAAAoe,GACA,WAAApe,EAAAE,KAEAke,EAAA/d,MAAA+d,EAAA/d,IAAA2qC,UACAriC,GAAA3I,EAAA,uBACA+qC,GAAA9rB,iBAAAzR,EAAA0gB,EAAAluB,KAGAiuB,GAAAzgB,EAAA0gB,EAAAluB,EAAA1W,SAEAkkB,EAAAw9B,aAAA55C,IAAAnK,KAAAumB,EAAAzkB,QAAAulC,MACK,aAAAtuB,EAAAE,KAAA6d,GAAAvQ,EAAA3kB,SACL2kB,EAAA6Z,YAAA6G,EAAA9O,UACA8O,EAAA9O,UAAAwG,OACApY,EAAAqT,iBAAA,mBAAA4N,IACAjhB,EAAAqT,iBAAA,iBAAA6N,IAKAlhB,EAAAqT,iBAAA,SAAA6N,IAEAlO,KACAhT,EAAAs9B,QAAA,MAMA7rB,iBAAA,SAAAzR,EAAA0gB,EAAAluB,GACA,cAAAA,EAAAE,IAAA,CACA+tB,GAAAzgB,EAAA0gB,EAAAluB,EAAA1W,QAKA,IAAA2hD,GAAAz9B,EAAAw9B,UACAE,EAAA19B,EAAAw9B,aAAA55C,IAAAnK,KAAAumB,EAAAzkB,QAAAulC,GACA,IAAA4c,EAAArM,KAAA,SAAAt3C,EAAAR,GAA2C,OAAAmX,EAAA3W,EAAA0jD,EAAAlkD,MAAyC,EAGpFymB,EAAAsP,SACAoR,EAAAhyB,MAAA2iC,KAAA,SAAAzqC,GAA6C,MAAAo6B,IAAAp6B,EAAA82C,KAC7Chd,EAAAhyB,QAAAgyB,EAAAnP,UAAAyP,GAAAN,EAAAhyB,MAAAgvC,KAEAvc,GAAAnhB,EAAA,cAsFAwf,IACAx3B,KAAA,SAAAgY,EAAAxZ,EAAAgM,GACA,GAAA9D,GAAAlI,EAAAkI,KAEA8D,GAAA+uB,GAAA/uB,EACA,IAAAmrC,GAAAnrC,EAAAzS,MAAAyS,EAAAzS,KAAAy9B,WACAogB,EAAA59B,EAAA69B,mBACA,SAAA79B,EAAAmL,MAAA2yB,QAAA,GAAA99B,EAAAmL,MAAA2yB,OACApvC,IAAAivC,GACAnrC,EAAAzS,KAAAy/B,MAAA,EACApC,GAAA5qB,EAAA,WACAwN,EAAAmL,MAAA2yB,QAAAF,KAGA59B,EAAAmL,MAAA2yB,QAAApvC,EAAAkvC,EAAA,QAIA1/C,OAAA,SAAA8hB,EAAAxZ,EAAAgM,GACA,GAAA9D,GAAAlI,EAAAkI,OAIAA,IAHAlI,EAAA+qB,WAIA/e,EAAA+uB,GAAA/uB,GACAA,EAAAzS,MAAAyS,EAAAzS,KAAAy9B,YAEAhrB,EAAAzS,KAAAy/B,MAAA,EACA9wB,EACA0uB,GAAA5qB,EAAA,WACAwN,EAAAmL,MAAA2yB,QAAA99B,EAAA69B,qBAGAje,GAAAptB,EAAA,WACAwN,EAAAmL,MAAA2yB,QAAA,UAIA99B,EAAAmL,MAAA2yB,QAAApvC,EAAAsR,EAAA69B,mBAAA,SAIAE,OAAA,SACA/9B,EACA0gB,EACAluB,EACAoe,EACAK,GAEAA,IACAjR,EAAAmL,MAAA2yB,QAAA99B,EAAA69B,sBAKAG,IACAv0B,MAAA8zB,GACA/d,SAQAye,IACApkD,KAAAmV,OACAqvB,OAAArxB,QACA7B,IAAA6B,QACAkxC,KAAAlvC,OACA3T,KAAA2T,OACA2uB,WAAA3uB,OACAgxB,WAAAhxB,OACA4uB,aAAA5uB,OACAkxB,aAAAlxB,OACA6uB,iBAAA7uB,OACAixB,iBAAAjxB,OACA8uB,YAAA9uB,OACAgvB,kBAAAhvB,OACA+uB,cAAA/uB,OACAwvB,UAAA/5B,OAAAuK,OAAAhV,SAkDAmkD,IACAtkD,KAAA,aACAmc,MAAAioC,GACA5+B,UAAA,EAEA7jB,OAAA,SAAAkB,GACA,GAAAqJ,GAAAhK,KAEA4W,EAAA5W,KAAAulB,OAAAhmB,OACA,IAAAqX,IAKAA,IAAA5F,OAAA,SAAApT,GAA6C,MAAAA,GAAA+Y,KAAAuL,GAAAtkB,KAE7CgZ,EAAAlS,QAAA,CAaA,GAAAy9C,GAAAniD,KAAAmiD,KAYArc,EAAAlvB,EAAA,EAIA,IAAAmvB,GAAA/lC,KAAAC,QACA,MAAA6lC,EAKA,IAAAhgC,GAAA2/B,GAAAK,EAEA,KAAAhgC,EACA,MAAAggC,EAGA,IAAA9lC,KAAAqiD,SACA,MAAAxc,IAAAllC,EAAAmlC,EAMA,IAAAt4B,GAAA,gBAAAxN,KAAA,QACA8F,GAAAhE,IAAA,MAAAgE,EAAAhE,IACAgE,EAAAqR,UACA3J,EAAA,UACAA,EAAA1H,EAAA6Q,IACAjE,EAAA5M,EAAAhE,KACA,IAAAmR,OAAAnN,EAAAhE,KAAAY,QAAA8K,GAAA1H,EAAAhE,IAAA0L,EAAA1H,EAAAhE,IACAgE,EAAAhE,GAEA,IAAAkC,IAAA8B,EAAA9B,OAAA8B,EAAA9B,UAA8Cy9B,WAAAkE,GAAA3lC,MAC9CsiD,EAAAtiD,KAAAklB,OACA+gB,EAAAR,GAAA6c,EAQA,IAJAx8C,EAAA9B,KAAAwW,YAAA1U,EAAA9B,KAAAwW,WAAA86B,KAAA,SAAAz3C,GAA0E,eAAAA,EAAAC,SAC1EgI,EAAA9B,KAAAy/B,MAAA,GAIAwC,GACAA,EAAAjiC,OACAgiC,GAAAlgC,EAAAmgC,KACA/jB,GAAA+jB,MAEAA,EAAA9T,oBAAA8T,EAAA9T,kBAAAjN,OAAA/N,WACA,CAGA,GAAAqgB,GAAAyO,EAAAjiC,KAAAy9B,WAAAntB,KAAwDtQ,EAExD,eAAAm+C,EAOA,MALAniD,MAAAqiD,UAAA,EACAjjC,GAAAoY,EAAA,wBACAxtB,EAAAq4C,UAAA,EACAr4C,EAAA2X,iBAEAkkB,GAAAllC,EAAAmlC,EACO,eAAAqc,EAAA,CACP,GAAAjgC,GAAApc,GACA,MAAAw8C,EAEA,IAAAC,GACAxe,EAAA,WAAwCwe,IACxCnjC,IAAApb,EAAA,aAAA+/B,GACA3kB,GAAApb,EAAA,iBAAA+/B,GACA3kB,GAAAoY,EAAA,sBAAAqM,GAAgE0e,EAAA1e,KAIhE,MAAAiC,MAiBA7rB,GAAA3F,GACAqC,IAAA1D,OACAuvC,UAAAvvC,QACCivC,UAEDjoC,IAAAkoC,IAEA,IAAAM,KACAxoC,SAEAxa,OAAA,SAAAkB,GAQA,OAPAgW,GAAA3W,KAAA2W,KAAA3W,KAAAC,OAAA+D,KAAA2S,KAAA,OACA9O,EAAA5J,OAAA+E,OAAA,MACA0/C,EAAA1iD,KAAA0iD,aAAA1iD,KAAA4W,SACA+rC,EAAA3iD,KAAAulB,OAAAhmB,YACAqX,EAAA5W,KAAA4W,YACAgsC,EAAAjd,GAAA3lC,MAEAxC,EAAA,EAAmBA,EAAAmlD,EAAAj+C,OAAwBlH,IAAA,CAC3C,GAAAI,GAAA+kD,EAAAnlD,EACA,IAAAI,EAAA+Y,IACA,SAAA/Y,EAAAkE,KAAA,IAAAmR,OAAArV,EAAAkE,KAAAY,QAAA,WACAkU,EAAAjU,KAAA/E,GACAiK,EAAAjK,EAAAkE,KAAAlE,GACWA,EAAAoG,OAAApG,EAAAoG,UAAuBy9B,WAAAmhB,QASlC,GAAAF,EAAA,CAGA,OAFAG,MACAC,KACA5R,EAAA,EAAuBA,EAAAwR,EAAAh+C,OAA2BwsC,IAAA,CAClD,GAAA6R,GAAAL,EAAAxR,EACA6R,GAAA/+C,KAAAy9B,WAAAmhB,EACAG,EAAA/+C,KAAAyiC,IAAAsc,EAAAjsC,IAAAwvB,wBACAz+B,EAAAk7C,EAAAjhD,KACA+gD,EAAAlgD,KAAAogD,GAEAD,EAAAngD,KAAAogD,GAGA/iD,KAAA6iD,KAAAliD,EAAAgW,EAAA,KAAAksC,GACA7iD,KAAA8iD,UAGA,MAAAniD,GAAAgW,EAAA,KAAAC,IAGAosC,aAAA,WAEAhjD,KAAAo7C,UACAp7C,KAAAklB,OACAllB,KAAA6iD,MACA,GACA,GAEA7iD,KAAAklB,OAAAllB,KAAA6iD,MAGAI,QAAA,WACA,GAAArsC,GAAA5W,KAAA0iD,aACAF,EAAAxiD,KAAAwiD,YAAAxiD,KAAAlC,MAAA,YACA8Y,GAAAlS,QAAA1E,KAAAkjD,QAAAtsC,EAAA,GAAAE,IAAA0rC,KAMA5rC,EAAA/U,QAAAqkC,IACAtvB,EAAA/U,QAAAukC,IACAxvB,EAAA/U,QAAA0kC,IAKAvmC,KAAAmjD,QAAAh1C,SAAAi1C,KAAAC,aAEAzsC,EAAA/U,QAAA,SAAAjE,GACA,GAAAA,EAAAoG,KAAA8iC,MAAA,CACA,GAAA7iB,GAAArmB,EAAAkZ,IACAjY,EAAAolB,EAAAmL,KACAoQ,IAAAvb,EAAAu+B,GACA3jD,EAAAkoC,UAAAloC,EAAAmoC,gBAAAnoC,EAAAooC,mBAAA,GACAhjB,EAAAqT,iBAAA0I,GAAA/b,EAAAkiB,QAAA,QAAAt/B,GAAAwK,GACAA,IAAA,aAAAd,KAAAc,EAAAiyC,gBACAr/B,EAAAoT,oBAAA2I,GAAAn5B,GACAod,EAAAkiB,QAAA,KACAzG,GAAAzb,EAAAu+B,WAOAp7B,SACA87B,QAAA,SAAAj/B,EAAAu+B,GAEA,IAAArF,GACA,QAGA,IAAAn9C,KAAAujD,SACA,MAAAvjD,MAAAujD,QAOA,IAAAl2B,GAAApJ,EAAAwyB,WACAxyB,GAAA0T,oBACA1T,EAAA0T,mBAAA91B,QAAA,SAAA41B,GAAsDwH,GAAA5R,EAAAoK,KAEtDqH,GAAAzR,EAAAm1B,GACAn1B,EAAA+B,MAAA2yB,QAAA,OACA/hD,KAAAmkB,IAAA7V,YAAA+e,EACA,IAAA7Q,GAAAqjB,GAAAxS,EAEA,OADArtB,MAAAmkB,IAAAza,YAAA2jB,GACArtB,KAAAujD,SAAA/mC,EAAAwkB,gBAiCAwiB,IACApB,cACAK,mBAMA3+C,IAAAC,OAAA4mB,eACA7mB,GAAAC,OAAAgrB,iBACAjrB,GAAAC,OAAAszC,kBACAvzC,GAAAC,OAAA+qB,mBACAhrB,GAAAC,OAAAgvB,oBAGAze,EAAAxQ,GAAAtE,QAAAgb,WAAAynC,IACA3tC,EAAAxQ,GAAAtE,QAAAywB,WAAAuzB,IAGA1/C,GAAApF,UAAA08C,UAAAn+B,GAAA0gC,GAAAhvC,EAGA7K,GAAApF,UAAA07C,OAAA,SACAn2B,EACAC,GAGA,MADAD,MAAAhH,GAAAkW,GAAAlP,OAAA3R,GACA0R,GAAAhkB,KAAAikB,EAAAC,IAKAjH,IACA+E,WAAA,WACAje,GAAA4G,UACAA,IACAA,GAAAzJ,KAAA,OAAA4C,KAuBG,EAKH,IAsIA2/C,IAtIAnc,GAAA,wBACAoc,GAAA,yBAEArc,GAAA1zB,EAAA,SAAAwzB,GACA,GAAAwc,GAAAxc,EAAA,GAAAhI,QAAAukB,GAAA,QACAE,EAAAzc,EAAA,GAAAhI,QAAAukB,GAAA,OACA,WAAA9Z,QAAA+Z,EAAA,gBAAAC,EAAA,OA4EAC,IACAjT,YAAA,eACAhJ,iBACAE,YAyCAgc,IACAlT,YAAA,eACAhJ,cAAAG,GACAD,QAAAG,IAOA8b,IACAC,OAAA,SAAAvb,GAGA,MAFAgb,QAAAt1C,SAAAC,cAAA,OACAq1C,GAAApN,UAAA5N,EACAgb,GAAA1vB,cAMAoV,GAAA51B,EACA,6FAMA+1B,GAAA/1B,EACA,2DAKA03B,GAAA13B,EACA,mSAmBAw3B,GAAA,4EAGAkZ,GAAA,wBACAC,GAAA,OAAAD,GAAA,QAAAA,GAAA,IACArZ,GAAA,GAAAhB,QAAA,KAAAsa,IACApZ,GAAA,aACAhB,GAAA,GAAAF,QAAA,QAAAsa,GAAA,UACA1Z,GAAA,qBAEAN,GAAA,SACAG,GAAA,QAEAc,IAAA,CACA,KAAAhM,QAAA,kBAAAxhC,EAAAuT,GACAi6B,GAAA,KAAAj6B,GAIA,IAoSA+6B,IACA9E,GACAkF,GACAC,GACAN,GACAF,GACAK,GACAC,GAovBAsE,GACAG,GA+/BAuF,GA/hEA7M,GAAAh2B,EAAA,4BACAo2B,MAEApB,IACA4b,OAAO,IACPC,OAAO,IACPC,SAAS,IACTC,QAAQ,IACRC,QAAQ,KACRC,OAAO,MAEPlc,GAAA,wBACAD,GAAA,+BAGAoc,GAAAlxC,EAAA,mBACAw2B,GAAA,SAAApzB,EAAA8xB,GAAqD,MAAA9xB,IAAA8tC,GAAA9tC,IAAA,OAAA8xB,EAAA,IAuQrDiH,GAAA,YACAN,GAAA,YACAb,GAAA,+BACAK,GAAA,iCACAF,GAAA,WAEAkB,GAAA,SACAJ,GAAA,cACAD,GAAA,WAEAzB,GAAAn6B,EAAAowC,GAAAC,QA+lBAnU,GAAA,eACAC,GAAA,UA6GA4U,IACA3U,qBAGA4U,IACAd,GACAC,GACAY,IAmBAE,IACAl3B,SACA7W,QACA4xB,SAKAoc,IACA5b,YAAA,EACA/rC,QAAAynD,GACAnqC,WAAAoqC,GACA1Y,YACA/C,cACAxe,eACA2e,oBACAva,iBACAD,mBACA8hB,WAr1SA,SAAA1zC,GACA,MAAAA,GAAAsK,OAAA,SAAA5F,EAAAjE,GACA,MAAAiE,GAAAhB,OAAAjD,EAAAizC,qBACG9jC,KAAA,MAk1SH63C,KAQAhU,GAAAh9B,EAAAq9B,IA4HAa,GAAA,4CACAF,GAAA,+FAGArnB,IACAw6B,IAAA,GACAC,IAAA,EACA1jB,MAAA,GACA2jB,MAAA,GACAC,GAAA,GACAte,KAAA,GACA/M,MAAA,GACAsrB,KAAA,GACA55C,QAAA,OAIAknC,IACAsS,IAAA,SACAC,IAAA,MACA1jB,MAAA,QACA2jB,MAAA,IAEAC,IAAA,gBACAte,MAAA,oBACA/M,OAAA,sBACAsrB,MAAA,oBACA55C,QAAA,uBAMA0mC,GAAA,SAAAhD,GAAqC,YAAAA,EAAA,iBAErC+C,IACAoT,KAAA,4BACAC,QAAA,2BACAC,KAAArT,GAAA,0CACAsT,KAAAtT,GAAA,mBACAzxB,MAAAyxB,GAAA,oBACAuT,IAAAvT,GAAA,kBACAwT,KAAAxT,GAAA,mBACArL,KAAAqL,GAAA,6CACAnY,OAAAmY,GAAA,6CACApY,MAAAoY,GAAA,8CAoHAyT,IACAtkD,MACA8K,KAAAymC,GACAgT,MAAA/2C,GAKAmkC,GAAA,SAAAtzC,GACAQ,KAAAR,UACAQ,KAAA25B,KAAAn6B,EAAAm6B,MAAAd,GACA74B,KAAAqsC,WAAAtT,GAAAv5B,EAAAtC,QAAA,iBACA8C,KAAAo0C,WAAArb,GAAAv5B,EAAAtC,QAAA,WACA8C,KAAAwa,WAAAlG,OAAoCmxC,IAAAjmD,EAAAgb,WACpC,IAAAuU,GAAAvvB,EAAAuvB,eAAAqa,EACAppC,MAAAm1C,eAAA,SAAAlxB,GAAuC,OAAA8K,EAAA9K,EAAAtN,MACvC3W,KAAA4zC,OAAA,EACA5zC,KAAAN,oBAurBAimD,IAjQA,GAAA/b,QAAA,uMAIAhhC,MAAA,KAAAkE,KAAA,kBAGA,GAAA88B,QAAA,2BAEAhhC,MAAA,KAAAkE,KAAA,8CAiMA,SAAA84C,GACA,gBAAAf,GACA,QAAA9O,GACAtK,EACAjsC,GAEA,GAAAqmD,GAAA5nD,OAAA+E,OAAA6hD,GACAhP,KACAiQ,IAKA,IAJAD,EAAAlsB,KAAA,SAAAb,EAAAitB,IACAA,EAAAD,EAAAjQ,GAAAlzC,KAAAm2B,IAGAt5B,EAAA,CAEAA,EAAAtC,UACA2oD,EAAA3oD,SACA2nD,EAAA3nD,aAAA0D,OAAApB,EAAAtC,UAGAsC,EAAAgb,aACAqrC,EAAArrC,WAAAlG,EACArW,OAAA+E,OAAA6hD,EAAArqC,YAAA,MACAhb,EAAAgb,YAIA,QAAA1Y,KAAAtC,GACA,YAAAsC,GAAA,eAAAA,IACA+jD,EAAA/jD,GAAAtC,EAAAsC,IAKA,GAAAk0C,GAAA4P,EAAAna,EAAAoa,EAMA,OAFA7P,GAAAH,SACAG,EAAA8P,OACA9P,EAGA,OACAD,UACAiQ,mBAAAlQ,GAAAC,MAUA,SACAtK,EACAjsC,GAEA,GAAAqzC,GAAArH,GAAAC,EAAAxT,OAAAz4B,IACA,IAAAA,EAAAixC,UACAA,GAAAoC,EAAArzC,EAEA,IAAA48B,GAAAwW,GAAAC,EAAArzC,EACA,QACAqzC,MACApzC,OAAA28B,EAAA38B,OACAC,gBAAA08B,EAAA18B,oBAMAo8C,GAAA6J,GAAAd,IACAmB,GAAAlK,GAAAkK,mBAaA7d,KAAAlrB,IAAAi5B,IAAA,GAEA9K,KAAAnuB,IAAAi5B,IAAA,GAIA+P,GAAAtyC,EAAA,SAAAnG,GACA,GAAAyW,GAAAkP,GAAA3lB,EACA,OAAAyW,MAAAoyB,YAGA6P,GAAApiD,GAAApF,UAAA07C,MACAt2C,IAAApF,UAAA07C,OAAA,SACAn2B,EACAC,GAKA,IAHAD,KAAAkP,GAAAlP,MAGA9V,SAAAi1C,MAAAn/B,IAAA9V,SAAAg4C,gBAIA,MAAAnmD,KAGA,IAAAR,GAAAQ,KAAAwI,QAEA,KAAAhJ,EAAAC,OAAA,CACA,GAAAgsC,GAAAjsC,EAAAisC,QACA,IAAAA,EACA,mBAAAA,GACA,MAAAA,EAAAxjC,OAAA,KACAwjC,EAAAwa,GAAAxa,QASO,KAAAA,EAAA9J,SAMP,MAAA3hC,KALAyrC,KAAA4K,cAOKpyB,KACLwnB,EAAA6K,GAAAryB,GAEA,IAAAwnB,EAAA,CAMA,GAAAhhC,GAAAu7C,GAAAva,GACAtD,wBACAiD,+BACAjE,WAAA3nC,EAAA2nC,WACAsF,SAAAjtC,EAAAitC,UACOzsC,MACPP,EAAAgL,EAAAhL,OACAC,EAAA+K,EAAA/K,eACAF,GAAAC,SACAD,EAAAE,mBASA,MAAAwmD,IAAAxoD,KAAAsC,KAAAikB,EAAAC,IAiBApgB,GAAAiyC,QAAAiQ,GAEAnlD,EAAA,OTm9C6BnD,KAAKmD,EAAqB1D,EAAoB,GAAIA,EAAoB,GAAGiV,eAIhG,SAAU7U,EAAQD,EAASH,IUpqYjC,SAAAgV,GAoBA,QAAAi0C,GAAA54C,EAAA64C,GACArmD,KAAAsmD,IAAA94C,EACAxN,KAAAumD,SAAAF,EAtBA,GAAAG,OAAA,KAAAr0C,MACA,mBAAAkzC,aACAr8C,OACA+C,EAAAoF,SAAAzS,UAAAqN,KAIAzO,GAAA0kB,WAAA,WACA,UAAAokC,GAAAr6C,EAAArO,KAAAskB,WAAAwkC,EAAA16C,WAAA26C,eAEAnpD,EAAAopD,YAAA,WACA,UAAAN,GAAAr6C,EAAArO,KAAAgpD,YAAAF,EAAA16C,WAAA66C,gBAEArpD,EAAAmpD,aACAnpD,EAAAqpD,cAAA,SAAA1kC,GACAA,GACAA,EAAA2hC,SAQAwC,EAAA1nD,UAAAkoD,MAAAR,EAAA1nD,UAAA+L,IAAA,aACA27C,EAAA1nD,UAAAklD,MAAA,WACA5jD,KAAAumD,SAAA7oD,KAAA8oD,EAAAxmD,KAAAsmD,MAIAhpD,EAAAupD,OAAA,SAAAz6C,EAAA06C,GACAL,aAAAr6C,EAAA26C,gBACA36C,EAAA46C,aAAAF,GAGAxpD,EAAA2pD,SAAA,SAAA76C,GACAq6C,aAAAr6C,EAAA26C,gBACA36C,EAAA46C,cAAA,GAGA1pD,EAAA4pD,aAAA5pD,EAAA0U,OAAA,SAAA5F,GACAq6C,aAAAr6C,EAAA26C,eAEA,IAAAD,GAAA16C,EAAA46C,YACAF,IAAA,IACA16C,EAAA26C,eAAA/kC,WAAA,WACA5V,EAAA+6C,YACA/6C,EAAA+6C,cACKL,KAKL3pD,EAAA,IAIAG,EAAA8U,aAAA,mBAAAizC,YAAAjzC,kBACA,KAAAD,KAAAC,cACApS,WAAAoS,aACA9U,EAAA8pD,eAAA,mBAAA/B,YAAA+B,oBACA,KAAAj1C,KAAAi1C,gBACApnD,WAAAonD,iBVwqY6B1pD,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,GW/tYxB,QAAA+pD,KACA,SAAAl3C,OAAA,mCAEA,QAAAm3C,KACA,SAAAn3C,OAAA,qCAsBA,QAAAo3C,GAAAC,GACA,GAAAC,IAAAzlC,WAEA,MAAAA,YAAAwlC,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAAzlC,WAEA,MADAylC,GAAAzlC,WACAA,WAAAwlC,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAn2C,GACL,IAEA,MAAAo2C,GAAA/pD,KAAA,KAAA8pD,EAAA,GACS,MAAAn2C,GAET,MAAAo2C,GAAA/pD,KAAAsC,KAAAwnD,EAAA,KAMA,QAAAE,GAAAC,GACA,GAAAC,IAAAnB,aAEA,MAAAA,cAAAkB,EAGA,KAAAC,IAAAN,IAAAM,IAAAnB,aAEA,MADAmB,GAAAnB,aACAA,aAAAkB,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAt2C,GACL,IAEA,MAAAu2C,GAAAlqD,KAAA,KAAAiqD,GACS,MAAAt2C,GAGT,MAAAu2C,GAAAlqD,KAAAsC,KAAA2nD,KAYA,QAAAE,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAArjD,OACAqhB,EAAAgiC,EAAAnnD,OAAAmlB,GAEAiiC,GAAA,EAEAjiC,EAAArhB,QACAujD,KAIA,QAAAA,KACA,IAAAH,EAAA,CAGA,GAAA7lC,GAAAslC,EAAAM,EACAC,IAAA,CAGA,KADA,GAAAj8C,GAAAka,EAAArhB,OACAmH,GAAA,CAGA,IAFAk8C,EAAAhiC,EACAA,OACAiiC,EAAAn8C,GACAk8C,GACAA,EAAAC,GAAA1hC,KAGA0hC,IAAA,EACAn8C,EAAAka,EAAArhB,OAEAqjD,EAAA,KACAD,GAAA,EACAJ,EAAAzlC,IAiBA,QAAAimC,GAAAV,EAAAW,GACAnoD,KAAAwnD,MACAxnD,KAAAmoD,QAYA,QAAAx5C,MAhKA,GAOA84C,GACAG,EARAQ,EAAA7qD,EAAAD,YAgBA,WACA,IAEAmqD,EADA,kBAAAzlC,YACAA,WAEAqlC,EAEK,MAAAh2C,GACLo2C,EAAAJ,EAEA,IAEAO,EADA,kBAAAnB,cACAA,aAEAa,EAEK,MAAAj2C,GACLu2C,EAAAN,KAuDA,IAEAS,GAFAhiC,KACA+hC,GAAA,EAEAE,GAAA,CAyCAI,GAAA9jD,SAAA,SAAAkjD,GACA,GAAAphD,GAAA,GAAA0B,OAAAgE,UAAApH,OAAA,EACA,IAAAoH,UAAApH,OAAA,EACA,OAAAlH,GAAA,EAAuBA,EAAAsO,UAAApH,OAAsBlH,IAC7C4I,EAAA5I,EAAA,GAAAsO,UAAAtO,EAGAuoB,GAAApjB,KAAA,GAAAulD,GAAAV,EAAAphD,IACA,IAAA2f,EAAArhB,QAAAojD,GACAP,EAAAU,IASAC,EAAAxpD,UAAA4nB,IAAA,WACAtmB,KAAAwnD,IAAAz7C,MAAA,KAAA/L,KAAAmoD,QAEAC,EAAAC,MAAA,UACAD,EAAAE,SAAA,EACAF,EAAArQ,OACAqQ,EAAAG,QACAH,EAAAz/C,QAAA,GACAy/C,EAAAI,YAIAJ,EAAAjnD,GAAAwN,EACAy5C,EAAAK,YAAA95C,EACAy5C,EAAAhzC,KAAAzG,EACAy5C,EAAAM,IAAA/5C,EACAy5C,EAAAO,eAAAh6C,EACAy5C,EAAAQ,mBAAAj6C,EACAy5C,EAAAlnD,KAAAyN,EACAy5C,EAAAS,gBAAAl6C,EACAy5C,EAAAU,oBAAAn6C,EAEAy5C,EAAA7lC,UAAA,SAAAzkB,GAAqC,UAErCsqD,EAAAzjB,QAAA,SAAA7mC,GACA,SAAAqS,OAAA,qCAGAi4C,EAAAW,IAAA,WAA2B,WAC3BX,EAAAY,MAAA,SAAAj0B,GACA,SAAA5kB,OAAA,mCAEAi4C,EAAAa,MAAA,WAA4B,WXivYtB,SAAU1rD,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAI+rD,GAAqD/rD,EAAoB,IACzEgsD,EAAqChsD,EAAoB,GACzDisD,EAAgDjsD,EAAoB,IACzFksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GYp6YvPrV,GAAA,GACA/C,KAAA,MACAmmB,GAAA,OACAgM,YACAs5B,KAAAL,EAAA,GAEA9hC,QAAAiiC,KACAprD,OAAAkrD,EAAA,IACA,qBAEAlrD,OAAAkrD,EAAA,IACA,mBAGAxN,QAAA,cAAA6N,GAAAxpD,IACAA,MAAAypD,gBAIAzgD,OAAAsuB,iBAAA,iBAAAtY,GACA,KAAAA,EAAAszB,UACAnkC,SAAA0vB,cAAA6rB,OACAF,EAAAG,iBAAA,QAIA5oD,MAAAqoD,EAAA,IZg7YM,SAAU7rD,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GACzD0sD,EAA8C1sD,EAAoB,IAClE2sD,EAA+C3sD,EAAoB,IACnE4sD,EAA8C5sD,EAAoB,IAClE6sD,EAA8C7sD,EAAoB,GACvFksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,Gap3YvPrV,GAAA,GACA/C,KAAA,OACAkG,KAFA,WAGA,OACAimD,kBAAA,WACAC,QAAA,GACAC,iBAAA,IAGAl6B,YACAm6B,SAAAP,EAAA,EACAQ,UAAAP,EAAA,EACAQ,SAAAP,EAAA,GAEA3iC,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,0BACA,mBACA,mBACA,UACA,gBACA,uBACA,2BAGAW,iBAXA,WAYA,GAAA53C,GAAA3S,KAAAkqD,SAAAlqD,KAAAkqD,QAAAjyB,MACAtlB,IAGA3S,KAAAwqD,QAAA73C,IAEA63C,QAlBA,WAkBA,GAAA73C,GAAA7G,UAAApH,OAAA,OAAA4N,KAAAxG,UAAA,GAAAA,UAAA,KACA9L,MAAAyqD,yBACA,IAAAP,GAAA,GAAAF,GAAA,GACAx8C,GAAAxN,KAAA0qD,eACAp+C,QAAAqG,EACAxS,OAAA,QAEAH,MAAA2qD,QAAAT,GACAlqD,KAAA4qD,cAAAV,EAAA18C,IACAxN,KAAAkqD,QAAA,GAEAlqD,KAAAs7C,UAAA,WACA,GAAAuP,GAAA18C,SAAA28C,eAAA,QACAZ,EAAA18C,GADA,SAGAq9C,IACAA,EAAAE,aAKAnnD,SAAAylD,KACAprD,OAAA2rD,EAAA,IACA,eACA,WACA,YACA,cACA,iBACA,aACA,aACA,YACA,qBACA,mBAGAoB,iBACA3sD,IADA,WAEA,MAAA2B,MAAAirD,YAEA/lD,IAJA,SAIAgmD,GACAlrD,KAAAmrD,iBAAAD,KAKAE,cAxBA,WAyBA,GAAAC,GAAArrD,KAAAsrD,YAAAtrD,KAAAsrD,WAAArzB,MAIA,IADA,QAAAj4B,KAAAirD,YAAA,IAAAI,EAAA3mD,OAEA,MAAA1E,MAAAurD,SAGA,KAAAF,EACA,MAAArB,GAAA,EAAAhqD,KAAAirD,YAAAjrD,KAAAwrD,aAGA,IAAAC,GAAAzrD,KAAAwrD,aAAAx6C,OACA,SAAAiB,GAAA,MACAA,GAAA3F,QAAAmE,cAAA/N,QAAA2oD,EAAA56C,gBACA,GAEA,OAAAu5C,GAAA,EAAAhqD,KAAAirD,YAAAQ,IAGAC,gBA7CA,WA8CA,MAAA1rD,MAAAorD,cAAAvjD,IAAA,SAAAoK,GAAA,MAAAA,GAAAzE,MAGAm+C,uBAjDA,WAsDA,QAAAC,GAAAC,GACA,GAAAC,GAAAnyC,EAAAoyC,SAAAF,EAWA,QAVAC,EAAAt6C,SAAA,KAEAs6C,EAAAn6C,MAAA9J,IAAA,SAAAmkD,GAAA,MACAJ,GAAAI,KAEAxkD,OACA,SAAAykD,EAAAhqD,GAAA,MAAAgqD,GAAAhqD,GACA,GAbA,cAAAjC,KAAAirD,WACA,MAAAjrD,MAAA0rD,gBAAAhnD,MAEA,IAAAiV,GAAA3Z,IAmBA,OAHAA,MAAA0rD,gBAAA7jD,IAAA,SAAAgkD,GAAA,MACAD,GAAAC,KAEArkD,OAAA,SAAAykD,EAAAhqD,GAAA,MAAAgqD,GAAAhqD,GAAA,IAGAiqD,KA3EA,WA4EA,MAAAlsD,MAAAmsD,YAAAnsD,KAAA0rD,kBAGAU,oBACA/tD,IADA,WAEA,MAAA2B,MAAAsrD,YAEApmD,IAJA,SAIAyN,GACA3S,KAAA2pD,iBAAAh3C,OAIAZ,SACAs6C,UADA,SACA/tD,GACA,WAAAA,EAAA,iBAGA4M,OACA8/C,gBADA,WAEA,GAAAsB,GACA,QAAAtsD,KAAAirD,YAAA,IAAAjrD,KAAAsrD,WAAArzB,OAAAvzB,MACA1E,MAAAusD,qBAAAD,IAEAhB,WANA,WAOA,GAAAgB,GACA,QAAAtsD,KAAAirD,YAAA,IAAAjrD,KAAAsrD,WAAArzB,OAAAvzB,MACA1E,MAAAusD,qBAAAD,KAGAzQ,QAAA,cAAA2N,GAAAxpD,IACAgJ,QAAAsuB,iBAAA,iBAAAtY,GACA,GAAAwtC,GACA,UAAAr+C,SAAA0vB,cAAAvK,QAAA7iB,eACA,aAAAtC,SAAA0vB,cAAAvK,QAAA7iB,aAEA,QAAAuO,EAAAszB,SAEA,QACAka,GACAhD,EAAA/lC,MAAAgpC,aAAA1B,OAEA,MAGA,SACAyB,GACAhD,EAAA/lC,MAAAipC,YAAA3B,cb+8YM,SAAUxtD,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GAC9EksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GcrtZvPrV,GAAA,GACA/C,KAAA,WACAkG,KAFA,WAGA,UAEAojB,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,kBACA,sBAGAhmD,SAAAylD,KACAprD,OAAA2rD,EAAA,IACA,eACA,mBAEA+C,sBACAtuD,IADA,WAEA,MAAA2B,MAAA4sD,cAEA1nD,IAJA,SAIAyN,GACA3S,KAAA6sD,gBAAAl6C,KAGAm6C,uBACAzuD,IADA,WAEA,MAAA2B,MAAA+sD,eAEA7nD,IAJA,SAIAyN,GACA3S,KAAAgtD,iBAAAr6C,Sd4uZM,SAAUpV,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GAC9EksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GejxZvPrV,GAAA,GACA/C,KAAA,YACAkG,KAFA,WAGA,UAEAojB,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,eACA,2BAGAhmD,SAAAylD,KACAprD,OAAA2rD,EAAA,IACA,YACA,gBACA,cAEAqD,kBANA,WAOA,cAAAjtD,KAAAktD,WAEAC,YATA,WAUA,MAAAntD,MAAA+rD,SAAA/rD,KAAAktD,WAAA5gD,afkyZM,SAAU/O,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GAC9EksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GgB/zZvPrV,GAAA,GACA/C,KAAA,WACAkG,KAFA,WAGA,UAEAojB,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,wBAEA3rD,OAAA2rD,EAAA,IACA,kBACA,yBAGAhmD,SAAAylD,KACAprD,OAAA2rD,EAAA,IACA,sBAEAwD,0BACA/uD,IADA,WAEA,MAAA2B,MAAAqtD,kBAEAnoD,IAJA,SAIAyN,GACA3S,KAAAstD,oBAAA36C,ShB40ZM,SAAUpV,EAAQD,EAASH,GAEjC,YiBzrZA,SAAAowD,KA8CA,QAAAC,GAAA1vD,GAEA2vD,EADAC,EAAA5vD,GACA,gBACA4vD,GAAA5vD,GAKA,QAAA6vD,GAAA7vD,GAKA,MAJAA,MAAA8vD,EACAC,EAAAH,EAAA5vD,IACAsf,EAAA,UAA6Btf,SAE7B4vD,EAAA5vD,GAGA,QAAAgwD,GAAAtuD,EAAAuuD,GAEA,OADA,KAAAA,IAAmCA,MACnC,gBAAAA,IAAA,OAAAA,EAAA,CAEAA,GAAyBjwD,KADzBiwD,GAGA,GAAAhqD,GAAAgqD,MACAz7C,KAAAvO,EAAAjG,OACAiG,EAAAjG,KAAA8vD,EAEA,IAAA9vD,GAAAiG,EAAAjG,IACA,iBAAAA,OACAsf,EAAA,gBAAmCtf,OAAA,KAEnC+vD,EAAAH,EAAA5vD,IACAsf,EAAA,iBAAoCtf,QAEpC,IAAA6vD,GAAA,GAAAK,GAAAxuD,EAAAuE,EAAAY,EAGA,OAFA+oD,GAAA5vD,GAAA6vD,EACAF,EAAAE,EAAA,UACAA,EAKA,QAAAM,KAEA,MAAAhwD,QAAA2D,KAAA8rD,GAAA7lD,IAAA,SAAA/J,GAAuD,MAAA4vD,GAAA5vD,KASvD,QAAAowD,GAAApwD,EAAAqwD,EAAAC,EAAAC,EAAAC,GAEAC,EAAAzwD,IACAsf,EAAA,qBAAwCtf,SAGxCywD,EAAAzwD,GAAAqwD,EAEAE,IACAG,EAAA1wD,GAAAuwD,EAEAJ,IAAApsD,QAAA,SAAA8rD,GACAU,EAAA,SAAAV,KAIA,IAAAc,GAAA,SAAAC,GAQA,WAPA,KAAAA,IAAoCA,EAAAf,KACpC,kBAAAe,GAAA5wD,IAGAsf,EAAA,wBAA+Ctf,SAG/C4wD,EAAA5wD,KAiBA,YAdAwU,KAAA87C,GACAnS,EAAA0S,WAAAF,EAAAL,GAGAzpD,EAAA7G,GAAA2wD,EAEAT,EAAAtvD,UAAAZ,GAAA,WAEA,OADAsI,MACA4lB,EAAA,EAA4BA,EAAAlgB,UAAApH,OAAuBsnB,IACnD5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAGA,OADAhsB,MAAA4uD,YAAA3iD,KAAAjM,KAAAlC,GACAiO,MAAA/L,KAAAsuD,EAAAloD,OAEAqoD,EAOA,QAAAI,GAAA50C,GACAgiC,EAAA0S,WAAAhqD,EAAAsV,GAEA,QAAAwzC,GAAAE,EAAAmB,GACA7wD,OAAA2D,KAAA2sD,GAAA1sD,QAAA,SAAAktD,GAEA,GAAAC,GAAAC,EAAAtB,EAAAoB,EACA,QAAAC,GAGAR,EAAAQ,IACAR,EAAAQ,GAAAF,EAAAnB,KAMA,QAAAsB,GAAAtB,EAAA7vD,GACA,kBAAAA,EACA,WAEA,IAAAoxD,GAAApxD,CACA6vD,GAAAnuD,OACA,OAAA0vD,GAxKA,GAAAxB,MACAa,KACAC,KAEA7pD,GAGApG,YAAA,EACAuvD,gBACAH,MACAwB,KAAA,KACAnoD,gBACAooD,YAAA,QACAC,UACAnB,kBACAX,0BACAsB,kBACAS,gBAAArT,EAAAqT,gBACAC,aAAAtT,EAAAsT,aACA/B,YACAe,YACAU,eACAjoD,gBACA2nD,WAAA1S,EAAA0S,YAmJA,OAtIA1S,GAAAuT,cAAA7qD,EAAA,UAAAA,GAEA1G,OAAAC,eAAAyG,EAAA,QACAtG,IAAA4vD,IAqBAhS,EAAAuT,cAAA7B,EAAA,MAAAK,GA8GArpD,EAEA,QAAAyY,GAAAgf,EAAAh2B,GACA,KAAAqpD,GAAAzsD,OAAAo5B,EAAAh2B,GArWAnI,OAAAC,eAAAZ,EAAA,cAA8CqV,OAAA,GAE9C,IAAAspC,GAAA9+C,EAAA,IAiBA0wD,EAAA,SAAAnsD,EAAAI,GACA,MAAA7D,QAAAS,UAAAC,eAAAjB,KAAAgE,EAAAI,IAEA8rD,EAAA,YAGA8B,KAKA1B,EAAA,WACA,QAAAA,GAAAxuD,EAAAuE,EAAA4rD,GACA3vD,KAAA2vD,YACA3vD,KAAA4vD,YAAA,EACA5vD,KAAA6vD,aACA7vD,KAAA8vD,MAAA/rD,EAAAjG,KACAkC,KAAA+vD,gCACAhsD,EAAAisD,iCAAA,EACAhwD,KAAAiwD,SAAAhU,EAAAiU,SAAA1wD,GACAQ,KAAAqvD,UACAc,OAAA,WAAiC,aACjCC,SAAA,WAAmC,MAAAppD,SAAAC,QAAA,OACnCopD,qBAAA,SAAA9hC,GACAmhC,EAAA/sD,KAAA4rB,GAEAvM,WAAA,WAAwC,MAAAuM,GAAA,OAAyB,IAEjE+hC,wBAAA,SAAA/hC,GACAmhC,IAAA1+C,OAAA,SAAAu/C,GAA4E,MAAAA,KAAAhiC,MAyH5E,MArHAtwB,QAAAC,eAAA8vD,EAAAtvD,UAAA,kCACAL,IAAA,WAEA,MADA2B,MAAAwwD,kBACAxwD,KAAA+vD,iCAEA7qD,IAAA,SAAAjD,GACAjC,KAAAwwD,kBACAxwD,KAAA+vD,gCAAA9tD,GAEA7D,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA8vD,EAAAtvD,UAAA,QACAL,IAAA,WAEA,MADA2B,MAAAwwD,kBACAxwD,KAAA8vD,OAEA1xD,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA8vD,EAAAtvD,UAAA,WACAL,IAAA,WAEA,MADA2B,MAAAwwD,kBACAxwD,KAAAiwD,UAEA7xD,YAAA,EACAD,cAAA,IAEA6vD,EAAAtvD,UAAA4M,OAAA,WACA,GAAAk+C,GAAAxpD,IACA,WAAAgH,SAAA,SAAAC,GACAuiD,EAAAgH,kBACAvpD,MAEA/E,KAAA,WACAsnD,EAAAmG,UAAAN,SAAA7B,UAAAhE,EAAAsG,MACA,IAAAW,KAMA,OALAxyD,QAAA2D,KAAA4nD,EAAAqG,WAAAhuD,QAAA,SAAA6uD,GACAzyD,OAAA2D,KAAA4nD,EAAAqG,UAAAa,IAAA7uD,QAAA,SAAA8uD,GACAF,EAAA9tD,KAAA6mD,EAAAqG,UAAAa,GAAAC,QAGA3pD,QAAAgE,IAAAylD,EAAA5oD,IAAA,SAAA+oD,GACA,MAAAA,GAAAvB,SAAA/jD,cAGApJ,KAAA,WACAsnD,EAAAoG,YAAA,EACApG,EAAAqG,gBAiBA7B,EAAAtvD,UAAAkwD,YAAA,SAAA9wD,EAAA+yD,GAMA,OALA,KAAAA,IAA4CA,EAAAjD,GAC5C5tD,KAAAwwD,kBACAxwD,KAAA6vD,UAAA/xD,KACAkC,KAAA6vD,UAAA/xD,QAEAkC,KAAA6vD,UAAA/xD,GAAA+yD,GAAA,CAKA,GAAAC,GAAAD,IAAAjD,EACAiD,MACAv+C,GACAs+C,EAAA5wD,KAAA2vD,UAAAN,SAAAd,UAAAzwD,GAAAkC,UAAA+wD,UAAA9kD,KAAAjM,MAAA8wD,EACA9wD,MAAA6vD,UAAA/xD,GAAA+yD,GAAAD,EAEA,MAAA5wD,MAAA6vD,UAAA/xD,GAAA+yD,IAMA7C,EAAAtvD,UAAAqyD,UAAA,SAAA92C,GACA,GAAAuvC,GAAAxpD,IAEAi8C,GAAA0S,WAAA3uD,KAAAia,GAUAA,EAAAo1C,UAAAp1C,EAAAo1C,SAAAgB,uBACAX,EAAA7tD,QAAA,SAAA0uD,GACA/G,EAAA6F,SAAAgB,qBAAAE,KAEAb,OAOA1B,EAAAtvD,UAAA8xD,gBAAA,WACAxwD,KAAA4vD,YACAxyC,EAAA,eAAkCtf,KAAAkC,KAAA8vD,SAGlC9B,IAIAA,GAAAtvD,UAAAZ,MAAAkwD,EAAAtvD,UAAAc,SACAwuD,EAAAtvD,UAAA4M,QACA6R,QAAA6zC,IAAA,KA0LA,IAAAnb,IACAob,SAAA,iFAEAC,eAAA,6BACAC,gBAAA,8CACAC,cAAA,+CACAC,oBAAA,sDACAC,mBAAA,0LAIAC,uBAAA,2EAGA9B,EAAA,GAAAxT,GAAAsT,aAAA,iBAAA1Z,GAiBA2b,EAAAjE,GAEAjwD,GAAAk0D,WACAl0D,EAAAiC,QAAAiyD,GjBw3ZM,SAAUj0D,EAAQD,EAASH,GAEjC,YkBr3ZA,SAAA+yD,GAAAv9C,GACA,MAAAg8C,OAAAr8C,GAAAK,GAcA,QAAAg8C,GAAAz4C,EAAAtJ,GACA,KAAAA,YAAA3O,SACA,MAAA2O,EAEA,QAAAA,EAAA6iB,aACA,IAAAgiC,MAGA,GAAAC,GAAA9kD,CACA,WAAA6kD,MAAAC,EAAAC,UACA,KAAA1zD,YACAqU,KAAA4D,IACAA,KAEA,MACA,KAAApO,OAEAoO,IACA,MACA,SAEA,MAAAtJ,GAEA,OAAA8O,KAAA9O,GACAA,EAAAjO,eAAA+c,KAGAxF,EAAAwF,GAAAizC,EAAAz4C,EAAAwF,GAAA9O,EAAA8O,IAEA,OAAAxF,GAGA,QAAAs5C,GAAA9tD,EAAAga,EAAA/I,GACAjR,EAAAga,GAAA/I,EA0HA,QAAAi/C,GAAAC,GACA,GAAAjpC,GAAAkpC,CAEA,OADAA,GAAAD,EACAjpC,EAgGA,QAAAmpC,GAAAjgD,GACA,MAAA5E,MAAAs+B,MAAA15B,GAOA,QAAA3E,GAAAnJ,GACA,MAAAkJ,MAAAC,UAAAnJ,GA4nBA,QAAAsrD,GAAA0C,EAAAC,GACA,GAAAprC,GAAA,GAAAqrC,IAAAF,EAAAC,EACA,OAAAprC,GAAAvlB,UAAA2K,KAAA4a,GAyKA,QAAAsrC,GAAAxwD,EAAAywD,GACA,kBAEA,OADAhsD,MACA4lB,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEAhlB,SAAAC,SAAA,GACA/E,KAAA,WACAP,EAAAoK,UAAA,GAAA3F,KAEAc,MAAA,SAAAkW,GACAg1C,GACAA,EAAAh1C,MAQA,QAAAi1C,GAAA3wD,EAAA0lB,GACA,mBAAA1lB,IAAA,OAAAA,EACA,QAEA,QAAAsqB,GAAA,EAAAsmC,EAAAlrC,EAAyC4E,EAAAsmC,EAAA5tD,OAAuBsnB,IAAA,CAChE,GAAAysB,GAAA6Z,EAAAtmC,EACA,IAAAysB,IAAA/2C,IAAA,kBAAAA,GAAA+2C,GACA,SAGA,SAEA,QAAA9pC,MAuDA,QAAA4jD,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,EACA,QAAAF,GACA,OACAE,EAAAD,EAAA,eACA,MACA,QACAC,EAAAD,EAAA,iBACA,MACA,QACAC,EAAAD,EAAA,eACA,MACA,QACAC,EAAAD,EAAA,iBACA,MACA,SACA,SAAAviD,OAAA,mEAEA,GAAAiN,GAAAo1C,EAAA,WAEA,OADAp1C,IAAAu1C,EAAA,aASA,QAAAC,GAAAJ,EAAAC,EAAA9tD,EAAA+tD,GACA,KAAAA,GAAA/tD,IAEA,gBAAAA,GAEA,SAAAwL,OAAAoiD,EAAAC,EAAAC,EAAAC,GACA,uCAGA,QAAAG,GAAAL,EAAAC,EAAAlkC,EAAAmkC,GACA,KAAAA,GAAAnkC,IAEA,kBAAAA,GACA,SAAApe,OAAAoiD,EAAAC,EAAAC,EAAAC,GACA,6BAEA,QAAAI,GAAAN,EAAAC,EAAA1yD,EAAA2yD,GACA,KAAAA,GAAA3yD,KAEA,gBAAAA,IAAA,OAAAA,GACA,SAAAoQ,OAAAoiD,EAAAC,EAAAC,EAAAC,GACA,mCArlDAz0D,OAAAC,eAAAZ,EAAA,cAA8CqV,OAAA,GAE9C,IAAAogD,GAAA51D,EAAA,IAoBA61D,GAIAC,aAAA,EAIAC,YAAA,EAIA9D,YAAA,qBAuBA+D,EAAA,SAAAC,EAAAC,GACA,IAAAD,EACA,KAAAE,GAAAD,IAQAC,EAAA,SAAAD,GACA,UAAAljD,OAAA,sBACA6iD,EAAA5D,YACA,6BACAiE,IAkBAE,EAAA,SAAAzhD,GAGA,OADA0hD,MAAA50D,EAAA,EACApB,EAAA,EAAmBA,EAAAsU,EAAApN,OAAgBlH,IAAA,CACnC,GAAAI,GAAAkU,EAAAyD,WAAA/X,EACAI,GAAA,IACA41D,EAAA50D,KAAAhB,EAEAA,EAAA,MACA41D,EAAA50D,KAAAhB,GAAA,MACA41D,EAAA50D,KAAA,GAAAhB,EAAA,KAEA,cAAAA,IACAJ,EAAA,EAAAsU,EAAApN,QACA,cAAAoN,EAAAyD,WAAA/X,EAAA,KAEAI,EAAA,aAAAA,IAAA,UAAAkU,EAAAyD,aAAA/X,IACAg2D,EAAA50D,KAAAhB,GAAA,OACA41D,EAAA50D,KAAAhB,GAAA,UACA41D,EAAA50D,KAAAhB,GAAA,SACA41D,EAAA50D,KAAA,GAAAhB,EAAA,MAGA41D,EAAA50D,KAAAhB,GAAA,OACA41D,EAAA50D,KAAAhB,GAAA,SACA41D,EAAA50D,KAAA,GAAAhB,EAAA,KAGA,MAAA41D,IAQAC,EAAA,SAAAC,GAGA,IADA,GAAAF,MAAA/sB,EAAA,EAAA7oC,EAAA,EACA6oC,EAAAitB,EAAAhvD,QAAA,CACA,GAAAivD,GAAAD,EAAAjtB,IACA,IAAAktB,EAAA,IACAH,EAAA51D,KAAAqV,OAAA2gD,aAAAD,OAEA,IAAAA,EAAA,KAAAA,EAAA,KACA,GAAAE,GAAAH,EAAAjtB,IACA+sB,GAAA51D,KAAAqV,OAAA2gD,cAAA,GAAAD,IAAA,KAAAE,OAEA,IAAAF,EAAA,KAAAA,EAAA,KAEA,GAAAE,GAAAH,EAAAjtB,KACAqtB,EAAAJ,EAAAjtB,KACAstB,EAAAL,EAAAjtB,KACAutB,IAAA,EAAAL,IAAA,OAAAE,IAAA,OAAAC,IAAA,KAAAC,GACA,KACAP,GAAA51D,KAAAqV,OAAA2gD,aAAA,OAAAI,GAAA,KACAR,EAAA51D,KAAAqV,OAAA2gD,aAAA,YAAAI,QAEA,CACA,GAAAH,GAAAH,EAAAjtB,KACAqtB,EAAAJ,EAAAjtB,IACA+sB,GAAA51D,KAAAqV,OAAA2gD,cAAA,GAAAD,IAAA,OAAAE,IAAA,KAAAC,IAGA,MAAAN,GAAA1mD,KAAA,KAGAmnD,GAMAC,eAAA,KAMAC,eAAA,KAMAC,sBAAA,KAMAC,sBAAA,KAMAC,kBAAA,iEAKAC,mBACA,MAAAv0D,MAAAs0D,kBAAA,OAMAE,2BACA,MAAAx0D,MAAAs0D,kBAAA,OAUAG,mBAAA,kBAAAC,MAUAC,gBAAA,SAAAC,EAAAC,GACA,IAAA/sD,MAAAC,QAAA6sD,GACA,KAAAzkD,OAAA,gDAEAnQ,MAAA80D,OAKA,QAJAC,GAAAF,EACA70D,KAAAo0D,sBACAp0D,KAAAk0D,eACAc,KACAx3D,EAAA,EAAuBA,EAAAo3D,EAAAlwD,OAAkBlH,GAAA,GACzC,GAAAy3D,GAAAL,EAAAp3D,GACA03D,EAAA13D,EAAA,EAAAo3D,EAAAlwD,OACAywD,EAAAD,EAAAN,EAAAp3D,EAAA,KACA43D,EAAA53D,EAAA,EAAAo3D,EAAAlwD,OACA2wD,EAAAD,EAAAR,EAAAp3D,EAAA,KACA83D,EAAAL,GAAA,EACAM,GAAA,EAAAN,IAAA,EAAAE,GAAA,EACAK,GAAA,GAAAL,IAAA,EAAAE,GAAA,EACAI,EAAA,GAAAJ,CACAD,KACAK,EAAA,GACAP,IACAM,EAAA,KAGAR,EAAAryD,KAAAoyD,EAAAO,GAAAP,EAAAQ,GAAAR,EAAAS,GAAAT,EAAAU,IAEA,MAAAT,GAAAloD,KAAA,KAUA4oD,aAAA,SAAAd,EAAAC,GAGA,MAAA70D,MAAAy0D,qBAAAI,EACAroD,KAAAooD,GAEA50D,KAAA20D,gBAAApB,EAAAqB,GAAAC,IAUAc,aAAA,SAAAf,EAAAC,GAGA,MAAA70D,MAAAy0D,qBAAAI,EACAH,KAAAE,GAEAnB,EAAAzzD,KAAA41D,wBAAAhB,EAAAC,KAiBAe,wBAAA,SAAAhB,EAAAC,GACA70D,KAAA80D,OAKA,QAJAe,GAAAhB,EACA70D,KAAAq0D,sBACAr0D,KAAAm0D,eACAa,KACAx3D,EAAA,EAAuBA,EAAAo3D,EAAAlwD,QAAkB,CACzC,GAAAuwD,GAAAY,EAAAjB,EAAA3sD,OAAAzK,MACA03D,EAAA13D,EAAAo3D,EAAAlwD,OACAywD,EAAAD,EAAAW,EAAAjB,EAAA3sD,OAAAzK,IAAA,IACAA,CACA,IAAA43D,GAAA53D,EAAAo3D,EAAAlwD,OACA2wD,EAAAD,EAAAS,EAAAjB,EAAA3sD,OAAAzK,IAAA,KACAA,CACA,IAAAs4D,GAAAt4D,EAAAo3D,EAAAlwD,OACAqxD,EAAAD,EAAAD,EAAAjB,EAAA3sD,OAAAzK,IAAA,EAEA,MADAA,EACA,MAAAy3D,GAAA,MAAAE,GAAA,MAAAE,GAAA,MAAAU,EACA,KAAA5lD,QAEA,IAAAmlD,GAAAL,GAAA,EAAAE,GAAA,CAEA,IADAH,EAAAryD,KAAA2yD,GACA,IAAAD,EAAA,CACA,GAAAE,GAAAJ,GAAA,MAAAE,GAAA,CAEA,IADAL,EAAAryD,KAAA4yD,GACA,IAAAQ,EAAA,CACA,GAAAP,GAAAH,GAAA,MAAAU,CACAf,GAAAryD,KAAA6yD,KAIA,MAAAR,IAOAF,MAAA,WACA,IAAA90D,KAAAk0D,eAAA,CACAl0D,KAAAk0D,kBACAl0D,KAAAm0D,kBACAn0D,KAAAo0D,yBACAp0D,KAAAq0D,wBAEA,QAAA72D,GAAA,EAA2BA,EAAAwC,KAAAu0D,aAAA7vD,OAA8BlH,IACzDwC,KAAAk0D,eAAA12D,GAAAwC,KAAAu0D,aAAAtsD,OAAAzK,GACAwC,KAAAm0D,eAAAn0D,KAAAk0D,eAAA12D,MACAwC,KAAAo0D,sBAAA52D,GAAAwC,KAAAw0D,qBAAAvsD,OAAAzK,GACAwC,KAAAq0D,sBAAAr0D,KAAAo0D,sBAAA52D,MAEAA,GAAAwC,KAAAs0D,kBAAA5vD,SACA1E,KAAAm0D,eAAAn0D,KAAAw0D,qBAAAvsD,OAAAzK,MACAwC,KAAAq0D,sBAAAr0D,KAAAu0D,aAAAtsD,OAAAzK,UAWAw4D,EAAA,SAAAlkD,GACA,GAAAmkD,GAAA1C,EAAAzhD,EACA,OAAAmiD,GAAAU,gBAAAsB,GAAA,IAWAC,EAAA,SAAApkD,GACA,IACA,MAAAmiD,GAAA0B,aAAA7jD,GAAA,GAEA,MAAAT,GACA8L,QAAAC,MAAA,wBAAA/L,GAEA,aAuFA8kD,EAAA,WACA,QAAAA,KACA,GAAA3M,GAAAxpD,IACAA,MAAAo2D,QAAA,GAAApvD,SAAA,SAAAC,EAAA2a,GACA4nC,EAAAviD,UACAuiD,EAAA5nC,WAkCA,MAxBAu0C,GAAAz3D,UAAA23D,aAAA,SAAA9nC,GACA,GAAAi7B,GAAAxpD,IACA,iBAAAod,EAAAzK,GACAyK,EACAosC,EAAA5nC,OAAAxE,GAGAosC,EAAAviD,QAAA0L,GAEA,kBAAA4b,KAGAi7B,EAAA4M,QAAAlvD,MAAA,cAGA,IAAAqnB,EAAA7pB,OACA6pB,EAAAnR,GAGAmR,EAAAnR,EAAAzK,MAKAwjD,KAsBAG,EAAA,WACA,yBAAAhmD,YACA,gBAAAA,WAAA,UACAA,UAAA,UAGA,IAWAimD,EAAA,WACA,yBAAAvtD,YACAA,OAAA,SAAAA,OAAA,UAAAA,OAAA,WACA,oDAAAuH,KAAA+lD,MAOAE,EAAA,WACA,sBAAAlmD,YAAA,gBAAAA,UAAA,SAOAmmD,EAAA,WACA,WAAAzD,EAAAC,cAAA,IAAAD,EAAAE,YAGAwD,EAAA,gBACA5E,EAAA3hD,MACA2hD,kBAOA6E,EAAA,WACA,QAAAA,GAAAv6B,EAAAi3B,GAIA,GAHArzD,KAAAo8B,OACAp8B,KAAAqzD,UAEAvB,EAEAA,EAAA9xD,KAAAuvD,EAAA7wD,UAAAsE,YAGA,KAGA,KAAAmN,OAAApE,MAAA/L,KAAA8L,WAEA,MAAA3E,GACAnH,KAAAlC,KAAA44D,EAEAz4D,OAAAC,eAAA8B,KAAA,SACA3B,IAAA,WACA,MAAA8I,GAAA2hC,UAMA,MAAA6tB,KAGAA,GAAAj4D,UAAAT,OAAA+E,OAAAmN,MAAAzR,WACAi4D,EAAAj4D,UAAA+wB,YAAAknC,EACAA,EAAAj4D,UAAAZ,KAAA44D,CACA,IAAAnH,GAAA,WACA,QAAAA,GAAAqB,EAAA7B,EAAAlZ,GACA71C,KAAA4wD,UACA5wD,KAAA+uD,cACA/uD,KAAA61C,SAEA71C,KAAA4xB,QAAA,gBAgCA,MA7BA29B,GAAA7wD,UAAAsE,OAAA,SAAAo5B,EAAAp4B,OACAsO,KAAAtO,IACAA,KAEA,IAEAqvD,GAFA5nB,EAAAzrC,KAAA61C,OAAAzZ,GACAw6B,EAAA52D,KAAA4wD,QAAA,IAAAx0B,CAGAi3B,OADA/gD,KAAAm5B,EACA,QAGAA,EAAAtM,QAAAn/B,KAAA4xB,QAAA,SAAAxV,EAAAta,GACA,GAAA6Q,GAAA3O,EAAAlC,EACA,YAAAwQ,KAAAK,IAAAtF,WAAA,IAAAvL,EAAA,OAIAuxD,EAAArzD,KAAA+uD,YAAA,KAAAsE,EAAA,KAAAuD,EAAA,IACA,IAAAzvD,GAAA,GAAAwvD,GAAAC,EAAAvD,EAGA,QAAA33C,KAAA1X,GACAA,EAAArF,eAAA+c,IAAA,MAAAA,EAAA1W,OAAA,KAGAmC,EAAAuU,GAAA1X,EAAA0X,GAEA,OAAAvU,IAEAooD,KA6DAvL,EAAA,SAAA6S,GACA,GAAAC,MAAmBC,KAAa/yD,KAAWgzD,EAAA,EAC3C,KACA,GAAAjpD,GAAA8oD,EAAAjuD,MAAA,IACAkuD,GAAA/E,EAAAmE,EAAAnoD,EAAA,SACAgpD,EAAAhF,EAAAmE,EAAAnoD,EAAA,SACAipD,EAAAjpD,EAAA,GACA/J,EAAA+yD,EAAA,YACAA,GAAA,EAEA,MAAA1lD,IACA,OACAylD,SACAC,SACA/yD,OACAgzD,cAcAC,EAAA,SAAAJ,GACA,GAAAK,GAAAC,EAAAJ,EAAA/S,EAAA6S,GAAAE,OAAAK,EAAAlkD,KAAAC,OAAA,GAAAs+C,OAAAE,UAAA,IAgBA,OAfA,gBAAAoF,KACAA,EAAAp4D,eAAA,OACAu4D,EAAAH,EAAA,IAEAA,EAAAp4D,eAAA,SACAu4D,EAAAH,EAAA,KAGAI,EADAJ,EAAAp4D,eAAA,OACAo4D,EAAA,IAIAG,EAAA,OAGAE,GAAAF,GAAAC,GAAAC,GAAAF,GAAAE,GAAAD,GAYAE,EAAA,SAAAR,GACA,GAAAE,GAAA/S,EAAA6S,GAAAE,MACA,uBAAAA,MAAAp4D,eAAA,OACAo4D,EAAA,IAEA,MAaAO,EAAA,SAAAT,GACA,GAAAU,GAAAvT,EAAA6S,GAAAE,EAAAQ,EAAAR,MACA,SAAAQ,EAAAP,aACAD,GACA,gBAAAA,IACAA,EAAAp4D,eAAA,QAYA64D,EAAA,SAAAX,GACA,GAAAE,GAAA/S,EAAA6S,GAAAE,MACA,uBAAAA,KAAA,IAAAA,EAAA,OAmBAlJ,EAAA,SAAAnsD,EAAAI,GACA,MAAA7D,QAAAS,UAAAC,eAAAjB,KAAAgE,EAAAI,IAEA21D,EAAA,SAAA/1D,EAAAI,GACA,GAAA7D,OAAAS,UAAAC,eAAAjB,KAAAgE,EAAAI,GACA,MAAAJ,GAAAI,IAUAD,EAAA,SAAAH,EAAAC,GACA,OAAAG,KAAAJ,GACAzD,OAAAS,UAAAC,eAAAjB,KAAAgE,EAAAI,IACAH,EAAAG,EAAAJ,EAAAI,KAUAwS,EAAA,SAAAojD,EAAAC,GAIA,MAHA91D,GAAA81D,EAAA,SAAA71D,EAAA6Q,GACA+kD,EAAA51D,GAAA6Q,IAEA+kD,GAOArqC,EAAA,SAAA3rB,GACA,MAAA4S,MAAoB5S,IASpBk2D,EAAA,SAAAl2D,GACA,sBAAAA,IAAA,OAAAA,GAEAm2D,EAAA,SAAAn2D,GACA,OAAAI,KAAAJ,GACA,QAEA,WAEAo2D,EAAA,SAAAp2D,GACA,GAAAq2D,GAAA,CACA,QAAAj2D,KAAAJ,GACAq2D,GAEA,OAAAA,IAEAlwD,EAAA,SAAAnG,EAAAs2D,EAAAC,GACA,GAAAnxD,KACA,QAAAhF,KAAAJ,GACAoF,EAAAhF,GAAAk2D,EAAAt6D,KAAAu6D,EAAAv2D,EAAAI,KAAAJ,EAEA,OAAAoF,IAEAoxD,EAAA,SAAAx2D,EAAAC,EAAAw2D,GACA,OAAAr2D,KAAAJ,GACA,GAAAC,EAAAjE,KAAAy6D,EAAAz2D,EAAAI,KAAAJ,GACA,MAAAI,IAKAs2D,EAAA,SAAA12D,EAAAC,EAAAw2D,GACA,GAAAr2D,GAAAo2D,EAAAx2D,EAAAC,EAAAw2D,EACA,OAAAr2D,IAAAJ,EAAAI,IAEAu2D,EAAA,SAAA32D,GACA,OAAAI,KAAAJ,GACA,MAAAI,IAGAw2D,EAAA,SAAA52D,GACA,GAAAoF,MACAtJ,EAAA,CACA,QAAAsE,KAAAJ,GACAoF,EAAAtJ,KAAAkE,EAAAI,EAEA,OAAAgF,IAUAkO,EAAA,SAAAtT,EAAAC,GACA,OAAAG,KAAAJ,GACA,GAAAzD,OAAAS,UAAAC,eAAAjB,KAAAgE,EAAAI,KACAH,EAAAG,EAAAJ,EAAAI,IACA,QAIA,WA0BAy2D,GAAA,SAAAC,GACA,GAAAr5C,KAWA,OAVAtd,GAAA22D,EAAA,SAAA12D,EAAA6Q,GACA7K,MAAAC,QAAA4K,GACAA,EAAA9Q,QAAA,SAAA42D,GACAt5C,EAAAxc,KAAAsK,mBAAAnL,GAAA,IAAAmL,mBAAAwrD,MAIAt5C,EAAAxc,KAAAsK,mBAAAnL,GAAA,IAAAmL,mBAAA0F,MAGAwM,EAAAza,OAAA,IAAAya,EAAArS,KAAA,SAQA4rD,GAAA,SAAAH,GACA,GAAA72D,KAQA,OAPA62D,GAAAp5B,QAAA,UAAAv2B,MAAA,KACA/G,QAAA,SAAAg1D,GACA,GAAAA,EAAA,CACA,GAAA/0D,GAAA+0D,EAAAjuD,MAAA,IACAlH,GAAAI,EAAA,IAAAA,EAAA,MAGAJ,GA2CAi3D,GAAA,WACA,QAAAA,KAKA34D,KAAA44D,WAAA,EAEA,MAAAD,MA0CAE,GAAA,SAAAC,GAEA,QAAAD,KACA,GAAArP,GAAAsP,EAAAp7D,KAAAsC,WAOAwpD,GAAAuP,UAMAvP,EAAAwP,QAOAxP,EAAAyP,MAMAzP,EAAA0P,QAIA1P,EAAA2P,OAAA,EAIA3P,EAAA4P,OAAA,EACA5P,EAAAoP,UAAA,GACApP,EAAA0P,KAAA,MACA,QAAA17D,GAAA,EAAuBA,EAAAgsD,EAAAoP,YAAqBp7D,EAC5CgsD,EAAA0P,KAAA17D,GAAA,CAGA,OADAgsD,GAAA6P,QACA7P,EAkLA,MA7NAuJ,GAAAuG,UAAAT,EAAAC,GA6CAD,EAAAn6D,UAAA26D,MAAA,WACAr5D,KAAA+4D,OAAA,cACA/4D,KAAA+4D,OAAA,cACA/4D,KAAA+4D,OAAA,cACA/4D,KAAA+4D,OAAA,aACA/4D,KAAA+4D,OAAA,cACA/4D,KAAAm5D,OAAA,EACAn5D,KAAAo5D,OAAA,GAQAP,EAAAn6D,UAAA66D,UAAA,SAAAC,EAAAC,GACAA,IACAA,EAAA,EAEA,IAAAC,GAAA15D,KAAAi5D,EAEA,oBAAAO,GACA,OAAAh8D,GAAA,EAA2BA,EAAA,GAAQA,IASnCk8D,EAAAl8D,GACAg8D,EAAAjkD,WAAAkkD,IAAA,GACAD,EAAAjkD,WAAAkkD,EAAA,OACAD,EAAAjkD,WAAAkkD,EAAA,MACAD,EAAAjkD,WAAAkkD,EAAA,GACAA,GAAA,MAIA,QAAAj8D,GAAA,EAA2BA,EAAA,GAAQA,IACnCk8D,EAAAl8D,GACAg8D,EAAAC,IAAA,GACAD,EAAAC,EAAA,OACAD,EAAAC,EAAA,MACAD,EAAAC,EAAA,GACAA,GAAA,CAIA,QAAAj8D,GAAA,GAAwBA,EAAA,GAAQA,IAAA,CAChC,GAAAm8D,GAAAD,EAAAl8D,EAAA,GAAAk8D,EAAAl8D,EAAA,GAAAk8D,EAAAl8D,EAAA,IAAAk8D,EAAAl8D,EAAA,GACAk8D,GAAAl8D,GAAA,YAAAm8D,GAAA,EAAAA,IAAA,IASA,OAFA3B,GAAA4B,EALA5lD,EAAAhU,KAAA+4D,OAAA,GACArkD,EAAA1U,KAAA+4D,OAAA,GACAn7D,EAAAoC,KAAA+4D,OAAA,GACAl7D,EAAAmC,KAAA+4D,OAAA,GACA1nD,EAAArR,KAAA+4D,OAAA,GAGAv7D,EAAA,EAAuBA,EAAA,GAAQA,IAAA,CAC/BA,EAAA,GACAA,EAAA,IACAw6D,EAAAn6D,EAAA6W,GAAA9W,EAAAC,GACA+7D,EAAA,aAGA5B,EAAAtjD,EAAA9W,EAAAC,EACA+7D,EAAA,YAIAp8D,EAAA,IACAw6D,EAAAtjD,EAAA9W,EAAAC,GAAA6W,EAAA9W,GACAg8D,EAAA,aAGA5B,EAAAtjD,EAAA9W,EAAAC,EACA+7D,EAAA,WAGA,IAAAD,IAAA3lD,GAAA,EAAAA,IAAA,IAAAgkD,EAAA3mD,EAAAuoD,EAAAF,EAAAl8D,GAAA,UACA6T,GAAAxT,EACAA,EAAAD,EACAA,EAAA,YAAA8W,GAAA,GAAAA,IAAA,GACAA,EAAAV,EACAA,EAAA2lD,EAEA35D,KAAA+4D,OAAA,GAAA/4D,KAAA+4D,OAAA,GAAA/kD,EAAA,WACAhU,KAAA+4D,OAAA,GAAA/4D,KAAA+4D,OAAA,GAAArkD,EAAA,WACA1U,KAAA+4D,OAAA,GAAA/4D,KAAA+4D,OAAA,GAAAn7D,EAAA,WACAoC,KAAA+4D,OAAA,GAAA/4D,KAAA+4D,OAAA,GAAAl7D,EAAA,WACAmC,KAAA+4D,OAAA,GAAA/4D,KAAA+4D,OAAA,GAAA1nD,EAAA,YAEAwnD,EAAAn6D,UAAAyD,OAAA,SAAAuxD,EAAAmG,GAEA,SAAAnG,EAAA,KAGAphD,KAAAunD,IACAA,EAAAnG,EAAAhvD,OAQA,KANA,GAAAo1D,GAAAD,EAAA75D,KAAA44D,UACAt6D,EAAA,EAEAk7D,EAAAx5D,KAAAg5D,KACAe,EAAA/5D,KAAAm5D,OAEA76D,EAAAu7D,GAAA,CAKA,MAAAE,EACA,KAAAz7D,GAAAw7D,GACA95D,KAAAu5D,UAAA7F,EAAAp1D,GACAA,GAAA0B,KAAA44D,SAGA,oBAAAlF,IACA,KAAAp1D,EAAAu7D,GAIA,GAHAL,EAAAO,GAAArG,EAAAn+C,WAAAjX,KACAy7D,IACAz7D,EACAy7D,GAAA/5D,KAAA44D,UAAA,CACA54D,KAAAu5D,UAAAC,GACAO,EAAA,CAEA,YAKA,MAAAz7D,EAAAu7D,GAIA,GAHAL,EAAAO,GAAArG,EAAAp1D,KACAy7D,IACAz7D,EACAy7D,GAAA/5D,KAAA44D,UAAA,CACA54D,KAAAu5D,UAAAC,GACAO,EAAA,CAEA,QAKA/5D,KAAAm5D,OAAAY,EACA/5D,KAAAo5D,QAAAS,IAGAhB,EAAAn6D,UAAAs7D,OAAA,WACA,GAAAA,MACAC,EAAA,EAAAj6D,KAAAo5D,MAEAp5D,MAAAm5D,OAAA,GACAn5D,KAAAmC,OAAAnC,KAAAk5D,KAAA,GAAAl5D,KAAAm5D,QAGAn5D,KAAAmC,OAAAnC,KAAAk5D,KAAAl5D,KAAA44D,WAAA54D,KAAAm5D,OAAA,IAGA,QAAA37D,GAAAwC,KAAA44D,UAAA,EAAwCp7D,GAAA,GAASA,IACjDwC,KAAAg5D,KAAAx7D,GAAA,IAAAy8D,EACAA,GAAA,GAEAj6D,MAAAu5D,UAAAv5D,KAAAg5D,KAEA,QADA16D,GAAA,EACAd,EAAA,EAAuBA,EAAA,EAAOA,IAC9B,OAAAsQ,GAAA,GAA4BA,GAAA,EAAQA,GAAA,EACpCksD,EAAA17D,GAAA0B,KAAA+4D,OAAAv7D,IAAAsQ,EAAA,MACAxP,CAGA,OAAA07D,IAEAnB,GACCF,IAkBDzG,GAAA,WAMA,QAAAA,GAAAF,EAAAC,GACA,GAAAzI,GAAAxpD,IACAA,MAAAk6D,aACAl6D,KAAAm6D,gBACAn6D,KAAAo6D,cAAA,EAEAp6D,KAAAiS,KAAAjL,QAAAC,UACAjH,KAAAq6D,WAAA,EACAr6D,KAAAiyD,gBAIAjyD,KAAAiS,KACA/P,KAAA,WACA8vD,EAAAxI,KAEAtiD,MAAA,SAAAmK,GACAm4C,EAAApsC,MAAA/L,KAyIA,MAtIA6gD,GAAAxzD,UAAA08B,KAAA,SAAAzoB,GACA3S,KAAAs6D,gBAAA,SAAAC,GACAA,EAAAn/B,KAAAzoB,MAGAu/C,EAAAxzD,UAAA0e,MAAA,SAAAA,GACApd,KAAAs6D,gBAAA,SAAAC,GACAA,EAAAn9C,WAEApd,KAAA4jD,MAAAxmC,IAEA80C,EAAAxzD,UAAA8S,SAAA,WACAxR,KAAAs6D,gBAAA,SAAAC,GACAA,EAAA/oD,aAEAxR,KAAA4jD,SAQAsO,EAAAxzD,UAAA4C,UAAA,SAAAk5D,EAAAp9C,EAAA5L,GACA,GACA+oD,GADA/Q,EAAAxpD,IAEA,QAAAsS,KAAAkoD,OACAloD,KAAA8K,OACA9K,KAAAd,EACA,SAAArB,OAAA,oBAIAoqD,GADAlI,EAAAmI,GAAA,4BACAA,GAIAp/B,KAAAo/B,EACAp9C,QACA5L,gBAGAc,KAAAioD,EAAAn/B,OACAm/B,EAAAn/B,KAAAzsB,OAEA2D,KAAAioD,EAAAn9C,QACAm9C,EAAAn9C,MAAAzO,OAEA2D,KAAAioD,EAAA/oD,WACA+oD,EAAA/oD,SAAA7C,EAEA,IAAA8rD,GAAAz6D,KAAA06D,eAAAzuD,KAAAjM,UAAAk6D,UAAAx1D,OAqBA,OAjBA1E,MAAAq6D,WACAr6D,KAAAiS,KAAA/P,KAAA,WACA,IACAsnD,EAAAmR,WACAJ,EAAAn9C,MAAAosC,EAAAmR,YAGAJ,EAAA/oD,WAGA,MAAAH,OAMArR,KAAAk6D,UAAAv3D,KAAA43D,GACAE,GAIAvI,EAAAxzD,UAAAg8D,eAAA,SAAAl9D,OACA8U,KAAAtS,KAAAk6D,eAAA5nD,KAAAtS,KAAAk6D,UAAA18D,WAGAwC,MAAAk6D,UAAA18D,GACAwC,KAAAo6D,eAAA,EACA,IAAAp6D,KAAAo6D,mBAAA9nD,KAAAtS,KAAAiyD,eACAjyD,KAAAiyD,cAAAjyD,QAGAkyD,EAAAxzD,UAAA47D,gBAAA,SAAA34D,GACA,IAAA3B,KAAAq6D,UAMA,OAAA78D,GAAA,EAAuBA,EAAAwC,KAAAk6D,UAAAx1D,OAA2BlH,IAClDwC,KAAA46D,QAAAp9D,EAAAmE,IAMAuwD,EAAAxzD,UAAAk8D,QAAA,SAAAp9D,EAAAmE,GACA,GAAA6nD,GAAAxpD,IAEAA,MAAAiS,KAAA/P,KAAA,WACA,OAAAoQ,KAAAk3C,EAAA0Q,eAAA5nD,KAAAk3C,EAAA0Q,UAAA18D,GACA,IACAmE,EAAA6nD,EAAA0Q,UAAA18D,IAEA,MAAA6T,GAIA,mBAAA8L,kBAAAC,OACAD,QAAAC,MAAA/L,OAMA6gD,EAAAxzD,UAAAklD,MAAA,SAAAz8C,GACA,GAAAqiD,GAAAxpD,IACAA,MAAAq6D,YAGAr6D,KAAAq6D,WAAA,MACA/nD,KAAAnL,IACAnH,KAAA26D,WAAAxzD,GAGAnH,KAAAiS,KAAA/P,KAAA,WACAsnD,EAAA0Q,cAAA5nD,GACAk3C,EAAAyI,kBAAA3/C,OAGA4/C,KA+DA2I,GAAA,SAAArI,EAAAsI,EAAAC,EAAAC,GACA,GAAAC,EAOA,IANAD,EAAAF,EACAG,EAAA,YAAAH,EAEAE,EAAAD,IACAE,EAAA,IAAAF,EAAA,uBAAAA,GAEAE,EAAA,CACA,GAAA79C,GAAAo1C,EACA,4BACAwI,GACA,IAAAA,EAAA,4BACA,YACAC,EACA,GACA,UAAA9qD,OAAAiN,KA2FA89C,GAAA,SAAAppD,GAEA,OADA0hD,MAAA50D,EAAA,EACApB,EAAA,EAAmBA,EAAAsU,EAAApN,OAAgBlH,IAAA,CACnC,GAAAI,GAAAkU,EAAAyD,WAAA/X,EAEA,IAAAI,GAAA,OAAAA,GAAA,OACA,GAAAu9D,GAAAv9D,EAAA,KACAJ,KACA21D,EAAA31D,EAAAsU,EAAApN,OAAA,0CAEA9G,GAAA,OAAAu9D,GAAA,KADArpD,EAAAyD,WAAA/X,GAAA,OAGAI,EAAA,IACA41D,EAAA50D,KAAAhB,EAEAA,EAAA,MACA41D,EAAA50D,KAAAhB,GAAA,MACA41D,EAAA50D,KAAA,GAAAhB,EAAA,KAEAA,EAAA,OACA41D,EAAA50D,KAAAhB,GAAA,OACA41D,EAAA50D,KAAAhB,GAAA,SACA41D,EAAA50D,KAAA,GAAAhB,EAAA,MAGA41D,EAAA50D,KAAAhB,GAAA,OACA41D,EAAA50D,KAAAhB,GAAA,UACA41D,EAAA50D,KAAAhB,GAAA,SACA41D,EAAA50D,KAAA,GAAAhB,EAAA,KAGA,MAAA41D,IAOA4H,GAAA,SAAAtpD,GAEA,OADAlT,GAAA,EACApB,EAAA,EAAmBA,EAAAsU,EAAApN,OAAgBlH,IAAA,CACnC,GAAAI,GAAAkU,EAAAyD,WAAA/X,EACAI,GAAA,IACAgB,IAEAhB,EAAA,KACAgB,GAAA,EAEAhB,GAAA,OAAAA,GAAA,OAEAgB,GAAA,EACApB,KAGAoB,GAAA,EAGA,MAAAA,GAmBAtB,GAAA61D,SACA71D,EAAAg2D,iBACAh2D,EAAA22D,SACA32D,EAAA44D,eACA54D,EAAA04D,eACA14D,EAAA01D,YACA11D,EAAA4yD,WACA5yD,EAAAqxD,aACArxD,EAAAkyD,gBACAlyD,EAAA64D,WACA74D,EAAAg5D,QACAh5D,EAAAi5D,kBACAj5D,EAAAm5D,YACAn5D,EAAAk5D,gBACAl5D,EAAAiyD,eACAjyD,EAAAq5D,gBACAr5D,EAAAs0D,eACAt0D,EAAAy0D,WACAz0D,EAAA6P,YACA7P,EAAA0mD,SACA1mD,EAAAk6D,UACAl6D,EAAA+5D,eACA/5D,EAAAg6D,gBACAh6D,EAAA25D,mBACA35D,EAAA+vB,QACA/vB,EAAAuwD,WACAvwD,EAAA0X,QACA1X,EAAAgX,SACAhX,EAAA46D,UACA56D,EAAA86D,YACA96D,EAAAuE,UACAvE,EAAA+6D,YACA/6D,EAAAw6D,WACAx6D,EAAAg7D,YACAh7D,EAAAu6D,UACAv6D,EAAAs6D,kBACAt6D,EAAAuK,MACAvK,EAAAm6D,UACAn6D,EAAAi7D,eACAj7D,EAAAo7D,qBACAp7D,EAAAu7D,QACAv7D,EAAA60D,QACA70D,EAAAgyD,kBACAhyD,EAAAi1D,cACAj1D,EAAAu9D,oBACAv9D,EAAAu1D,mBACAv1D,EAAAw1D,wBACAx1D,EAAAs1D,oBACAt1D,EAAA89D,gBACA99D,EAAAi2D,kBAAA2H,IlB6waM,SAAU39D,EAAQsD,EAAqB1D,GAE7C,YmB9+dA,SAAAm8D,GAAAz7D,EAAA6W,GAEA,QAAA2mD,KAAmBr7D,KAAAyvB,YAAA5xB,EADnBy9D,EAAAz9D,EAAA6W,GAEA7W,EAAAa,UAAA,OAAAgW,EAAAzW,OAAA+E,OAAA0R,IAAA2mD,EAAA38D,UAAAgW,EAAAhW,UAAA,GAAA28D,IAWA,QAAAE,GAAA18D,EAAAwS,GACA,GAAAsoD,KACA,QAAA/6D,KAAAC,GAAAZ,OAAAS,UAAAC,eAAAjB,KAAAmB,EAAAD,IAAAyS,EAAA3O,QAAA9D,GAAA,IACA+6D,EAAA/6D,GAAAC,EAAAD,GACA,UAAAC,GAAA,kBAAAZ,QAAAu9D,sBACA,OAAAh+D,GAAA,EAAAoB,EAAAX,OAAAu9D,sBAAA38D,GAA4DrB,EAAAoB,EAAA8F,OAAclH,IAAA6T,EAAA3O,QAAA9D,EAAApB,IAAA,IAC1Em8D,EAAA/6D,EAAApB,IAAAqB,EAAAD,EAAApB,IACA,OAAAm8D,GAGA,QAAA8B,GAAAC,EAAAxlD,EAAApU,EAAA65D,GACA,GAAA99D,GAAAD,EAAAkO,UAAApH,OAAAk3D,EAAAh+D,EAAA,EAAAsY,EAAA,OAAAylD,IAAA19D,OAAA0a,yBAAAzC,EAAApU,GAAA65D,CACA,oBAAA7yC,UAAA,kBAAAA,SAAA+yC,SAAAD,EAAA9yC,QAAA+yC,SAAAH,EAAAxlD,EAAApU,EAAA65D,OACA,QAAAn+D,GAAAk+D,EAAAh3D,OAAA,EAA4ClH,GAAA,EAAQA,KAAAK,EAAA69D,EAAAl+D,MAAAo+D,GAAAh+D,EAAA,EAAAC,EAAA+9D,GAAAh+D,EAAA,EAAAC,EAAAqY,EAAApU,EAAA85D,GAAA/9D,EAAAqY,EAAApU,KAAA85D,EACpD,OAAAh+D,GAAA,GAAAg+D,GAAA39D,OAAAC,eAAAgY,EAAApU,EAAA85D,KAGA,QAAAE,GAAAC,EAAAC,GACA,gBAAA9lD,EAAApU,GAAmCk6D,EAAA9lD,EAAApU,EAAAi6D,IAGnC,QAAAE,GAAAC,EAAAC,GACA,mBAAArzC,UAAA,kBAAAA,SAAAszC,SAAA,MAAAtzC,SAAAszC,SAAAF,EAAAC,GAGA,QAAAE,GAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAD,MAAAx1D,UAAA,SAAAC,EAAA2a,GACA,QAAA86C,GAAA/pD,GAAmC,IAAMgqD,EAAAF,EAAArhC,KAAAzoB,IAA+B,MAAAtB,GAAYuQ,EAAAvQ,IACpF,QAAAurD,GAAAjqD,GAAkC,IAAMgqD,EAAAF,EAAA,MAAA9pD,IAAmC,MAAAtB,GAAYuQ,EAAAvQ,IACvF,QAAAsrD,GAAA/zC,GAA+BA,EAAAi0C,KAAA51D,EAAA2hB,EAAAjW,OAAA,GAAA6pD,GAAA,SAAAv1D,GAAiEA,EAAA2hB,EAAAjW,SAAyBzQ,KAAAw6D,EAAAE,GACzHD,GAAAF,IAAA1wD,MAAAuwD,EAAAC,QAAAnhC,UAIA,QAAA0hC,GAAAR,EAAAlZ,GAGA,QAAA2Z,GAAAz+D,GAAsB,gBAAAuM,GAAsB,MAAA8xD,IAAAr+D,EAAAuM,KAC5C,QAAA8xD,GAAAK,GACA,GAAAhF,EAAA,SAAAiF,WAAA,kCACA,MAAAjkC,GAAA,IACA,GAAAg/B,EAAA,EAAAkF,IAAAvD,EAAAuD,EAAA,EAAAF,EAAA,YAAAA,EAAA,uBAAArD,IAAAj8D,KAAAw/D,EAAAF,EAAA,KAAAH,KAAA,MAAAlD,EAEA,QADAuD,EAAA,EAAAvD,IAAAqD,GAAA,EAAArD,EAAAhnD,QACAqqD,EAAA,IACA,cAAArD,EAAAqD,CAAuC,MACvC,QAAkC,MAAlChkC,GAAAmkC,SAA2CxqD,MAAAqqD,EAAA,GAAAH,MAAA,EAC3C,QAAA7jC,EAAAmkC,QAAkCD,EAAAF,EAAA,GAAWA,GAAA,EAAU,SACvD,QAAAA,EAAAhkC,EAAAokC,IAAA/mD,MAAyC2iB,EAAAqkC,KAAAhnD,KAAc,SACvD,SACA,GAAAsjD,EAAA3gC,EAAAqkC,OAAA1D,IAAAj1D,OAAA,GAAAi1D,IAAAj1D,OAAA,UAAAs4D,EAAA,QAAAA,EAAA,KAA6GhkC,EAAA,CAAO,UACpH,OAAAgkC,EAAA,MAAArD,GAAAqD,EAAA,GAAArD,EAAA,IAAAqD,EAAA,GAAArD,EAAA,KAAgF3gC,EAAAmkC,MAAAH,EAAA,EAAiB,OACjG,OAAAA,EAAA,IAAAhkC,EAAAmkC,MAAAxD,EAAA,IAAwD3gC,EAAAmkC,MAAAxD,EAAA,GAAgBA,EAAAqD,CAAQ,OAChF,GAAArD,GAAA3gC,EAAAmkC,MAAAxD,EAAA,IAA8C3gC,EAAAmkC,MAAAxD,EAAA,GAAgB3gC,EAAAokC,IAAAz6D,KAAAq6D,EAAgB,OAC9ErD,EAAA,IAAA3gC,EAAAokC,IAAA/mD,MACA2iB,EAAAqkC,KAAAhnD,KAAiC,UAEjC2mD,EAAA5Z,EAAA1lD,KAAA4+D,EAAAtjC,GACS,MAAA3nB,GAAY2rD,GAAA,EAAA3rD,GAAa6rD,EAAA,EAAS,QAAUlF,EAAA2B,EAAA,EACrD,KAAAqD,EAAA,QAAAA,GAAA,EAAmC,QAASrqD,MAAAqqD,EAAA,GAAAA,EAAA,UAAAH,MAAA,GAvB5C,GAAwG7E,GAAAkF,EAAAvD,EAAAzoD,EAAxG8nB,GAAamkC,MAAA,EAAAG,KAAA,WAA6B,KAAA3D,EAAA,QAAAA,GAAA,EAA0B,OAAAA,GAAA,IAAe0D,QAAAD,OACnF,OAAAlsD,IAAgBkqB,KAAA2hC,EAAA,GAAAQ,MAAAR,EAAA,GAAAS,OAAAT,EAAA,IAAqD,kBAAAl8C,UAAA3P,EAAA2P,OAAA48C,UAAA,WAAoE,MAAAz9D,QAAekR,EA0BxJ,QAAAwsD,GAAA//D,EAAAL,GACA,OAAAsB,KAAAjB,GAAAL,EAAAqB,eAAAC,KAAAtB,EAAAsB,GAAAjB,EAAAiB,IAGA,QAAA++D,GAAA3/D,GACA,GAAAL,GAAA,kBAAAkjB,SAAA7iB,EAAA6iB,OAAA48C,UAAAjgE,EAAA,CACA,OAAAG,KAAAD,KAAAM,IAEAo9B,KAAA,WAEA,MADAp9B,IAAAR,GAAAQ,EAAA0G,SAAA1G,MAAA,KACoB2U,MAAA3U,KAAAR,KAAAq/D,MAAA7+D,KAKpB,QAAA4/D,GAAA5/D,EAAAM,GACA,GAAAX,GAAA,kBAAAkjB,SAAA7iB,EAAA6iB,OAAA48C,SACA,KAAA9/D,EAAA,MAAAK,EACA,IAAA49D,GAAAvqD,EAAA7T,EAAAG,EAAAD,KAAAM,GAAA6/D,IACA,KACA,eAAAv/D,QAAA,MAAAs9D,EAAAp+D,EAAA49B,QAAAyhC,MAAAgB,EAAAl7D,KAAAi5D,EAAAjpD,OAEA,MAAAyK,GAAmB/L,GAAM+L,SACzB,QACA,IACAw+C,MAAAiB,OAAAl/D,EAAAH,EAAA,SAAAG,EAAAD,KAAAF,GAEA,QAAiB,GAAA6T,EAAA,KAAAA,GAAA+L,OAEjB,MAAAygD,GAGA,QAAAC,KACA,OAAAD,MAAArgE,EAAA,EAA4BA,EAAAsO,UAAApH,OAAsBlH,IAClDqgE,IAAAj9D,OAAAg9D,EAAA9xD,UAAAtO,IACA,OAAAqgE,GAGA,QAAAE,GAAAlzD,GACA,MAAA7K,gBAAA+9D,IAAA/9D,KAAA6K,IAAA7K,MAAA,GAAA+9D,GAAAlzD,GAGA,QAAAmzD,GAAA1B,EAAAC,EAAAE,GAIA,QAAAM,GAAAz+D,GAAsB4S,EAAA5S,KAAAd,EAAAc,GAAA,SAAAuM,GAAgC,UAAA7D,SAAA,SAAAgN,EAAAU,GAAqCupD,EAAAt7D,MAAArE,EAAAuM,EAAAmJ,EAAAU,IAAA,GAAAwpD,EAAA5/D,EAAAuM,OAC3F,QAAAqzD,GAAA5/D,EAAAuM,GAA2B,IAAM8xD,EAAAzrD,EAAA5S,GAAAuM,IAAiB,MAAAwG,GAAY8sD,EAAAF,EAAA,MAAA5sD,IAC9D,QAAAsrD,GAAAf,GAAsBA,EAAAjpD,gBAAAorD,GAAA/2D,QAAAC,QAAA20D,EAAAjpD,MAAA9H,GAAA3I,KAAAk8D,EAAAx8C,GAAAu8C,EAAAF,EAAA,MAAArC,GACtB,QAAAwC,GAAAzrD,GAA6BurD,EAAA,OAAAvrD,GAC7B,QAAAiP,GAAAjP,GAA4BurD,EAAA,QAAAvrD,GAC5B,QAAAwrD,GAAAnG,EAAAntD,GAA2BmtD,EAAAntD,GAAAozD,EAAA19C,QAAA09C,EAAAv5D,QAAAw5D,EAAAD,EAAA,MAAAA,EAAA,OAR3B,IAAAp9C,OAAAw9C,cAAA,SAAApB,WAAA,uCACA,IAAAz/D,GAAA0T,EAAAurD,EAAA1wD,MAAAuwD,EAAAC,OAAA0B,IACA,OAAAzgE,MAAiBu/D,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAAv/D,EAAAqjB,OAAAw9C,eAAA,WAAsF,MAAAr+D,OAAexC,EAStH,QAAA8gE,GAAAtgE,GAGA,QAAA++D,GAAAz+D,EAAA05D,GAAyBh6D,EAAAM,KAAAd,EAAAc,GAAA,SAAAuM,GAAgC,OAAAjM,OAAoB+T,MAAAorD,EAAA//D,EAAAM,GAAAuM,IAAAgyD,KAAA,WAAAv+D,GAAgD05D,IAAAntD,OAF7H,GAAArN,GAAAoB,CACA,OAAApB,MAAiBu/D,EAAA,QAAAA,EAAA,iBAAA1rD,GAA4C,KAAAA,KAAW0rD,EAAA,UAAAv/D,EAAAqjB,OAAA48C,UAAA,WAAqD,MAAAz9D,OAAexC,EAI5I,QAAA+gE,GAAAvgE,GACA,IAAA6iB,OAAAw9C,cAAA,SAAApB,WAAA,uCACA,IAAAt/D,GAAAK,EAAA6iB,OAAAw9C,cACA,OAAA1gE,KAAAD,KAAAM,GAAA,kBAAA2/D,KAAA3/D,KAAA6iB,OAAA48C,YAGA,QAAAe,GAAAC,EAAAnmB,GAEA,MADAr6C,QAAAC,eAAgCD,OAAAC,eAAAugE,EAAA,OAAuC9rD,MAAA2lC,IAAwBmmB,EAAAnmB,MAC/FmmB,EAGA,QAAAC,GAAAC,GACA,GAAAA,KAAApgE,WAAA,MAAAogE,EACA,IAAA/1C,KACA,UAAA+1C,EAAA,OAAA/E,KAAA+E,GAAA1gE,OAAAU,eAAAjB,KAAAihE,EAAA/E,KAAAhxC,EAAAgxC,GAAA+E,EAAA/E,GAEA,OADAhxC,GAAArpB,QAAAo/D,EACA/1C,EAGA,QAAAg2C,GAAAD,GACA,MAAAA,MAAApgE,WAAAogE,GAA4Cp/D,QAAAo/D,GnBm1d5C1gE,OAAOC,eAAe2C,EAAqB,cAAgB8R,OAAO,IACjC9R,EAA+B,UAAIy4D,EACrCn8D,EAAoBU,EAAEgD,EAAqB,WAAY,WAAa,MAAOg+D,KACzEh+D,EAA4B,OAAI06D,EAChC16D,EAAgC,WAAI46D,EACpC56D,EAA6B,QAAIi7D,EACjCj7D,EAAgC,WAAIo7D,EACpCp7D,EAA+B,UAAIw7D,EACnCx7D,EAAiC,YAAIi8D,EACrCj8D,EAAkC,aAAI68D,EACtC78D,EAA8B,SAAI88D,EAClC98D,EAA4B,OAAI+8D,EAChC/8D,EAA8B,SAAIi9D,EAClCj9D,EAA6B,QAAIk9D,EACjCl9D,EAAsC,iBAAIm9D,EAC1Cn9D,EAAsC,iBAAIy9D,EAC1Cz9D,EAAmC,cAAI09D,EACvC19D,EAA0C,qBAAI29D,EAC9C39D,EAAkC,aAAI69D,EmBrhevE79D,EAAA,gBAAA+9D;;;;;;;;;;;;;;AAgBA,GAAAtD,GAAAr9D,OAAA6gE,iBACMlnD,uBAAgB9P,QAAA,SAAAjK,EAAA6W,GAAsC7W,EAAA+Z,UAAAlD,IAC5D,SAAA7W,EAAA6W,GAAqB,OAAA9V,KAAA8V,KAAA/V,eAAAC,KAAAf,EAAAe,GAAA8V,EAAA9V,KAQrBigE,EAAA5gE,OAAAqrD,QAAA,SAAAqQ,GACA,OAAA96D,GAAArB,EAAA,EAAAc,EAAAwN,UAAApH,OAA4ClH,EAAAc,EAAOd,IAAA,CACnDqB,EAAAiN,UAAAtO,EACA,QAAAoB,KAAAC,GAAAZ,OAAAS,UAAAC,eAAAjB,KAAAmB,EAAAD,KAAA+6D,EAAA/6D,GAAAC,EAAAD,IAEA,MAAA+6D,KnB8qeM,SAAUp8D,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GAC9EksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GoBlsevPrV,GAAA,GACA/C,KAAA,QACAmc,OAAA,yBACAmN,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,2BACA,gBAIAmV,gBAPA,SAOAlT,GACA7rD,KAAAg/D,aACAh/D,KAAAi/D,0BACAC,aAAAl/D,KAAAg/D,YACAhT,YAAAH,IAGA7rD,KAAAm/D,WAAAtT,QpBsteM,SAAUtuD,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GAC9EksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GqB1uevPrV,GAAA,GACA/C,KAAA,OACAmc,OAAA,QACAmN,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,sBAEAwV,iBAJA,SAIApgD,GAEA,GAAAqgD,GAAArgD,EAAA9I,OAAAopD,UAAAt6D,MAAA,GAAAizB,MACAj4B,MAAAsrD,aAAA+T,GACAr/D,KAAA2pD,iBAAA0V,MAIAz7D,SAAAylD,KACAprD,OAAA2rD,EAAA,IACA,kBrB4veM,SAAUrsD,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GACzDoiE,EAAkDpiE,EAAoB,IACtEqiE,EAA8CriE,EAAoB,GACvFksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GsBnpevPrV,GAAA,GACA/C,KAAA,OACAmc,OAAA,UACAjW,KAHA,WAIA,OACAy7D,iBAAA,EACAC,WAAA,EACAC,oBAAA,IAGA1vC,YACA2vC,aAAAL,EAAA,GAEAn4C,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,0BACA,UACA,gBACA,eACA,mBACA,qBACA,8BAGAiW,eAXA,WAYA7/D,KAAAiS,KAAAT,UAAAxR,KAAAiS,KAAAT,SACAxR,KAAA8/D,oBACA9/D,KAAA2qD,QAAA3qD,KAAAiS,OAGA6tD,kBAjBA,WAkBA9/D,KAAAy/D,iBAAAz/D,KAAAy/D,iBAGA7tD,KArBA,WAqBA,GAAA43C,GAAAxpD,IACAA,MAAAiS,KAAAL,MAAA5R,KAAAiS,KAAAL,KACA5R,KAAAs7C,UAAA,WACAykB,SAAAC,OAAAxW,EAAA/lC,MAAAw8C,aAEAjgE,KAAA8/D,oBACA9/D,KAAA2qD,QAAA3qD,KAAAiS,OAEAiuD,WA7BA,WA8BAlgE,KAAAyqD,yBACA,IAAAP,GAAA,GAAAsV,GAAA,GACAhyD,GAAAxN,KAAA0qD,eACAp+C,QAAA,GACAnM,OAAAH,KAAAiS,KAAAzE,IAEAxN,MAAA2qD,QAAAT,GACAlqD,KAAAmgE,eAAAtU,OAAA7rD,KAAAiS,KAAAzE,GAAA4yD,UAAAlW,EAAA18C,KAEAxN,KAAAs7C,UAAA,WACA,GAAAuP,GAAA18C,SAAA28C,eAAA,QAAAZ,EAAA18C,GAAA,SACAq9C,IACAA,EAAAE,WAIAoU,WA9CA,WA+CAn2D,OAAAq3D,QAAA,0CAEArgE,KAAA6lB,MAAA,aAAA7lB,KAAAiS,KAAAzE,KAKA8yD,SAtDA,WAuDAtgE,KAAAugE,iBAAA,QACAvgE,KAAAwgE,aAAAxgE,KAAA6rD,QACA7rD,KAAA8/D,qBAEAW,QA3DA,WA4DAzgE,KAAAugE,iBAAA,OACAvgE,KAAAwgE,aAAAxgE,KAAA6rD,QACA7rD,KAAA8/D,qBAEAY,4BAhEA,SAgEAC,GACA,YAAA3gE,KAAA4gE,cAAA,CAGA,GAAAC,GAAA7gE,KAAA+rD,SAAA4U,EACA,UAAAE,EAAA1gE,OACAH,KAAA8gE,mBAAAH,GAEA3gE,KAAAi/D,0BACAC,aAAA2B,EAAA1gE,OACA6rD,YAAA2U,MAIAI,iBA9EA,WAiFA,QAAAC,GAAAnV,GACAlyC,EAAA8wC,yBACA,IAAAwW,GAAAtnD,EAAAoyC,SAAAF,GACAqV,EAAAh0D,KAAAs+B,MAAAt+B,KAAAC,UAAA8zD,GAKA,OAJAC,GAAA1zD,GAAAmM,EAAA+wC,eACAwW,EAAAvvD,MAAAuvD,EAAAvvD,MACA9J,IAAA,SAAAmkD,GAAA,MAAAgV,GAAAhV,KACAryC,EAAAgxC,QAAAuW,GACAA,EAAA1zD,GAVA,GAAAmM,GAAA3Z,IAcA,gBAAAA,KAAA4gE,cACAI,EAAAhhE,KAAAktD,WAEAltD,KAAAktD,WAEAiU,sCAlGA,WAmGA,GAAAC,GAAAphE,KAAA+gE,kBACA/gE,MAAA0gE,4BAAA1gE,KAAAktD,UAGA,IAAAmU,GAAArhE,KAAA+rD,SAAAqV,EAIA,OAHAC,GAAAlhE,OAAAH,KAAAiS,KAAAzE,GACAxN,KAAA2qD,QAAA0W,GAEAD,GAEAE,UA7GA,WA8GA,GAAAF,GAAAphE,KAAAmhE,uCACAnhE,MAAAiS,KAAAN,MAAAhP,KAAAy+D,GACAphE,KAAA8/D,qBAGAyB,aAnHA,WAoHAvhE,KAAA0/D,WAAA,EACAvxD,SAAAkC,qBAAA,WAAA0uB,UAAAz+B,IAAA,aAEAkhE,UAvHA,WAwHAxhE,KAAA0/D,WAAA,EACAvxD,SAAAkC,qBAAA,WAAA0uB,UAAAxwB,OAAA,eAGA3K,SAAAylD,KACAprD,OAAA2rD,EAAA,IACA,iBACA,WACA,cACA,aACA,iBACA,eACA,YACA,mBAEA33C,KAXA,WAYA,MAAAjS,MAAA+rD,SAAA/rD,KAAA6rD,SAEAsB,aACA9uD,IADA,WAEA,MAAA2B,MAAAiS,KAAA3F,SAEApH,IAJA,SAIAu8D,GACAzhE,KAAAiS,KAAA3F,QAAAm1D,EACAzhE,KAAA2qD,QAAA3qD,KAAAiS,QAIAyvD,mBAxBA,WAyBA,MAAA1hE,MAAA2/D,mBAAA,aAGAgC,aA5BA,WA6BA,MAAA3hE,MAAA2/D,mBAAA,eAGAzT,KAhCA,WAiCA,MAAAlsD,MAAA4hE,WAAA5hE,KAAAiS,OAGA4vD,iBApCA,WAsCA,QAAAC,GAAAjW,GAIA,SAHAlyC,EAAAoyC,SAAAF,GACAl6C,MAAA9J,IAAA,SAAAmkD,GAAA,MAAA8V,GAAA9V,KACAxkD,OAAA,SAAAykD,EAAAhqD,GAAA,MAAAgqD,GAAAhqD,GAAA,GAJA,GAAA0X,GAAA3Z,IAQA,OADAA,MAAAiS,KAAAN,MAAA9J,IAAA,SAAAgkD,GAAA,MAAAiW,GAAAjW,KACArkD,OAAA,SAAAykD,EAAAhqD,GAAA,MAAAgqD,GAAAhqD,GAAA,IAGA8/D,mBAhDA,WAiDA,MAAA/hE,MAAAgiE,gBAAAhiE,KAAA4sD,gBAGA76C,SACAs6C,UADA,SACA/tD,GACA,WAAAA,EAAA,uBtB+xeM,SAAUf,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIysD,GAAqCzsD,EAAoB,GAC9EksD,EAAWprD,OAAOqrD,QAAU,SAAUpzC,GAAU,IAAK,GAAI1Y,GAAI,EAAGA,EAAIsO,UAAUpH,OAAQlH,IAAK,CAAE,GAAIoP,GAASd,UAAUtO,EAAI,KAAK,GAAIsE,KAAO8K,GAAc3O,OAAOS,UAAUC,eAAejB,KAAKkP,EAAQ9K,KAAQoU,EAAOpU,GAAO8K,EAAO9K,IAAY,MAAOoU,GuB9jfvPrV,GAAA,GACA/C,KAAA,eACAmc,OAAA,UACAjW,KAHA,WAIA,OAEAiO,MACAzE,GAAA,EACAlB,QAAA,GACAiF,YAAA,GACAC,UAAA,EACAC,OAAA,GACAC,KAAA,GACAC,SACAC,MAAA,KAIAwV,QAAAiiC,KACAprD,OAAA2rD,EAAA,IACA,aAEAqY,OAJA,WAKAjiE,KAAAwjB,MAAAqC,MAAA,oCAGAjiB,SAAAylD,KACAprD,OAAA2rD,EAAA,IACA,WACA,gBAEAsY,SALA,WAMA,MAAAliE,MAAAiS,KAAAP,KAAAhN,OAAA,EACA1E,KAAAiS,KAAAP,KAEA,KAEAw6C,KAXA,WAYA,MAAAlsD,MAAA4hE,WAAA5hE,KAAAiS,SAGA/G,OACA+G,MACAxM,QAAA,SAAAykD,GACAlqD,KAAAmiE,kBACAniE,KAAA2qD,QAAAT,IAGA5iD,MAAA,IAGAq0C,QAnDA,WAoDA37C,KAAAiS,KAAAjS,KAAA+rD,SAAA/rD,KAAA6rD,QACA7rD,KAAAmiE,kBAAA,KvBonfM,SAAU5kE,EAAQsD,EAAqB1D,GAE7C,YwB1rfA0D,GAAA,GACA/C,KAAA,UxBqufM,SAAUP,EAAQsD,EAAqB1D,GAE7C,YACAc,QAAOC,eAAe2C,EAAqB,cAAgB8R,OAAO,GAC7C,IAAIyvD,GAAoCjlE,EAAoB,GACxDklE,EAAyCllE,EAAoB,IAC7DmlE,EAAsDnlE,EAAoB,IAC1EolE,EAAqDplE,EAAoB,IACzEqlE,EAAqDrlE,EAAoB,IACzEslE,EAAsDtlE,EAAoB,GAChBA,GAAoB,GyBzwfvGilE,GAAA,EAAItgD,UAAU,QAASwgD,EAAA,GACvBF,EAAA,EAAItgD,UAAU,OAAQygD,EAAA,GACtBH,EAAA,EAAItgD,UAAU,OAAQ0gD,EAAA,GACtBJ,EAAA,EAAItgD,UAAU,QAAS2gD,EAAA,GAGvBL,EAAA,EAAI5gB,UAAU,oBACZ7rB,SAAU,SAAU1R,GAClB87C,SAASC,OAAO/7C,MAIpB,GAAIm+C,GAAA,EAAIC,EAAA,IzB0xfF,SAAU9kE,EAAQD,EAASH,I0BlzfjC,SAAAgV,EAAAi2C,IAAA,SAAAj2C,EAAAG,GACA,YAYA,SAAAF,GAAAmc,GAEA,kBAAAA,KACAA,EAAA,GAAApd,UAAA,GAAAod,GAIA,QADAnoB,GAAA,GAAA0B,OAAAgE,UAAApH,OAAA,GACAlH,EAAA,EAAqBA,EAAA4I,EAAA1B,OAAiBlH,IACtC4I,EAAA5I,GAAAsO,UAAAtO,EAAA,EAGA,IAAAyU,IAAkBsc,WAAAnoB,OAGlB,OAFAs8D,GAAAC,GAAA1wD,EACA2wD,EAAAD,GACAA,IAGA,QAAAvb,GAAAyb,SACAH,GAAAG,GAGA,QAAAv8C,GAAArU,GACA,GAAAsc,GAAAtc,EAAAsc,SACAnoB,EAAA6L,EAAA7L,IACA,QAAAA,EAAA1B,QACA,OACA6pB,GACA,MACA,QACAA,EAAAnoB,EAAA,GACA,MACA,QACAmoB,EAAAnoB,EAAA,GAAAA,EAAA,GACA,MACA,QACAmoB,EAAAnoB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,MACA,SACAmoB,EAAAxiB,MAAAuG,EAAAlM,IAKA,QAAA08D,GAAAD,GAGA,GAAAE,EAGA/gD,WAAA8gD,EAAA,EAAAD,OACS,CACT,GAAA5wD,GAAAywD,EAAAG,EACA,IAAA5wD,EAAA,CACA8wD,GAAA,CACA,KACAz8C,EAAArU,GACiB,QACjBm1C,EAAAyb,GACAE,GAAA,KApEA,IAAA5wD,EAAAC,aAAA,CAIA,GAIAwwD,GAJAD,EAAA,EACAD,KACAK,GAAA,EACAC,EAAA7wD,EAAAhE,SAoJA80D,EAAAhlE,OAAAilE,gBAAAjlE,OAAAilE,eAAA/wD,EACA8wD,QAAAjhD,WAAAihD,EAAA9wD,EAGU,wBAAA9E,SAAA3P,KAAAyU,EAAAi2C,SArFV,WACAwa,EAAA,SAAAC,GACAza,EAAA9jD,SAAA,WAA0Cw+D,EAAAD,SAI1C,WAGA,GAAA1wD,EAAAmnC,cAAAnnC,EAAAgxD,cAAA,CACA,GAAAC,IAAA,EACAC,EAAAlxD,EAAAknC,SAMA,OALAlnC,GAAAknC,UAAA,WACA+pB,GAAA,GAEAjxD,EAAAmnC,YAAA,QACAnnC,EAAAknC,UAAAgqB,EACAD,MAIA,WAKA,GAAAE,GAAA,gBAAApwD,KAAAqwD,SAAA,IACAC,EAAA,SAAAxkD,GACAA,EAAApS,SAAAuF,GACA,gBAAA6M,GAAAhb,MACA,IAAAgb,EAAAhb,KAAAtB,QAAA4gE,IACAR,GAAA9jD,EAAAhb,KAAAgB,MAAAs+D,EAAA5+D,SAIAyN,GAAAmlB,iBACAnlB,EAAAmlB,iBAAA,UAAAksC,GAAA,GAEArxD,EAAAsxD,YAAA,YAAAD,GAGAZ,EAAA,SAAAC,GACA1wD,EAAAmnC,YAAAgqB,EAAAT,EAAA,SAmDK1wD,EAAA6mC,eA/CL,WACA,GAAAC,GAAA,GAAAD,eACAC,GAAAG,MAAAC,UAAA,SAAAr6B,GAEA8jD,EADA9jD,EAAAhb,OAIA4+D,EAAA,SAAAC,GACA5pB,EAAAE,MAAAG,YAAAupB,OA2CKG,GAAA,sBAAAA,GAAA50D,cAAA,UAvCL,WACA,GAAAq6B,GAAAu6B,EAAA7c,eACAyc,GAAA,SAAAC,GAGA,GAAAa,GAAAV,EAAA50D,cAAA,SACAs1D,GAAAC,mBAAA,WACAb,EAAAD,GACAa,EAAAC,mBAAA,KACAl7B,EAAA/+B,YAAAg6D,GACAA,EAAA,MAEAj7B,EAAAn6B,YAAAo1D,OAIA,WACAd,EAAA,SAAAC,GACA7gD,WAAA8gD,EAAA,EAAAD,OA8BAI,EAAA7wD,eACA6wD,EAAA7b,mBACC,mBAAA/B,UAAA,KAAAlzC,EAAAnS,KAAAmS,EAAAkzC,Q1Bszf4B3nD,KAAKJ,EAASH,EAAoB,GAAIA,EAAoB,KAIjF,SAAUI,EAAQsD,EAAqB1D,GAE7C,Y2Br/fA,SAAAymE,GAAA1jE,GACA/C,EAAA,I3Bq/fqB,GAAI0mE,GAA+G1mE,EAAoB,I2Bt/f5J2mE,EAAA3mE,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACAF,EAAA,EACAC,EAAA,GATA,EAWAE,EAPA,KAEA,KAUAnjE,GAAA,EAAAojE,EAAA,S3B8/fM,SAAU1mE,EAAQD,EAASH,G4BrhgBjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,O5B8hgBM,SAAU/O,EAAQD,EAASH,G6BrigBjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,03BAAi5B,M7B8igB34B,SAAUD,EAAQD,G8B/igBxBC,EAAAD,QAAA,SAAAoT,EAAAtD,GAGA,OAFAM,MACAy2D,KACA3mE,EAAA,EAAiBA,EAAA4P,EAAA1I,OAAiBlH,IAAA,CAClC,GAAA4O,GAAAgB,EAAA5P,GACAgQ,EAAApB,EAAA,GACAgD,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACAW,EAAAX,EAAA,GACAg4D,GACA52D,GAAAkD,EAAA,IAAAlT,EACA4R,MACAC,QACAtC,YAEAo3D,GAAA32D,GAGA22D,EAAA32D,GAAAO,MAAApL,KAAAyhE,GAFA12D,EAAA/K,KAAAwhE,EAAA32D,IAAmCA,KAAAO,OAAAq2D,KAKnC,MAAA12D,K9B2jgBM,SAAUnQ,EAAQsD,EAAqB1D,GAE7C,Y+BtlgBA,SAAAymE,GAAA1jE,GACA/C,EAAA,I/BslgBqB,GAAIknE,GAAgHlnE,EAAoB,I+BvlgB7JmnE,EAAAnnE,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACAM,EAAA,EACAC,EAAA,GATA,EAWAN,EAPA,KAEA,KAUAnjE,GAAA,EAAAojE,EAAA,S/B+lgBM,SAAU1mE,EAAQD,EAASH,GgCtngBjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,OhC+ngBM,SAAU/O,EAAQD,EAASH,GiCtogBjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,+8BAAs+B,MjC+ogBh+B,SAAUD,EAAQsD,EAAqB1D,GAE7C,YkCtpgBA,SAAAymE,GAAA1jE,GACA/C,EAAA,IlCspgBqB,GAAIonE,GAAoHpnE,EAAoB,IkCvpgBjKqnE,EAAArnE,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACAQ,EAAA,EACAC,EAAA,GATA,EAWAR,EAPA,kBAEA,KAUAnjE,GAAA,EAAAojE,EAAA,SlC+pgBM,SAAU1mE,EAAQD,EAASH,GmCtrgBjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,OnC+rgBM,SAAU/O,EAAQD,EAASH,GoCtsgBjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,4CAAmE,MpC+sgB7D,SAAUD,EAAQsD,EAAqB1D,GAE7C,YqCttgBA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,OAAiBrN,OAAOlS,GAAA,cAAiBuf,EAAA,SAAAA,EAAA,SAA0BvS,aAAa1c,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAA,qBAAA00B,WAAA,yBAAkGzY,OAASpgB,KAAA,YAAkBsrB,UAAW85C,QAAA58D,MAAAC,QAAAtE,EAAAkpD,sBAAAlpD,EAAAuoB,GAAAvoB,EAAAkpD,qBAAA,SAAAlpD,EAAA,sBAAsHtC,IAAKu7B,OAAA,SAAA7R,GAA0B,GAAA85C,GAAAlhE,EAAAkpD,qBAAAiY,EAAA/5C,EAAA3U,OAAA2uD,IAAAD,EAAAF,OAAoF,IAAA58D,MAAAC,QAAA48D,GAAA,CAAuB,GAAAG,GAAArhE,EAAAuoB,GAAA24C,EAAA,KAAiCC,GAAAF,QAAiBI,EAAA,IAAArhE,EAAAkpD,qBAAAgY,EAAA/jE,QAAlD,QAA2GkkE,GAAA,IAAArhE,EAAAkpD,qBAAAgY,EAAA3/D,MAAA,EAAA8/D,GAAAlkE,OAAA+jE,EAAA3/D,MAAA8/D,EAAA,SAAmFrhE,GAAAkpD,qBAAAkY,MAAgCphE,EAAA4oB,GAAA,mCAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,MAAAtpB,EAAA4oB,GAAA,8BAAAU,EAAA,SAAAtpB,EAAA4oB,GAAA,oCAAAU,EAAA,SAAyKvS,aAAa1c,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAA,sBAAA00B,WAAA,0BAAoGzY,OAASpgB,KAAA,QAAAqT,MAAA,gBAAsCiY,UAAW85C,QAAAjhE,EAAAsoB,GAAAtoB,EAAAqpD,sBAAA,iBAA2D3rD,IAAKu7B,OAAA,SAAA7R,GAA0BpnB,EAAAqpD,sBAAA,qBAA2CrpD,EAAA4oB,GAAA,KAAAU,EAAA,SAAAtpB,EAAA4oB,GAAA,gCAAAU,EAAA,SAA+EvS,aAAa1c,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAA,sBAAA00B,WAAA,0BAAoGzY,OAASpgB,KAAA,QAAAqT,MAAA,YAAkCiY,UAAW85C,QAAAjhE,EAAAsoB,GAAAtoB,EAAAqpD,sBAAA,aAAuD3rD,IAAKu7B,OAAA,SAAA7R,GAA0BpnB,EAAAqpD,sBAAA,oBACpjDptD,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,KrC2tgBM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,YsChugBA,SAAAymE,GAAA1jE,GACA/C,EAAA,ItCgugBqB,GAAI6nE,GAAqH7nE,EAAoB,IsCjugBlK8nE,EAAA9nE,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACAiB,EAAA,EACAC,EAAA,GATA,EAWAjB,EAPA,kBAEA,KAUAnjE,GAAA,EAAAojE,EAAA,StCyugBM,SAAU1mE,EAAQD,EAASH,GuChwgBjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,OvCywgBM,SAAU/O,EAAQD,EAASH,GwChxgBjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,SxCyxgBM,SAAUD,EAAQsD,EAAqB1D,GAE7C,YyChygBA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAAhhE,GAAA,kBAAAspB,EAAA,OAAAA,EAAA,KAAiDkR,aAAainC,OAAA,OAAczhE,EAAA4oB,GAAA5oB,EAAAmoB,GAAA5rB,KAAAktD,WAAA,KAAAzpD,EAAAmoB,GAAAnoB,EAAA0pD,gBAAA1pD,EAAA4oB,GAAA,KAAAU,EAAA,QAAAA,EAAA,KAA+FkR,aAAa8jB,QAAA,YAAoBt+C,EAAA4oB,GAAA,SAAA5oB,EAAAmoB,GAAA5rB,KAAA4gE,kBAAAn9D,EAAA4oB,GAAA,KAAAU,EAAA,UAAyEyF,YAAA,MAAAyL,aAA+BknC,MAAA,SAAgBhkE,IAAKikE,MAAA,SAAAv6C,GAAyBpnB,EAAA+8D,aAAA,MAAuB/8D,EAAA4hE,sBAAA,gBAAyC5hE,EAAA4oB,GAAA,qBAAA5oB,EAAA6oB,MAC3f5sB,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,KzCqygBM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,Y0C1ygBA,SAAAymE,GAAA1jE,GACA/C,EAAA,I1C0ygBqB,GAAImoE,GAAoHnoE,EAAoB,I0C3ygBjKooE,EAAApoE,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACAuB,EAAA,EACAC,EAAA,GATA,EAWAvB,EAPA,kBAEA,KAUAnjE,GAAA,EAAAojE,EAAA,S1CmzgBM,SAAU1mE,EAAQD,EAASH,G2C10gBjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,O3Cm1gBM,SAAU/O,EAAQD,EAASH,G4C11gBjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,S5Cm2gBM,SAAUD,EAAQsD,EAAqB1D,GAE7C,Y6C12gBA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,OAAAA,EAAA,SAAAtpB,EAAA4oB,GAAA,iCAAAU,EAAA,SAAiFvS,aAAa1c,KAAA,mBAAAk4B,QAAA,uBAAuDl4B,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAA,yBAAA00B,WAAA,6BAA0G8F,aAAeunC,YAAA,SAAoB9lD,OAAQpgB,KAAA,QAAcsrB,UAAWjY,MAAAlP,EAAA,0BAAuCtC,IAAKyzD,MAAA,SAAA/pC,GAAyBA,EAAA3U,OAAAunB,YAAsCh6B,EAAA2pD,yBAAAviC,EAAA3U,OAAAvD,aAAmDlP,EAAA4oB,GAAA,KAAAU,EAAA,UAA6B5rB,IAAIikE,MAAA3hE,EAAAgiE,mBAA6BhiE,EAAA4oB,GAAA,gBAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,UAAkD5rB,IAAIikE,MAAA3hE,EAAAiiE,uBAAiCjiE,EAAA4oB,GAAA,mBAC/sB3sB,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,K7C+2gBM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,Y8Cp3gBA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,OAAiBrN,OAAOlS,GAAA,UAAauf,EAAA,UAAekR,aAAa8jB,QAAA,kBAA0Bh1B,EAAA,MAAAtpB,EAAA4oB,GAAA,UAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,SAAoDvS,aAAa1c,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAA,QAAA00B,WAAA,YAAwE1tB,IAAA,eAAA+nB,YAAA,WAAA9S,OAAmDpgB,KAAA,SAAAumC,YAAA,YAAyCjb,UAAWjY,MAAAlP,EAAA,SAAsBtC,IAAKwkE,MAAA,SAAA96C,GAAyB,gBAAAA,KAAApnB,EAAA0oB,GAAAtB,EAAAynB,QAAA,WAAAznB,EAAA/oB,IAAA,SAA+F2B,EAAA8mD,iBAAA1/B,GAAf,MAAmD+pC,MAAA,SAAA/pC,GAA0BA,EAAA3U,OAAAunB,YAAsCh6B,EAAAymD,QAAAr/B,EAAA3U,OAAAvD,WAAkClP,EAAA4oB,GAAA,KAAAU,EAAA,OAAAA,EAAA,OAAkCyF,YAAA,mBAAArxB,IAAmCykE,UAAA,SAAA/6C,GAA6BpnB,EAAA0mD,iBAAA,GAA2B0b,WAAA,SAAAh7C,GAA+BpnB,EAAA0mD,iBAAA,MAA8Bp9B,EAAA,SAAcvS,aAAa1c,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAA,mBAAA00B,WAAA,uBAA8F1tB,IAAA,cAAA+nB,YAAA,WAAA9S,OAAkDpgB,KAAA,SAAAumC,YAAA,UAAuCjb,UAAWjY,MAAAlP,EAAA,oBAAiCtC,IAAKyzD,MAAA,SAAA/pC,GAAyBA,EAAA3U,OAAAunB,YAAsCh6B,EAAA2oD,mBAAAvhC,EAAA3U,OAAAvD,WAA6ClP,EAAA4oB,GAAA,KAAA5oB,EAAA,gBAAAspB,EAAA,KAA4CyF,YAAA,cAAArxB,IAA8BikE,MAAA,SAAAv6C,GAAyBpnB,EAAA2oD,mBAAA,OAA8B3oD,EAAA4oB,GAAA,OAAA5oB,EAAA6oB,SAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,QAAAA,EAAA,KAA4DsC,OAAO+D,SAAA,QAAA3vB,EAAAunD,iBAA0C7pD,IAAKikE,MAAA,SAAAv6C,GAAyBpnB,EAAAunD,gBAAA,UAA8BvnD,EAAA4oB,GAAA,SAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,KAAsCsC,OAAO+D,SAAA,WAAA3vB,EAAAunD,iBAA6C7pD,IAAKikE,MAAA,SAAAv6C,GAAyBpnB,EAAAunD,gBAAA,aAAiCvnD,EAAA4oB,GAAA,YAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,KAAyCsC,OAAO+D,SAAA,cAAA3vB,EAAAunD,iBAAgD7pD,IAAKikE,MAAA,SAAAv6C,GAAyBpnB,EAAAunD,gBAAA,gBAAoCvnD,EAAA4oB,GAAA,iBAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,QAAiDrN,OAAOwsC,KAAAzoD,EAAAyoD,QAAiBzoD,EAAA4oB,GAAA,KAAAU,EAAA,OAAwByF,YAAA,eAAwB,GAAA/uB,EAAA4oB,GAAA,KAAAU,EAAA,OAA4BrN,OAAOlS,GAAA,cAAiBuf,EAAA,OAAYrN,OAAOlS,GAAA,qBAAwBuf,EAAA,UAAeyF,YAAA,iBAAArxB,IAAiCikE,MAAA,SAAAv6C,GAAyBpnB,EAAA4hE,sBAAA,gBAAwC5hE,EAAA4oB,GAAA,4BAAA5oB,EAAA4oB,GAAA,YAAArsB,KAAAktD,UAAAngC,EAAA,UAAwFyF,YAAA,iBAAArxB,IAAiCikE,MAAA,SAAAv6C,GAAyBpnB,EAAA4hE,sBAAA,iBAAyC5hE,EAAA4oB,GAAA,6BAAA5oB,EAAA6oB,KAAA7oB,EAAA4oB,GAAA,kBAAArsB,KAAA+sD,cAAAhgC,EAAA,UAA4GyF,YAAA,iBAAArxB,IAAiCikE,MAAA,SAAAv6C,GAAyBpnB,EAAA4hE,sBAAA,gBAAwC5hE,EAAA4oB,GAAA,4BAAA5oB,EAAA6oB,OAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,OAAAA,EAAAtpB,EAAAqiE,oBAAiGnvD,IAAA,eAAgB,KAAAlT,EAAA4oB,GAAA,KAAAU,EAAA,WAAAA,EAAA,SAA8CrN,OAAOs/C,YAAA,KAAA+G,QAAAtiE,EAAAioD,mBAAkDjoD,EAAA4oB,GAAA,mBAAA5oB,EAAAunD,gBAAAj+B,EAAA,KAA4DkR,aAAa+nC,MAAA,UAAgBviE,EAAA4oB,GAAA5oB,EAAAmoB,GAAAnoB,EAAAkoD,wBAAA,IAAAloD,EAAAmoB,GAAAnoB,EAAAyoB,GAAA,aAAAzoB,EAAAkoD,yBAAA,WAAAloD,EAAA6oB,MAAA,GAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,OAAsJyF,YAAA,oBAAArxB,IAAoCikE,MAAA,SAAAv6C,GAAyBpnB,EAAA+mD,cAAgB/mD,EAAA4oB,GAAA,UACjjG3sB,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,K9Cy3gBM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIilE,GAAoCjlE,EAAoB,GACxDgsD,EAAqChsD,EAAoB,GACzD8oE,EAAwC9oE,EAAoB,GAC5D+oE,EAAoD/oE,EAAoB,IACxEgpE,EAAkDhpE,EAAoB,IACtEipE,EAA0DjpE,EAAoB,IAC9EkpE,EAAqDlpE,EAAoB,IACzEmpE,EAAsDnpE,EAAoB,IAC1EopE,EAAyDppE,EAAoB,IAC7EqpE,EAAgDrpE,EAAoB,IACpEspE,EAAwDtpE,EAAoBmB,EAAEkoE,GAC9EE,EAAmFvpE,EAAoB,GACZA,GAAoBmB,EAAEooE,E+C73gB1ItE,GAAA,EAAI3xC,IAAI04B,EAAA,EAER,IAAMpoD,GAAQ,GAAIooD,GAAA,EAAKh/C,OACnBjG,OAAiC,eAAzBwiE,EAAA,IAAYC,SACpBzpE,SACI0pE,cAAAV,EAAA,EACAW,YAAAV,EAAA,EACAW,oBAAAV,EAAA,EACAW,eAAAV,EAAA,EACAW,gBAAAV,EAAA,EACAW,mBAAAV,EAAA,IAKRxlE,GAAMO,UACFmlE,IAAS,SAACllE,EAAUC,GAChB,GAUM0lE,GAAqE,iBAAvC1lE,EAAMulE,eAAeha,cACnDoa,GAAyB,UAAW,aAAc,gBAAiB,iBAChEzkE,QAAQnB,EAASjC,OAAS,EAC7B8nE,GAA2B,mBAAoB,uBAChD1kE,QAAQnB,EAASjC,OAAS,GAC1B4nE,GAA+BC,GAA0BC,IAC1DC,aAAaC,QAAQrB,EAAA,EAAa/4D,KAAKC,UAhBhB,kBACnBwE,MAAO7J,MAAMuR,KAAK7X,EAAMqlE,YAAYl1D,MAAM41D,WAC1CC,YAAahmE,EAAMqlE,YAAYW,YAC/B9c,eAAgBlpD,EAAMqlE,YAAYnc,eAClC+c,UACI1a,cAAevrD,EAAMulE,eAAeha,cACpCM,iBAAkB7rD,EAAMulE,eAAe1Z,yBAYpD,MAGPxsD,EAAA,K/C84gBM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,YgDp8gBA,IAAMqE,MAGAkC,KAGAkG,KAGAD,GACF8/C,cADY,SACE1pD,GACVA,EAAQiG,SAAS,qBAAsB,MAAQ1C,MAAM,IACrDvD,EAAQiG,SAAS,kBAAmB,MAAQ1C,MAAM,KAI1DzC,GAAA,GACIW,QACAkC,UACAkG,YACAD,YhDu8gBE,SAAUpM,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIuqE,GAA8CvqE,EAAoB,GAClEwqE,EAAwCxqE,EAAoB,GAC5DyqE,EAAmDzqE,EAAoB,IiD59gB1FqE,GACFmQ,MAAO,GAAIk2D,KACXC,mBAAoB,EACpBN,eACA9c,eAAgB,EAEhBsX,gBAAgB,GAGdt+D,GACFiO,MADY,SACNnQ,EAAOumE,GACT,MAAOvmE,GAAMsmE,oBAAsBtmE,EAAMmQ,OAE7C65C,aAJY,SAIChqD,EAAOumE,GAChB,MAAOjgE,OAAMuR,KAAK0uD,EAAWp2D,MAAMq2D,WAEvCjc,SAAU,SAACvqD,EAAOumE,GAAR,MAAuB,UAAAv6D,GAC7B,MAAOu6D,GAAWp2D,MAAMtT,IAAImP,KAEhCy6D,QAAS,SAACzmE,EAAOumE,GAAR,MAAuB,UAAAv6D,GAC5B,MAAOu6D,GAAWp2D,MAAM4M,IAAI/Q,KAEhC06D,YAAa,SAAC1mE,EAAOumE,GAAR,MAAuB,UAAAv6D,GAChC,MAAKu6D,GAAWE,QAAQz6D,GAGTu6D,EAAWhc,SAASv+C,GACnBmE,MAAM9J,IAAI,SAAAgkD,GAAA,MAAUkc,GAAWhc,SAASF,UAG5D2b,YArBY,SAqBAhmE,EAAOumE,GACf,MAAOvmE,GAAMgmE,aAEjBjc,UAxBY,SAwBF/pD,EAAOumE,GACb,MAAOA,GAAWP,YAAY3/D,IAAI,SAAA2F,GAAA,MAAMu6D,GAAWhc,SAASv+C,MAGhEo0D,WAAY,SAACpgE,EAAOumE,GAAR,MAAuB,UAAA91D,GAC/B,GAAIk2D,GAAgBlqE,OAAAypE,EAAA,GAAgBz1D,EAAK3F,SACrC87D,EAAoBnqE,OAAAypE,EAAA,GAAgBz1D,EAAKV,aACzC82D,EAAeF,EAAcvnE,OAAOwnE,EACxC,QAA2B,KAAfn2D,EAAKN,OAA0BM,EAAKN,MAAMjN,OAAS,EAAG,CAC9D,GAAI4jE,GAAaP,EAAW5b,YAAYl6C,EAAKN,MAC7C02D,GAAeA,EAAaznE,OAAO0nE,GAEvC,MAAOD,GAAaE,WAGxBpc,YAAa,SAAC3qD,EAAOumE,GAAR,MAAuB,UAACp2D,GACjC,MAAOA,GAAM9J,IAAI,SAAAgkD,GACb,GAAI2c,GAAYT,EAAWhc,SAASF,EACpC,OAAOkc,GAAWnG,WAAW4G,KAC9BC,UAAUF,WAGjB7d,eA9CY,SA8CGlpD,EAAOumE,GAClB,MAAOvmE,GAAMkpD,gBAGjBsX,eAlDY,SAkDGxgE,EAAOumE,GAClB,MAAOvmE,GAAMwgE,iBAIfp4D,GACF8+D,2BADc,SACalnE,GACvBA,EAAMsmE,oBAAsB,GAGhCa,0BALc,SAKYnnE,EAAOonE,GAC7B,GAAMA,EAAN,CAGA,GAAIC,GAAgB37D,KAAKs+B,MAAMo9B,EAE3BC,GAAcl3D,QACdnQ,EAAMmQ,MAAQ,GAAIk2D,KAAIgB,EAAcl3D,QAGpCk3D,EAAcrB,cACdhmE,EAAMgmE,YAAcqB,EAAcrB,aAGlCqB,EAAcne,iBACdlpD,EAAMkpD,eAAiBme,EAAcne,kBAI7CC,QAxBc,SAwBNnpD,EAAOyQ,GACX,GAAI45C,GAAS55C,EAAA,EACbzQ,GAAMmQ,MAAMzM,IAAI2mD,EAAQ55C,GACxBrI,EAAU8+D,2BAA2BlnE,IAIzC29D,WAAY,QAAS2J,GAAgBtnE,EAAOqqD,GAG7BrqD,EAAMmQ,MAAMtT,IAAIwtD,GACtBl6C,MAAM9J,IAAI,SAAAmkD,GAAA,MAAe8c,GAAgBtnE,EAAOwqD,KAErDxqD,EAAMmQ,MAAMrG,OAAOugD,GAGnBjiD,EAAUk3D,mBAAmBt/D,EAAOqqD,GACpCjiD,EAAU8+D,2BAA2BlnE,IAGzCs/D,mBA5Cc,SA4CKt/D,EAAOqqD,GACtB,GAAIkd,GAAkBvnE,EAAMgmE,YAAY9kE,QAAQmpD,EAC5Ckd,IAAmB,GACnBvnE,EAAMgmE,YAAY5kE,OAAOmmE,EAAiB,IAIlD9J,yBAnDc,SAmDWz9D,EAnDXwnE,GAmD+C,GAA5B9J,GAA4B8J,EAA5B9J,aAAclT,EAAcgd,EAAdhd,YACvCid,EAAaznE,EAAMmQ,MAAMtT,IAAI6gE,GAC7BgK,EAAoBD,EAAWt3D,MAAMjP,QAAQspD,EAC7Ckd,IAAqB,GACrBD,EAAWt3D,MAAM/O,OAAOsmE,EAAmB,GAE/Ct/D,EAAU+gD,QAAQnpD,EAAOynE,IAG7B9I,cA5Dc,SA4DA3+D,EA5DA2nE,GA4D4B,GAApBtd,GAAoBsd,EAApBtd,OAAQuU,EAAY+I,EAAZ/I,SACf5+D,GAAMmQ,MAAMtT,IAAIwtD,GACtBl6C,MAAMhP,KAAKy9D,GAChBx2D,EAAU8+D,2BAA2BlnE,IAEzCopD,cAjEc,SAiEAppD,EAAOqqD,GACjBrqD,EAAMgmE,YAAY7kE,KAAKkpD,IAG3BpB,wBAAyB,SAACjpD,GACtBA,EAAMkpD,kBAGV6B,qBAAsB,SAAC/qD,EAAO4nE,GAC1B5nE,EAAMwgE,eAAiBoH,IAIzBz/D,GACF87D,gBADY,SACI1lE,GACZ,GAAsC,iBAAlCA,EAAQ2D,QAAQqpD,cAAkC,CAClD,GAAI6b,GAAsBvB,aAAagC,QAAQ1B,EAAA,EAC/C5nE,GAAQwG,OAAO,4BAA6BqiE,GAC5C7oE,EAAQwG,OAAO,kCACZ,CACH,GAAI+iE,GAAWvpE,EAAQ2D,QAAQ2pD,gBAC/Bua,GAAA,EAAWn9D,IAAI,UAAY6+D,GAAUl0D,KAAK,SAASlT,KAC/C,SAACqnE,GACGxpE,EAAQwG,OAAO,4BAA6BgjE,EAAStnE,OACrDlC,EAAQwG,OAAO,kCAI/Bm/D,oBAfY,SAeQ3lE,GAChB,GAAIupE,GAAWvpE,EAAQ2D,QAAQ2pD,iBAC3Bwb,GACAl3D,MAAO7J,MAAMuR,KAAKtZ,EAAQ2D,QAAQiO,MAAM41D,WACxCC,YAAaznE,EAAQ2D,QAAQ8jE,YAC7B9c,eAAgB3qD,EAAQ2D,QAAQgnD,eAGpCkd,GAAA,EAAWn9D,IAAI,UAAY6+D,GAAUpkE,IAAIgI,KAAKC,UAAU07D,KAIhEhoE,GAAA,GACIW,QACAkC,UACAkG,YACAD,YjD4/gBE,SAAUpM,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIqsE,GAA6CrsE,EAAoB,IACjEssE,EAAqDtsE,EAAoBmB,EAAEkrE,GkD9qhBhGzlE,GlD+qhBuE5G,EAAoB,KkD9qhB3FusE,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBAEvBN,GAAAz1D,EAAS85C,cAAc/pD,GAEvBlD,EAAA,EAAe4oE,EAAAz1D,EAASg2D,YlDurhBlB,SAAUzsE,EAAQD,EAASH,GAEjC,YmDlshBAA,GAAA,GACA,IAAAq0D,GAHA,SAAAyY,GAA+B,MAAAA,IAAA,gBAAAA,IAAA,WAAAA,KAAA,QAAAA,GAG/B9sE,EAAA,IAkBAI,GAAAD,QAAAk0D,GnD4shBM,SAAUj0D,EAAQsD,EAAqB1D,GAE7C,YACAc,QAAOC,eAAe2C,EAAqB,cAAgB8R,OAAO,IACtC,SAASP,EAAcD,GoDjuhBnD,QAAAxD,MAGA,QAAA1C,GAAAtK,EAAA26D,GACA,kBACA36D,EAAAoK,MAAAuwD,EAAAxwD,YAIA,QAAA9E,GAAArF,GACA,KAAA3B,eAAAgH,IACA,SAAAi2D,WAAA,uCACA,sBAAAt7D,GAAA,SAAAs7D,WAAA,iBACAj9D,MAAAkqE,OAAA,EACAlqE,KAAAmqE,UAAA,EACAnqE,KAAAq9B,WAAA/qB,GACAtS,KAAAoqE,cAEAC,EAAA1oE,EAAA3B,MAGA,QAAA6iE,GAAAxd,EAAAilB,GACA,SAAAjlB,EAAA6kB,QACA7kB,IAAAhoB,MAEA,QAAAgoB,EAAA6kB,OAEA,WADA7kB,GAAA+kB,WAAAznE,KAAA2nE,EAGAjlB,GAAA8kB,UAAA,EACAnjE,EAAAujE,aAAA,WACA,GAAA1jE,GAAA,IAAAw+C,EAAA6kB,OAAAI,EAAAE,YAAAF,EAAAG,UACA,WAAA5jE,EAEA,YADA,IAAAw+C,EAAA6kB,OAAAjjE,EAAA2a,GAAA0oD,EAAAlU,QAAA/Q,EAAAhoB,OAGA,IAAAhpB,EACA,KACAA,EAAAxN,EAAAw+C,EAAAhoB,QACK,MAAAhsB,GAEL,WADAuQ,GAAA0oD,EAAAlU,QAAA/kD,GAGApK,EAAAqjE,EAAAlU,QAAA/hD,KAIA,QAAApN,GAAAo+C,EAAA6F,GACA,IAEA,GAAAA,IAAA7F,EACA,SAAA4X,WAAA,4CACA,IACA/R,IACA,gBAAAA,IAAA,kBAAAA,IACA,CACA,GAAAhpD,GAAAgpD,EAAAhpD,IACA,IAAAgpD,YAAAlkD,GAIA,MAHAq+C,GAAA6kB,OAAA,EACA7kB,EAAAhoB,OAAA6tB,MACAwf,GAAArlB,EAEO,sBAAAnjD,GAEP,WADAmoE,GAAAp+D,EAAA/J,EAAAgpD,GAAA7F,GAIAA,EAAA6kB,OAAA,EACA7kB,EAAAhoB,OAAA6tB,EACAwf,EAAArlB,GACG,MAAAh0C,GACHuQ,EAAAyjC,EAAAh0C,IAIA,QAAAuQ,GAAAyjC,EAAA6F,GACA7F,EAAA6kB,OAAA,EACA7kB,EAAAhoB,OAAA6tB,EACAwf,EAAArlB,GAGA,QAAAqlB,GAAArlB,GACA,IAAAA,EAAA6kB,QAAA,IAAA7kB,EAAA+kB,WAAA1lE,QACAsC,EAAAujE,aAAA,WACAllB,EAAA8kB,UACAnjE,EAAA2jE,sBAAAtlB,EAAAhoB,SAKA,QAAA7/B,GAAA,EAAAqO,EAAAw5C,EAAA+kB,WAAA1lE,OAA+ClH,EAAAqO,EAASrO,IACxDqlE,EAAAxd,IAAA+kB,WAAA5sE,GAEA6nD,GAAA+kB,WAAA,KAGA,QAAAQ,GAAAJ,EAAAC,EAAArU,GACAp2D,KAAAwqE,YAAA,kBAAAA,KAAA,KACAxqE,KAAAyqE,WAAA,kBAAAA,KAAA,KACAzqE,KAAAo2D,UASA,QAAAiU,GAAA1oE,EAAA0jD,GACA,GAAAwX,IAAA,CACA,KACAl7D,EACA,SAAAgR,GACAkqD,IACAA,GAAA,EACA51D,EAAAo+C,EAAA1yC,KAEA,SAAAkP,GACAg7C,IACAA,GAAA,EACAj7C,EAAAyjC,EAAAxjC,MAGG,MAAAooD,GACH,GAAApN,EAAA,MACAA,IAAA,EACAj7C,EAAAyjC,EAAA4kB,IAiIA,QAAAY,GAAAlpE,EAAApE,GACA,MAAAA,IAAkBD,YAAcqE,EAAApE,IAAAD,SAAAC,EAAAD,QpDi+gBiD,GAAIwtE,GAA6C3tE,EAAoB,IoDnuhBtJ4tE,GpDouhB8E5tE,EAAoBmB,EAAEwsE,GoDpuhBpG9oD,WAoIAhb,GAAAtI,UAAA,eAAA+rE,GACA,MAAAzqE,MAAAkC,KAAA,KAAAuoE,IAGAzjE,EAAAtI,UAAAwD,KAAA,SAAAsoE,EAAAC,GACA,GAAAO,GAAA,GAAAhrE,MAAAyvB,YAAA9gB,EAGA,OADAk0D,GAAA7iE,KAAA,GAAA4qE,GAAAJ,EAAAC,EAAAO,IACAA,GAGAhkE,EAAAtI,UAAA,iBAAA6vB,GACA,GAAAkB,GAAAzvB,KAAAyvB,WACA,OAAAzvB,MAAAkC,KACA,SAAAyQ,GACA,MAAA8c,GAAAxoB,QAAAsnB,KAAArsB,KAAA,WACA,MAAAyQ,MAGA,SAAAkP,GACA,MAAA4N,GAAAxoB,QAAAsnB,KAAArsB,KAAA,WACA,MAAAutB,GAAA7N,OAAAC,QAMA7a,EAAAgE,IAAA,SAAAyI,GACA,UAAAzM,GAAA,SAAAC,EAAA2a,GAOA,QAAA9a,GAAAtJ,EAAAyE,GACA,IACA,GAAAA,IAAA,gBAAAA,IAAA,kBAAAA,IAAA,CACA,GAAAC,GAAAD,EAAAC,IACA,sBAAAA,GAQA,WAPAA,GAAAxE,KACAuE,EACA,SAAAA,GACA6E,EAAAtJ,EAAAyE,IAEA2f,GAKAxb,EAAA5I,GAAAyE,EACA,KAAAgpE,GACAhkE,EAAAb,GAEO,MAAA6jE,GACProD,EAAAqoD,IA1BA,IAAAx2D,OAAA,KAAAA,EAAA/O,OACA,SAAAu4D,WAAA,+BACA,IAAA72D,GAAA0B,MAAApJ,UAAAsG,MAAAtH,KAAA+V,EACA,QAAArN,EAAA1B,OAAA,MAAAuC,MA2BA,QA1BAgkE,GAAA7kE,EAAA1B,OA0BAlH,EAAA,EAAmBA,EAAA4I,EAAA1B,OAAiBlH,IACpCsJ,EAAAtJ,EAAA4I,EAAA5I,OAKAwJ,EAAAC,QAAA,SAAA0L,GACA,MAAAA,IAAA,gBAAAA,MAAA8c,cAAAzoB,EACA2L,EAGA,GAAA3L,GAAA,SAAAC,GACAA,EAAA0L,MAIA3L,EAAA4a,OAAA,SAAAjP,GACA,UAAA3L,GAAA,SAAAC,EAAA2a,GACAA,EAAAjP,MAIA3L,EAAAkkE,KAAA,SAAAlD,GACA,UAAAhhE,GAAA,SAAAC,EAAA2a,GACA,OAAApkB,GAAA,EAAAqO,EAAAm8D,EAAAtjE,OAAwClH,EAAAqO,EAASrO,IACjDwqE,EAAAxqE,GAAA0E,KAAA+E,EAAA2a,MAMA5a,EAAAujE,aACA,kBAAAn4D,IACA,SAAAzQ,GACAyQ,EAAAzQ,KAEA,SAAAA,GACAopE,EAAAppE,EAAA,IAGAqF,EAAA2jE,sBAAA,SAAAxjE,GACA,mBAAAgW,mBACAA,QAAAwc,KAAA,wCAAAxyB,GAIA,IAAAgkE,GAAA,WAIA,sBAAA9lB,MACA,MAAAA,KAEA,uBAAAr8C,QACA,MAAAA,OAEA,aAAAmJ,EACA,MAAAA,EAEA,UAAAhC,OAAA,oCAGAg7D,GAAAnkE,UACAmkE,EAAAnkE,UAOA,IAAAokE,GAAAP,EAAA,SAAAttE,GAEA,GAAA4U,GAAA5U,EAAAD,QAAA,mBAAA0L,gBAAAkK,WACAlK,OAAA,mBAAAq8C,YAAAnyC,WAAAmyC,KAEAl0C,SAAA,gBACA,iBAAAk6D,WAAAl5D,KAGAm5D,EAAAT,EAAA,SAAAttE,GACA,GAAAguE,GAAAhuE,EAAAD,SAA6BqL,QAAA,QAC7B,iBAAA6iE,WAAAD,KAIAE,GAFAH,EAAA3iE,QAEA,SAAA+iE,GACA,sBAAAA,GAAA,OAAAA,EAAA,kBAAAA,KAGAC,EAAA,SAAAD,GACA,IAAAD,EAAAC,GAAA,KAAAzO,WAAAyO,EAAA,qBACA,OAAAA,IAGAE,EAAA,SAAAlkC,GACA,IACA,QAAAA,IACG,MAAAr2B,GACH,WAKAw6D,GAAAD,EAAA,WACA,MAA0E,IAA1E3tE,OAAAC,kBAAiC,KAAQG,IAAA,WAAmB,YAAc2V,IAG1E7F,EAAAi9D,EAAAj9D,SAEAygB,EAAA68C,EAAAt9D,IAAAs9D,EAAAt9D,EAAAC,eACA09D,EAAA,SAAAJ,GACA,MAAA98C,GAAAzgB,EAAAC,cAAAs9D,OAGAK,GAAAF,IAAAD,EAAA,WACA,MAAyF,IAAzF3tE,OAAAC,eAAA4tE,EAAA,YAAwDztE,IAAA,WAAmB,YAAc2V,IAOzFg4D,EAAA,SAAAN,EAAAO,GACA,IAAAR,EAAAC,GAAA,MAAAA,EACA,IAAA/pE,GAAAM,CACA,IAAAgqE,GAAA,mBAAAtqE,EAAA+pE,EAAAr+D,YAAAo+D,EAAAxpE,EAAAN,EAAAjE,KAAAguE,IAAA,MAAAzpE,EACA,uBAAAN,EAAA+pE,EAAAQ,WAAAT,EAAAxpE,EAAAN,EAAAjE,KAAAguE,IAAA,MAAAzpE,EACA,KAAAgqE,GAAA,mBAAAtqE,EAAA+pE,EAAAr+D,YAAAo+D,EAAAxpE,EAAAN,EAAAjE,KAAAguE,IAAA,MAAAzpE,EACA,MAAAg7D,WAAA,4CAGAkP,EAAAluE,OAAAC,eAEA85D,EAAA6T,EAAA5tE,OAAAC,eAAA,SAAAkuE,EAAA5P,EAAA6P,GAIA,GAHAV,EAAAS,GACA5P,EAAAwP,EAAAxP,GAAA,GACAmP,EAAAU,GACAN,EAAA,IACA,MAAAI,GAAAC,EAAA5P,EAAA6P,GACG,MAAAh7D,IACH,UAAAg7D,IAAA,OAAAA,GAAA,KAAApP,WAAA,2BAEA,OADA,SAAAoP,KAAAD,EAAA5P,GAAA6P,EAAA15D,OACAy5D,GAGAE,GACAtU,KAGAuU,EAAA,SAAAC,EAAA75D,GACA,OACAvU,aAAA,EAAAouE,GACAruE,eAAA,EAAAquE,GACA/2D,WAAA,EAAA+2D,GACA75D,UAIA85D,EAAAZ,EAAA,SAAArtE,EAAAsD,EAAA6Q,GACA,MAAA25D,GAAAtU,EAAAx5D,EAAAsD,EAAAyqE,EAAA,EAAA55D,KACC,SAAAnU,EAAAsD,EAAA6Q,GAED,MADAnU,GAAAsD,GAAA6Q,EACAnU,GAGAG,KAAuBA,eACvB+tE,EAAA,SAAAhB,EAAA5pE,GACA,MAAAnD,GAAAjB,KAAAguE,EAAA5pE,IAGA0L,EAAA,EACAm/D,EAAAz5D,KAAAqwD,SACA/oB,EAAA,SAAA14C,GACA,gBAAAlB,WAAA0R,KAAAxQ,EAAA,GAAAA,EAAA,QAAA0L,EAAAm/D,GAAAt/D,SAAA,MAGAu/D,EAAA/B,EAAA,SAAAttE,GACA,GAAAsvE,GAAAryB,EAAA,OAEAsyB,EAAA37D,SAAA,SACA47D,GAAA,GAAAD,GAAAlkE,MAFA,WAIA0iE,GAAA0B,cAAA,SAAAtB,GACA,MAAAoB,GAAApvE,KAAAguE,KAGAnuE,EAAAD,QAAA,SAAA8uE,EAAAtqE,EAAAG,EAAAgrE,GACA,GAAAC,GAAA,kBAAAjrE,EACAirE,KAAAR,EAAAzqE,EAAA,SAAAwqE,EAAAxqE,EAAA,OAAAH,IACAsqE,EAAAtqE,KAAAG,IACAirE,IAAAR,EAAAzqE,EAAA4qE,IAAAJ,EAAAxqE,EAAA4qE,EAAAT,EAAAtqE,GAAA,GAAAsqE,EAAAtqE,GAAAirE,EAAAjgE,KAAAmG,OAAAnR,MACAsqE,IAAAhB,EACAgB,EAAAtqE,GAAAG,EACGgrE,EAGAb,EAAAtqE,GACHsqE,EAAAtqE,GAAAG,EAEAwqE,EAAAL,EAAAtqE,EAAAG,UALAmqE,GAAAtqE,GACA2qE,EAAAL,EAAAtqE,EAAAG,OAOCkP,SAAAzS,UAxBD,WAwBC,WACD,wBAAAsB,YAAA6sE,IAAAC,EAAApvE,KAAAsC,UAIAmtE,EAAA,SAAAzB,GACA,qBAAAA,GAAA,KAAAzO,WAAAyO,EAAA,sBACA,OAAAA,IAKA0B,EAAA,SAAAzrE,EAAA0rE,EAAA3oE,GAEA,GADAyoE,EAAAxrE,OACA2Q,KAAA+6D,EAAA,MAAA1rE,EACA,QAAA+C,GACA,uBAAAsP,GACA,MAAArS,GAAAjE,KAAA2vE,EAAAr5D,GAEA,wBAAAA,EAAAU,GACA,MAAA/S,GAAAjE,KAAA2vE,EAAAr5D,EAAAU,GAEA,wBAAAV,EAAAU,EAAA9W,GACA,MAAA+D,GAAAjE,KAAA2vE,EAAAr5D,EAAAU,EAAA9W,IAGA,kBACA,MAAA+D,GAAAoK,MAAAshE,EAAAvhE,aAMAwhE,EAAA,SAAAhuE,EAAAxB,EAAA8O,GACA,GAQA9K,GAAAyrE,EAAA/Z,EAAA17B,EARA01C,EAAAluE,EAAAguE,EAAAG,EACAC,EAAApuE,EAAAguE,EAAAK,EACAC,EAAAtuE,EAAAguE,EAAArB,EACA4B,EAAAvuE,EAAAguE,EAAA9Q,EACAsR,EAAAxuE,EAAAguE,EAAAS,EACA73D,EAAAw3D,EAAAtC,EAAAwC,EAAAxC,EAAAttE,KAAAstE,EAAAttE,QAAqFstE,EAAAttE,QAAwB,UAC7GR,EAAAowE,EAAApC,IAAAxtE,KAAAwtE,EAAAxtE,OACAkwE,EAAA1wE,EAAA,YAAAA,EAAA,aAEAowE,KAAA9gE,EAAA9O,EACA,KAAAgE,IAAA8K,GAEA2gE,GAAAC,GAAAt3D,OAAA5D,KAAA4D,EAAApU,GAEA0xD,GAAA+Z,EAAAr3D,EAAAtJ,GAAA9K,GAEAg2B,EAAAg2C,GAAAP,EAAAH,EAAA5Z,EAAA4X,GAAAyC,GAAA,kBAAAra,GAAA4Z,EAAAj8D,SAAAzT,KAAA81D,KAEAt9C,GAAA02D,EAAA12D,EAAApU,EAAA0xD,EAAAl0D,EAAAguE,EAAAW,GAEA3wE,EAAAwE,IAAA0xD,GAAAiZ,EAAAnvE,EAAAwE,EAAAg2B,GACA+1C,GAAAG,EAAAlsE,IAAA0xD,IAAAwa,EAAAlsE,GAAA0xD,GAGA4X,GAAAG,KAAAD,EAEAgC,EAAAG,EAAA,EACAH,EAAAK,EAAA,EACAL,EAAArB,EAAA,EACAqB,EAAA9Q,EAAA,EACA8Q,EAAAS,EAAA,GACAT,EAAA5T,EAAA,GACA4T,EAAAW,EAAA,GACAX,EAAAY,EAAA,GACA,IAAAC,GAAAb,EAEAjgE,KAAiBA,SAEjB+gE,EAAA,SAAA1C,GACA,MAAAr+D,GAAA3P,KAAAguE,GAAA1mE,MAAA,OAMAqpE,EAAApwE,OAAA,KAAAqwE,qBAAA,GAAArwE,OAAA,SAAAytE,GACA,gBAAA0C,EAAA1C,KAAA9iE,MAAA,IAAA3K,OAAAytE,IAIA6C,EAAA,SAAA7C,GACA,OAAAp5D,IAAAo5D,EAAA,KAAAzO,WAAA,yBAAAyO,EACA,OAAAA,IAKA8C,EAAA,SAAA9C,GACA,MAAAztE,QAAAswE,EAAA7C,KAIA+C,EAAAv7D,KAAAu7D,KACAt7D,EAAAD,KAAAC,MACAu7D,EAAA,SAAAhD,GACA,MAAAp4D,OAAAo4D,MAAA,GAAAA,EAAA,EAAAv4D,EAAAs7D,GAAA/C,IAKAiD,EAAAz7D,KAAAy7D,IACAC,EAAA,SAAAlD,GACA,MAAAA,GAAA,EAAAiD,EAAAD,EAAAhD,GAAA,qBAKAmD,EAAA/mE,MAAAC,SAAA,SAAAyxB,GACA,eAAA40C,EAAA50C,IAIAz4B,EAAAqqE,EADA,wBACAA,EADA,0BAEA0D,GAAA,SAAAhtE,GACA,MAAAf,GAAAe,KAAAf,EAAAe,QAGAitE,GAAAlE,EAAA,SAAAttE,GACA,GAAAwD,GAAA+tE,GAAA,OAEAjuD,EAAAuqD,EAAAvqD,OACAmuD,EAAA,kBAAAnuD,IAEAtjB,EAAAD,QAAA,SAAAQ,GACA,MAAAiD,GAAAjD,KAAAiD,EAAAjD,GACAkxE,GAAAnuD,EAAA/iB,KAAAkxE,EAAAnuD,EAAA25B,GAAA,UAAA18C,MAGAiD,UAGAkuE,GAAAF,GAAA,WAEAG,GAAA,SAAAx2B,GACA,GAAAy2B,EASG,OARHN,GAAAn2B,KACAy2B,EAAAz2B,EAAAjpB,YAEA,kBAAA0/C,QAAArnE,QAAA+mE,EAAAM,EAAAzwE,aAAAywE,MAAA78D,IACAm5D,EAAA0D,IAEA,QADAA,IAAAF,OACAE,MAAA78D,SAEGA,KAAA68D,EAAArnE,MAAAqnE,GAMHC,GAAA,SAAA12B,EAAAh0C,GACA,WAAAwqE,GAAAx2B,IAAAh0C,IAeA2qE,GAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAF,EACAG,EAAA,GAAAH,EACAI,EAAA,GAAAJ,EACAK,EAAA,GAAAL,EACAM,EAAA,GAAAN,EACAO,EAAA,GAAAP,GAAAM,EACA5sE,EAAAusE,GAAAH,EACA,iBAAAU,EAAAC,EAAA1C,GAQA,IAPA,GAMAprE,GAAA6E,EANAslE,EAAAoC,EAAAsB,GACAzqB,EAAAgpB,EAAAjC,GACApU,EAAAoV,EAAA2C,EAAA1C,EAAA,GACA3oE,EAAAkqE,EAAAvpB,EAAA3gD,QACA4K,EAAA,EACAsZ,EAAA4mD,EAAAxsE,EAAA8sE,EAAAprE,GAAA+qE,EAAAzsE,EAAA8sE,EAAA,OAAAx9D,GAEU5N,EAAA4K,EAAeA,IAAA,IAAAugE,GAAAvgE,IAAA+1C,MACzBpjD,EAAAojD,EAAA/1C,GACAxI,EAAAkxD,EAAA/1D,EAAAqN,EAAA88D,GACAkD,GACA,GAAAE,EAAA5mD,EAAAtZ,GAAAxI,MACA,IAAAA,EAAA,OAAAwoE,GACA,eACA,cAAArtE,EACA,cAAAqN,EACA,QAAAsZ,EAAAjmB,KAAAV,OACS,IAAA0tE,EAAA,QAGT,OAAAC,IAAA,EAAAF,GAAAC,IAAA/mD,IAKAonD,GAAAjB,GAAA,eACAkB,GAAAnoE,MAAApJ,cACA4T,IAAA29D,GAAAD,KAAAvD,EAAAwD,GAAAD,MACA,IAAAE,IAAA,SAAApuE,GACAmuE,GAAAD,IAAAluE,IAAA,GAKAquE,GAAAd,GAAA,GAEAe,IAAA,CADA,aAGAtoE,MAAA,mBAA0CsoE,IAAA,IAC1CjC,IAAA3R,EAAA2R,EAAAV,EAAA2C,GAAA,SACAC,KAAA,SAAAN,GACA,MAAAI,IAAAnwE,KAAA+vE,EAAAjkE,UAAApH,OAAA,EAAAoH,UAAA,OAAAwG,OAGA49D,GATA,OAWA,IAIAI,KAJAhF,EAAAxjE,MAAAuoE,KAIAhB,GAAA,IAEAkB,IAAA,CADA,kBAGAzoE,MAAA,wBAA8CyoE,IAAA,IAC9CpC,IAAA3R,EAAA2R,EAAAV,EAAA8C,GAAA,SACAC,UAAA,SAAAT,GACA,MAAAO,IAAAtwE,KAAA+vE,EAAAjkE,UAAApH,OAAA,EAAAoH,UAAA,OAAAwG,OAGA49D,GATA,YAWA,IAKAO,KALAnF,EAAAxjE,MAAA0oE,UAKA,SAAA9E,GACA,MAAA2C,GAAAE,EAAA7C,MAGAxyD,GAAAhG,KAAAgG,IACAw3D,GAAAx9D,KAAAy7D,IACAgC,GAAA,SAAArhE,EAAA5K,GAEA,MADA4K,GAAAo/D,EAAAp/D,GACAA,EAAA,EAAA4J,GAAA5J,EAAA5K,EAAA,GAAAgsE,GAAAphE,EAAA5K,IA2BAksE,GAAA9B,GAAA,QAEA+B,GAAA,SAAA/uE,GACA,MAAA8uE,IAAA9uE,KAAA8uE,GAAA9uE,GAAA04C,EAAA14C,KAGAgvE,GAzBA,SAAAC,GACA,gBAAAjB,EAAA7rD,EAAA+sD,GACA,GAGAr+D,GAHAy5D,EAAAqE,GAAAX,GACAprE,EAAAkqE,EAAAxC,EAAA1nE,QACA4K,EAAAqhE,GAAAK,EAAAtsE,EAIA,IAAAqsE,GAAA9sD,MAAA,KAAAvf,EAAA4K,GAGA,IAFAqD,EAAAy5D,EAAA98D,OAEAqD,EAAA,aAEK,MAAYjO,EAAA4K,EAAeA,IAAA,IAAAyhE,GAAAzhE,IAAA88D,KAChCA,EAAA98D,KAAA2U,EAAA,MAAA8sD,IAAAzhE,GAAA,CACK,QAAAyhE,IAAA,KAUL,GACAE,GAAAJ,GAAA,YAEAK,GAAA,SAAA1yE,EAAA2yE,GACA,GAGArvE,GAHAsqE,EAAAqE,GAAAjyE,GACAhB,EAAA,EACAorB,IAEA,KAAA9mB,IAAAsqE,GAAAtqE,GAAAmvE,IAAAvE,EAAAN,EAAAtqE,IAAA8mB,EAAAjmB,KAAAb,EAEA,MAAAqvE,EAAAzsE,OAAAlH,GAAAkvE,EAAAN,EAAAtqE,EAAAqvE,EAAA3zE,SACAszE,GAAAloD,EAAA9mB,IAAA8mB,EAAAjmB,KAAAb,GAEA,OAAA8mB,IAIAwoD,GAAA,gGAEAxoE,MAAA,KAMAyoE,GAAApzE,OAAA2D,MAAA,SAAAwqE,GACA,MAAA8E,IAAA9E,EAAAgF,KAGAE,GAAArzE,OAAAu9D,sBAEA+V,IACAvZ,EAAAsZ,IAGAE,MAAYlD,qBAEZmD,IACAzZ,EAAAwZ,IASAE,GAAAzzE,OAAAqrD,OAGAqoB,IAAAD,IAAA9F,EAAA,WACA,GAAAgG,MACA7D,KAEA9B,EAAAprD,SACAgxD,EAAA,sBAGA,OAFAD,GAAA3F,GAAA,EACA4F,EAAAjpE,MAAA,IAAA/G,QAAA,SAAA+3D,GAAoCmU,EAAAnU,OACjB,GAAnB8X,MAAmBE,GAAA3F,IAAAhuE,OAAA2D,KAAA8vE,MAAsC3D,IAAAjhE,KAAA,KAAA+kE,IACxD,SAAA37D,EAAAtJ,GAMD,IALA,GAAAklE,GAAAtD,EAAAt4D,GACA67D,EAAAjmE,UAAApH,OACA4K,EAAA,EACA0iE,EAAAT,GAAAvZ,EACAia,EAAAR,GAAAzZ,EACA+Z,EAAAziE,GAMA,IALA,GAIAxN,GAJAmqE,EAAAoC,EAAAviE,UAAAwD,MACA1N,EAAAowE,EAAAX,GAAApF,GAAArrE,OAAAoxE,EAAA/F,IAAAoF,GAAApF,GACAvnE,EAAA9C,EAAA8C,OACAoJ,EAAA,EAEApJ,EAAAoJ,GAAAmkE,EAAAv0E,KAAAuuE,EAAAnqE,EAAAF,EAAAkM,QAAAgkE,EAAAhwE,GAAAmqE,EAAAnqE,GACG,OAAAgwE,IACFJ,EAKDvD,KAAAlC,EAAAkC,EAAAV,EAAA,UAA0CnkB,OAAAqoB,IAE1C,IAKAO,KALA5G,EAAArtE,OAAAqrD,OAKAylB,GAAA,UACAoD,GAAA,SAAAzG,GACA,GAAA54D,EACA,OAAA24D,GAAAC,SAAAp5D,MAAAQ,EAAA44D,EAAAwG,OAAAp/D,EAAA,UAAAs7D,EAAA1C,KAOA0G,GAAA,SAAA/E,EAAAgF,EAAAC,GACA,GAAAH,GAAAE,GAAA,KAAApV,WAAA,UAAAqV,EAAA,yBACA,OAAAr/D,QAAAs7D,EAAAlB,KAGAkF,GAAAxD,GAAA,SAcAyD,GAAA,aAEArE,KAAA3R,EAAA2R,EAAAV,EAfA,SAAAgF,GACA,GAAArqC,GAAA,GACA,KACA,MAAAqqC,GAAArqC,GACG,MAAA/2B,GACH,IAEA,MADA+2B,GAAAmqC,KAAA,GACA,MAAAE,GAAArqC,GACK,MAAA4vB,KACF,UAGH,cAGA,UACA0a,WAAA,SAAAL,GACA,GAAAhF,GAAA+E,GAAApyE,KAAAqyE,EALA,cAMA/iE,EAAAs/D,EAAA17D,KAAAy7D,IAAA7iE,UAAApH,OAAA,EAAAoH,UAAA,OAAAwG,GAAA+6D,EAAA3oE,SACAiuE,EAAA1/D,OAAAo/D,EACA,OAAAG,IACAA,GAAA90E,KAAA2vE,EAAAsF,EAAArjE,GACA+9D,EAAAroE,MAAAsK,IAAAqjE,EAAAjuE,UAAAiuE,IAIA,IAEAC,KAFAtH,EAAAr4D,OAAAy/D,WAEA,SAAAG,GACA,GAAA/gE,GAAAmB,OAAAs7D,EAAAvuE,OACA8G,EAAA,GACAxI,EAAAowE,EAAAmE,EACA,IAAAv0E,EAAA,GAAAA,GAAAw0E,IAAA,KAAAC,YAAA,0BACA,MAAQz0E,EAAA,GAAMA,KAAA,KAAAwT,MAAA,EAAAxT,IAAAwI,GAAAgL,EACd,OAAAhL,IAGAqnE,KAAA3R,EAAA,UAEAwW,OAAAJ,IAGA,IAEAK,KAFA3H,EAAAr4D,OAAA+/D,OAEAnI,EAAA,SAAAttE,GACA,GAAA21E,GAAA14B,EAAA,QAGA24B,EAAA7G,EAAAtU,EACAxqD,EAAA,EACA4K,EAAAna,OAAAma,cAAA,WACA,UAEAg7D,GAAAxH,EAAA,WACA,MAAAxzD,GAAAna,OAAAo1E,yBAEAC,EAAA,SAAA5H,GACAyH,EAAAzH,EAAAwH,GAAqBvgE,OACrBnV,EAAA,OAAAgQ,EACA+lE,SAGAC,EAAA,SAAA9H,EAAA1oE,GAEA,IAAAyoE,EAAAC,GAAA,sBAAAA,MAAA,gBAAAA,GAAA,SAAAA,CACA,KAAAgB,EAAAhB,EAAAwH,GAAA,CAEA,IAAA96D,EAAAszD,GAAA,SAEA,KAAA1oE,EAAA,SAEAswE,GAAA5H,GAEG,MAAAA,GAAAwH,GAAA11E,GAEHi2E,EAAA,SAAA/H,EAAA1oE,GACA,IAAA0pE,EAAAhB,EAAAwH,GAAA,CAEA,IAAA96D,EAAAszD,GAAA,QAEA,KAAA1oE,EAAA,QAEAswE,GAAA5H,GAEG,MAAAA,GAAAwH,GAAAK,GAGHG,EAAA,SAAAhI,GAEA,MADA0H,IAAA5tB,EAAAmuB,MAAAv7D,EAAAszD,KAAAgB,EAAAhB,EAAAwH,IAAAI,EAAA5H,GACAA,GAEAlmB,EAAAjoD,EAAAD,SACAm1E,IAAAS,EACAS,MAAA,EACAH,UACAC,UACAC,eASAl+D,IANAy9D,GAAAR,IACAQ,GAAAU,KACAV,GAAAO,QACAP,GAAAQ,QACAR,GAAAS,SAEApH,EAAAtU,GAEA4b,GAAA7E,GAAA,eAEA8E,GAAA,SAAAnI,EAAA/0D,EAAAm9D,GACApI,IAAAgB,EAAAhB,EAAAoI,EAAApI,IAAAhtE,UAAAk1E,KAAAp+D,GAAAk2D,EAAAkI,IAAqEz1E,cAAA,EAAAwU,MAAAgE,KAGrEo9D,GAAAhF,GAEAiF,IACAhc,EAAA+b,IAKA71E,GAAAouE,EAAAtU,EACAic,GAAA,SAAAn2E,GACA,GAAAo2E,GAAA5I,EAAAzqD,SAAAyqD,EAAAzqD,OAA6DuqD,EAAAvqD,WAC7D,MAAA/iB,EAAAmK,OAAA,IAAAnK,IAAAo2E,IAAAh2E,GAAAg2E,EAAAp2E,GAAkF6U,MAAAqhE,GAAAhc,EAAAl6D,MAOlFq2E,GAAA,SAAAzI,GACA,GAAA9iD,GAAAyoD,GAAA3F,GACAsG,EAAAT,GAAAvZ,CACA,IAAAga,EAKA,IAJA,GAGAlwE,GAHAsyE,EAAApC,EAAAtG,GACAuG,EAAAR,GAAAzZ,EACAx6D,EAAA,EAEA42E,EAAA1vE,OAAAlH,GAAAy0E,EAAAv0E,KAAAguE,EAAA5pE,EAAAsyE,EAAA52E,OAAAorB,EAAAjmB,KAAAb,EACG,OAAA8mB,IAGHyrD,GAAAxI,EAAA5tE,OAAAuI,iBAAA,SAAA4lE,EAAAkI,GACA3I,EAAAS,EAKA,KAJA,GAGA5P,GAHA56D,EAAAyvE,GAAAiD,GACA5vE,EAAA9C,EAAA8C,OACAlH,EAAA,EAEAkH,EAAAlH,GAAA8uE,EAAAtU,EAAAoU,EAAA5P,EAAA56D,EAAApE,KAAA82E,EAAA9X,GACA,OAAA4P,IAGAmI,GAAAnJ,EAAAj9D,SACAqmE,GAAAD,OAAApuB,gBAMAsuB,GAAA5D,GAAA,YACA6D,GAAA,aAIAC,GAAA,WAEA,GAIAC,GAJAC,EAAA/I,EAAA,UACAtuE,EAAA4zE,GAAA1sE,MAcA,KAVAmwE,EAAAzlD,MAAA2yB,QAAA,OACAyyB,GAAAlmE,YAAAumE,GACAA,EAAAl9D,IAAA,cAGAi9D,EAAAC,EAAAC,cAAA3mE,SACAymE,EAAAjxB,OACAixB,EAAAG,MAAAC,uCACAJ,EAAAhxB,QACA+wB,GAAAC,EAAAnH,EACAjwE,WAAAm3E,IAAA,UAAAvD,GAAA5zE,GACA,OAAAm3E,OAGAM,GAAAh3E,OAAA+E,QAAA,SAAAopE,EAAAkI,GACA,GAAA1rD,EAQA,OAPA,QAAAwjD,GACAsI,GAAA,UAAA/I,EAAAS,GACAxjD,EAAA,GAAA8rD,IACAA,GAAA,eAEA9rD,EAAA6rD,IAAArI,GACGxjD,EAAA+rD,SACHriE,KAAAgiE,EAAA1rD,EAAAyrD,GAAAzrD,EAAA0rD,IAKAY,GAAA9D,GAAAxwE,OAAA,sBAEAu0E,GAAAl3E,OAAA46C,qBAAA,SAAAuzB,GACA,MAAA8E,IAAA9E,EAAA8I,KAGAE,IACApd,EAAAmd,IAKAE,GAAAD,GAAApd,EACAsd,MAAmBjoE,SAEnBkoE,GAAA,gBAAAvsE,iBAAA/K,OAAA46C,oBACA56C,OAAA46C,oBAAA7vC,WAEAwsE,GAAA,SAAA9J,GACA,IACA,MAAA2J,IAAA3J,GACG,MAAAr6D,GACH,MAAAkkE,IAAAvwE,UAIAywE,GAAA,SAAA/J,GACA,MAAA6J,KAAA,mBAAAD,GAAA53E,KAAAguE,GAAA8J,GAAA9J,GAAA2J,GAAA5E,GAAA/E,KAGAgK,IACA1d,EAAAyd,IAGAE,GAAA13E,OAAA0a,yBAEAi9D,GAAA/J,EAAA8J,GAAA,SAAAvJ,EAAA5P,GAGA,GAFA4P,EAAAqE,GAAArE,GACA5P,EAAAwP,EAAAxP,GAAA,GACAuP,EAAA,IACA,MAAA4J,IAAAvJ,EAAA5P,GACG,MAAAnrD,IACH,GAAAq7D,EAAAN,EAAA5P,GAAA,MAAA+P,IAAAkF,GAAAzZ,EAAAt6D,KAAA0uE,EAAA5P,GAAA4P,EAAA5P,KAGAqZ,IACA7d,EAAA4d,IASA1C,GAAAD,GAAAR,IAoBAqD,GAAAD,GAAA7d,EACA+d,GAAAzJ,EAAAtU,EACAge,GAAAN,GAAA1d,EACAkc,GAAA9I,EAAAvqD,OACAo1D,GAAA7K,EAAAl+D,KACAgpE,GAAAD,OAAA9oE,UAEAgpE,GAAApH,GAAA,WACAqH,GAAArH,GAAA,eACAkD,MAAe3D,qBACf+H,GAAAvH,GAAA,mBACAwH,GAAAxH,GAAA,WACAyH,GAAAzH,GAAA,cACA0H,GAAAv4E,OAAA,UACAw4E,GAAA,kBAAAvC,IACAwC,GAAAtL,EAAAsL,QAEA99D,IAAA89D,QAAA,YAAAA,GAAA,UAAAC,UAGAC,GAAA/K,GAAAD,EAAA,WACA,MAEG,IAFHqJ,GAAAc,MAA8B,KAC9B13E,IAAA,WAAsB,MAAA03E,IAAA/1E,KAAA,KAAyB2S,MAAA,IAAWqB,MACvDA,IACF,SAAA03D,EAAA5pE,EAAA+0E,GACD,GAAAC,GAAAhB,GAAAU,GAAA10E,EACAg1E,UAAAN,IAAA10E,GACAi0E,GAAArK,EAAA5pE,EAAA+0E,GACAC,GAAApL,IAAA8K,IAAAT,GAAAS,GAAA10E,EAAAg1E,IACCf,GAEDgB,GAAA,SAAApgE,GACA,GAAAqgE,GAAAV,GAAA3/D,GAAAs+D,GAAAf,GAAA,UAEA,OADA8C,GAAA7qD,GAAAxV,EACAqgE,GAGAC,GAAAR,IAAA,gBAAAvC,IAAAzW,SAAA,SAAAiO,GACA,sBAAAA,IACC,SAAAA,GACD,MAAAA,aAAAwI,KAGAgD,GAAA,SAAAxL,EAAA5pE,EAAA+0E,GAKA,MAJAnL,KAAA8K,IAAAU,GAAAX,GAAAz0E,EAAA+0E,GACAlL,EAAAD,GACA5pE,EAAAkqE,EAAAlqE,GAAA,GACA6pE,EAAAkL,GACAnK,EAAA4J,GAAAx0E,IACA+0E,EAAAz4E,YAIAsuE,EAAAhB,EAAAyK,KAAAzK,EAAAyK,IAAAr0E,KAAA4pE,EAAAyK,IAAAr0E,IAAA,GACA+0E,EAAA5B,GAAA4B,GAA4Bz4E,WAAAmuE,EAAA,UAJ5BG,EAAAhB,EAAAyK,KAAAJ,GAAArK,EAAAyK,GAAA5J,EAAA,OACAb,EAAAyK,IAAAr0E,IAAA,GAIK80E,GAAAlL,EAAA5pE,EAAA+0E,IACFd,GAAArK,EAAA5pE,EAAA+0E,IAEHM,GAAA,SAAAzL,EAAAlP,GACAmP,EAAAD,EAKA,KAJA,GAGA5pE,GAHAF,EAAAuyE,GAAA3X,EAAAiU,GAAAjU,IACAh/D,EAAA,EACAC,EAAAmE,EAAA8C,OAEAjH,EAAAD,GAAA05E,GAAAxL,EAAA5pE,EAAAF,EAAApE,KAAAg/D,EAAA16D,GACA,OAAA4pE,IAEA6D,GAAA,SAAA7D,EAAAlP,GACA,WAAAlqD,KAAAkqD,EAAAyY,GAAAvJ,GAAAyL,GAAAlC,GAAAvJ,GAAAlP,IAEA4a,GAAA,SAAAt1E,GACA,GAAAu1E,GAAApF,GAAAv0E,KAAAsC,KAAA8B,EAAAkqE,EAAAlqE,GAAA,GACA,SAAA9B,OAAAw2E,IAAA9J,EAAA4J,GAAAx0E,KAAA4qE,EAAA6J,GAAAz0E,QACAu1E,IAAA3K,EAAA1sE,KAAA8B,KAAA4qE,EAAA4J,GAAAx0E,IAAA4qE,EAAA1sE,KAAAm2E,KAAAn2E,KAAAm2E,IAAAr0E,KAAAu1E,IAEAC,GAAA,SAAA5L,EAAA5pE,GAGA,GAFA4pE,EAAA+E,GAAA/E,GACA5pE,EAAAkqE,EAAAlqE,GAAA,GACA4pE,IAAA8K,KAAA9J,EAAA4J,GAAAx0E,IAAA4qE,EAAA6J,GAAAz0E,GAAA,CACA,GAAA+0E,GAAAf,GAAApK,EAAA5pE,EAEA,QADA+0E,IAAAnK,EAAA4J,GAAAx0E,IAAA4qE,EAAAhB,EAAAyK,KAAAzK,EAAAyK,IAAAr0E,KAAA+0E,EAAAz4E,YAAA,GACAy4E,IAEAU,GAAA,SAAA7L,GAKA,IAJA,GAGA5pE,GAHAqvE,EAAA6E,GAAAvF,GAAA/E,IACA9iD,KACAprB,EAAA,EAEA2zE,EAAAzsE,OAAAlH,GACAkvE,EAAA4J,GAAAx0E,EAAAqvE,EAAA3zE,OAAAsE,GAAAq0E,IAAAr0E,GAAAoxE,IAAAtqD,EAAAjmB,KAAAb,EACG,OAAA8mB,IAEH4uD,GAAA,SAAA9L,GAMA,IALA,GAIA5pE,GAJA21E,EAAA/L,IAAA8K,GACArF,EAAA6E,GAAAyB,EAAAlB,GAAA9F,GAAA/E,IACA9iD,KACAprB,EAAA,EAEA2zE,EAAAzsE,OAAAlH,IACAkvE,EAAA4J,GAAAx0E,EAAAqvE,EAAA3zE,OAAAi6E,IAAA/K,EAAA8J,GAAA10E,IAAA8mB,EAAAjmB,KAAA2zE,GAAAx0E,GACG,OAAA8mB,GAIH6tD,MACAvC,GAAA,WACA,GAAAl0E,eAAAk0E,IAAA,KAAAjX,WAAA,+BACA,IAAAtmD,GAAA6jC,EAAA1uC,UAAApH,OAAA,EAAAoH,UAAA,OAAAwG,IACAsoC,EAAA,SAAAjoC,GACA3S,OAAAw2E,IAAA57B,EAAAl9C,KAAA64E,GAAA5jE,GACA+5D,EAAA1sE,KAAAm2E,KAAAzJ,EAAA1sE,KAAAm2E,IAAAx/D,KAAA3W,KAAAm2E,IAAAx/D,IAAA,GACAigE,GAAA52E,KAAA2W,EAAA41D,EAAA,EAAA55D,IAGA,OADAk5D,IAAAjzD,IAAAg+D,GAAAJ,GAAA7/D,GAAiExY,cAAA,EAAA+G,IAAA01C,IACjEm8B,GAAApgE,IAEAi2D,EAAAsH,GAAA,gCACA,MAAAl0E,MAAAmsB,KAGA0pD,GAAA7d,EAAAsf,GACAhL,EAAAtU,EAAAkf,GACA9B,GAAApd,EAAA0d,GAAA1d,EAAAuf,GACA9F,GAAAzZ,EAAAof,GACA7F,GAAAvZ,EAAAwf,GAEA3L,GACAe,EAAA4J,GAAA,uBAAAY,IAAA,GAGApD,GAAAhc,EAAA,SAAAl6D,GACA,MAAAi5E,IAAAhI,GAAAjxE,MAIAqwE,IAAAR,EAAAQ,EAAAzU,EAAAyU,EAAAV,GAAAgJ,IAA0D51D,OAAAqzD,IAE1D,QAAAwD,IAAA,iHAGA9uE,MAAA,KAAAkF,GAAA,EAAoB4pE,GAAAhzE,OAAAoJ,IAAuBihE,GAAA2I,GAAA5pE,MAE3C,QAAA6pE,IAAAtG,GAAAtC,GAAAhuE,OAAA64D,GAAA,EAA2D+d,GAAAjzE,OAAAk1D,IAA6Bqa,GAAA0D,GAAA/d,MAExFuU,KAAAlC,EAAAkC,EAAAV,GAAAgJ,GAAA,UAEAjoC,IAAA,SAAA1sC,GACA,MAAA4qE,GAAA2J,GAAAv0E,GAAA,IACAu0E,GAAAv0E,GACAu0E,GAAAv0E,GAAAoyE,GAAApyE,IAGA81E,OAAA,SAAAZ,GACA,IAAAC,GAAAD,GAAA,KAAA/Z,WAAA+Z,EAAA,oBACA,QAAAl1E,KAAAu0E,IAAA,GAAAA,GAAAv0E,KAAAk1E,EAAA,MAAAl1E,IAEA+1E,UAAA,WAA0Bj/D,IAAA,GAC1Bk/D,UAAA,WAA0Bl/D,IAAA,KAG1Bu1D,IAAAlC,EAAAkC,EAAAV,GAAAgJ,GAAA,UAEAzzE,OAAAusE,GAEArxE,eAAAg5E,GAEA1wE,iBAAA2wE,GAEAx+D,yBAAA2+D,GAEAz+B,oBAAA0+B,GAEA/b,sBAAAgc,KAIAvB,IAAA9H,IAAAlC,EAAAkC,EAAAV,IAAAgJ,IAAA7K,EAAA,WACA,GAAAK,GAAAiI,IAIA,iBAAAgC,IAAAjK,KAA2D,MAA3DiK,IAAoDliE,EAAAi4D,KAAe,MAAAiK,GAAAj4E,OAAAguE,OAClE,QACD9+D,UAAA,SAAAu+D,GAIA,IAHA,GAEAqM,GAAAC,EAFA5xE,GAAAslE,GACAluE,EAAA,EAEAsO,UAAApH,OAAAlH,GAAA4I,EAAAzD,KAAAmJ,UAAAtO,KAEA,IADAw6E,EAAAD,EAAA3xE,EAAA,IACAqlE,EAAAsM,QAAAzlE,KAAAo5D,KAAAuL,GAAAvL,GAMA,MALAmD,GAAAkJ,OAAA,SAAAj2E,EAAA6Q,GAEA,GADA,kBAAAqlE,KAAArlE,EAAAqlE,EAAAt6E,KAAAsC,KAAA8B,EAAA6Q,KACAskE,GAAAtkE,GAAA,MAAAA,KAEAvM,EAAA,GAAA2xE,EACA7B,GAAAnqE,MAAAkqE,GAAA7vE,MAKA8tE,GAAA,UAAAkC,KAAA3J,EAAAyH,GAAA,UAAAkC,GAAAlC,GAAA,UAAAhI,SAEA2H,GAAAK,GAAA,UAEAL,GAAA3gE,KAAA,WAEA2gE,GAAAzI,EAAAl+D,KAAA,UAIA,IAAA+qE,IAAAlJ,GAAA,eAEAmJ,GAAgD,aAAhD9J,EAAA,WAA4B,MAAAtiE,eAG5BqsE,GAAA,SAAAzM,EAAA5pE,GACA,IACA,MAAA4pE,GAAA5pE,GACG,MAAAuP,MAGH+mE,GAAA,SAAA1M,GACA,GAAAU,GAAA0F,EAAA/D,CACA,YAAAz7D,KAAAo5D,EAAA,mBAAAA,EAAA,OAEA,iBAAAoG,EAAAqG,GAAA/L,EAAAnuE,OAAAytE,GAAAuM,KAAAnG,EAEAoG,GAAA9J,EAAAhC,GAEA,WAAA2B,EAAAK,EAAAhC,KAAA,kBAAAA,GAAAiM,OAAA,YAAAtK,GAKAx9D,KACAA,IAAAw+D,GAAA,oBACAx+D,GAAA,kBACAq8D,EAAA3uE,OAAAS,UAAA,sBACA,iBAAA05E,GAAAp4E,MAAA,MACG,GAGHi0E,GAAA,iBAEAA,GAAA,aAEA,IAkBAqE,KAlBAhN,EAAAzqD,WAoBA03D,KAGA9L,GAAA8L,GAAAxJ,GAAA,uBAAwD,MAAA/uE,OAExD,IAAAw4E,IAAA,SAAAC,EAAAnG,EAAAl3C,GACAq9C,EAAA/5E,UAAAu2E,GAAAsD,IAA4Dn9C,KAAAmxC,EAAA,EAAAnxC,KAC5Dy4C,GAAA4E,EAAAnG,EAAA,cAMAoG,GAAA7H,GAAA,YACA8H,GAAA16E,OAAAS,UAEAk6E,GAAA36E,OAAAilE,gBAAA,SAAAkJ,GAEA,MADAA,GAAAoC,EAAApC,GACAM,EAAAN,EAAAsM,IAAAtM,EAAAsM,IACA,kBAAAtM,GAAA38C,aAAA28C,eAAA38C,YACA28C,EAAA38C,YAAA/wB,UACG0tE,YAAAnuE,QAAA06E,GAAA,MAGHE,GAAA9J,GAAA,YACA+J,QAAAl3E,MAAA,WAAAA,QAKAm3E,GAAA,WAA8B,MAAA/4E,OAE9Bg5E,GAAA,SAAAC,EAAA3G,EAAAmG,EAAAr9C,EAAA89C,EAAAC,EAAAC,GACAZ,GAAAC,EAAAnG,EAAAl3C,EACA,IAeAhU,GAAAtlB,EAAAy2E,EAfAc,EAAA,SAAAC,GACA,IAAAR,IAAAQ,IAAAC,GAAA,MAAAA,GAAAD,EACA,QAAAA,GACA,IAVA,OAWA,IAVA,SAUA,kBAA6C,UAAAb,GAAAz4E,KAAAs5E,IACxC,kBAA4B,UAAAb,GAAAz4E,KAAAs5E,KAEjC1F,EAAAtB,EAAA,YACAkH,EAdA,UAcAN,EACAO,GAAA,EACAF,EAAAN,EAAAv6E,UACAg7E,EAAAH,EAAAV,KAAAU,EAnBA,eAmBAL,GAAAK,EAAAL,GACAS,EAAAD,GAAAL,EAAAH,GACAU,EAAAV,EAAAM,EAAAH,EAAA,WAAAM,MAAArnE,GACAunE,EAAA,SAAAvH,EAAAiH,EAAAhS,SAAAmS,GAwBA,IArBAG,IACAtB,EAAAK,GAAAiB,EAAAn8E,KAAA,GAAAu7E,QACAh7E,OAAAS,WAAA65E,EAAAn9C,OAEAy4C,GAAA0E,EAAA3E,GAAA,GAEA,kBAAA2E,GAAAM,KAAApM,EAAA8L,EAAAM,GAAAE,KAIAS,GAAAE,GAjCA,WAiCAA,EAAA57E,OACA27E,GAAA,EACAE,EAAA,WAAkC,MAAAD,GAAAh8E,KAAAsC,SAGlC84E,IAAAW,IAAAF,EAAAV,MACApM,EAAA8M,EAAAV,GAAAc,GAGArB,GAAAhG,GAAAqH,EACArB,GAAA1E,GAAAmF,GACAG,EAMA,GALA9xD,GACA4gD,OAAAwR,EAAAG,EAAAN,EA9CA,UA+CAz3E,KAAAu3E,EAAAQ,EAAAN,EAhDA,QAiDA9R,QAAAqS,GAEAR,EAAA,IAAAt3E,IAAAslB,GACAtlB,IAAAy3E,IAAA3M,EAAA2M,EAAAz3E,EAAAslB,EAAAtlB,QACKqsE,KAAA3R,EAAA2R,EAAAV,GAAAqL,IAAAW,GAAAnH,EAAAlrD,EAEL,OAAAA,IAGA0yD,GArGA,SAAAC,GACA,gBAAA1M,EAAA5mC,GACA,GAGAzyB,GAAAU,EAHA7V,EAAAoU,OAAAs7D,EAAAlB,IACA7vE,EAAAkxE,EAAAjoC,GACAhpC,EAAAoB,EAAA6F,MAEA,OAAAlH,GAAA,GAAAA,GAAAC,EAAAs8E,EAAA,OAAAznE,IACA0B,EAAAnV,EAAA0W,WAAA/X,GACAwW,EAAA,OAAAA,EAAA,OAAAxW,EAAA,IAAAC,IAAAiX,EAAA7V,EAAA0W,WAAA/X,EAAA,WAAAkX,EAAA,MACAqlE,EAAAl7E,EAAAoJ,OAAAzK,GAAAwW,EACA+lE,EAAAl7E,EAAAmG,MAAAxH,IAAA,GAAAkX,EAAA,OAAAV,EAAA,qBA2FA,EAGAglE,IAAA/lE,OAAA,kBAAA+mE,GACAh6E,KAAA8rB,GAAA7Y,OAAA+mE,GACAh6E,KAAAgsB,GAAA,GAEC,WACD,GAEAiuD,GAFA7N,EAAApsE,KAAA8rB,GACAxc,EAAAtP,KAAAgsB,EAEA,OAAA1c,IAAA88D,EAAA1nE,QAAiCiO,UAAAL,GAAAuqD,MAAA,IACjCod,EAAAH,GAAA1N,EAAA98D,GACAtP,KAAAgsB,IAAAiuD,EAAAv1E,QACUiO,MAAAsnE,EAAApd,MAAA,KAGV,IAAAqd,IAAA,SAAArd,EAAAlqD,GACA,OAAUA,QAAAkqD,WAOVsd,GAAAnB,GAAAlxE,MAAA,iBAAAkyE,EAAAV,GACAt5E,KAAA8rB,GAAA2kD,GAAAuJ,GACAh6E,KAAAgsB,GAAA,EACAhsB,KAAAmsB,GAAAmtD,GAEC,WACD,GAAAlN,GAAApsE,KAAA8rB,GACAwtD,EAAAt5E,KAAAmsB,GACA7c,EAAAtP,KAAAgsB,IACA,QAAAogD,GAAA98D,GAAA88D,EAAA1nE,QACA1E,KAAA8rB,OAAAxZ,GACA4nE,GAAA,IAEA,QAAAZ,EAAAY,GAAA,EAAA5qE,GACA,UAAAgqE,EAAAY,GAAA,EAAA9N,EAAA98D,IACA4qE,GAAA,GAAA5qE,EAAA88D,EAAA98D,MACC,SAGDgpE,IAAA8B,UAAA9B,GAAAxwE,MAEAooE,GAAA,QACAA,GAAA,UACAA,GAAA,UAwCA,QAtCAmK,IAAAtL,GAAA,YACAuL,GAAAvL,GAAA,eACAwL,GAAAjC,GAAAxwE,MAEA0yE,IACAC,aAAA,EACAC,qBAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,eAAA,EACAC,cAAA,EACAC,sBAAA,EACAC,UAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,mBAAA,EACAC,WAAA,EACAC,eAAA,EACAC,cAAA,EACAC,UAAA,EACAC,kBAAA,EACAC,QAAA,EACAC,aAAA,EACAC,eAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,cAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,WAAA,GAGAC,GAAAnL,GAAAmJ,IAAAh9E,GAAA,EAAwDA,GAAAg/E,GAAA93E,OAAwBlH,KAAA,CAChF,GAIAsE,IAJAwwE,GAAAkK,GAAAh/E,IACAi/E,GAAAjC,GAAAlI,IACAoK,GAAAtR,EAAAkH,IACAiH,GAAAmD,OAAAh+E,SAEA,IAAA66E,KACAA,GAAAc,KAAA5N,EAAA8M,GAAAc,GAAAE,IACAhB,GAAAe,KAAA7N,EAAA8M,GAAAe,GAAAhI,IACAgG,GAAAhG,IAAAiI,GACAkC,IAAA,IAAA36E,KAAAq4E,IAAAZ,GAAAz3E,KAAA8qE,EAAA2M,GAAAz3E,GAAAq4E,GAAAr4E,KAAA,GAIAkyE,GAAAhc,EAAA,apD2vhB6Bt6D,KAAKmD,EAAqB1D,EAAoB,GAAGiV,aAAcjV,EAAoB,KAI1G,SAAUI,EAAQD,IqDvukBxB,SAAA+nD,GACA,YA2CA,SAAAs3B,GAAA7+E,GAIA,GAHA,gBAAAA,KACAA,EAAAmV,OAAAnV,IAEA,6BAAAyS,KAAAzS,GACA,SAAAm/D,WAAA,yCAEA,OAAAn/D,GAAA2S,cAGA,QAAAmsE,GAAAjqE,GAIA,MAHA,gBAAAA,KACAA,EAAAM,OAAAN,IAEAA,EAIA,QAAAkqE,GAAA9jC,GACA,GAAA0kB,IACAriC,KAAA,WACA,GAAAzoB,GAAAomC,EAAAx4B,OACA,QAAgBs8C,SAAAvqD,KAAAK,YAUhB,OANAmqE,GAAAC,WACAtf,EAAA58C,OAAA48C,UAAA,WACA,MAAAA,KAIAA,EAGA,QAAAuf,GAAAC,GACAj9E,KAAA6H,OAEAo1E,YAAAD,GACAC,EAAAp7E,QAAA,SAAA8Q,EAAA7U,GACAkC,KAAAk9E,OAAAp/E,EAAA6U,IACO3S,MACF8H,MAAAC,QAAAk1E,GACLA,EAAAp7E,QAAA,SAAAi1D,GACA92D,KAAAk9E,OAAApmB,EAAA,GAAAA,EAAA,KACO92D,MACFi9E,GACLh/E,OAAA46C,oBAAAokC,GAAAp7E,QAAA,SAAA/D,GACAkC,KAAAk9E,OAAAp/E,EAAAm/E,EAAAn/E,KACOkC,MA0DP,QAAAm9E,GAAA/5B,GACA,GAAAA,EAAAg6B,SACA,MAAAp2E,SAAA4a,OAAA,GAAAq7C,WAAA,gBAEA7Z,GAAAg6B,UAAA,EAGA,QAAAC,GAAAC,GACA,UAAAt2E,SAAA,SAAAC,EAAA2a,GACA07D,EAAAC,OAAA,WACAt2E,EAAAq2E,EAAA10D,SAEA00D,EAAAE,QAAA,WACA57D,EAAA07D,EAAAlgE,UAKA,QAAAqgE,GAAAC,GACA,GAAAJ,GAAA,GAAAK,YACAvnB,EAAAinB,EAAAC,EAEA,OADAA,GAAAM,kBAAAF,GACAtnB,EAGA,QAAAynB,GAAAH,GACA,GAAAJ,GAAA,GAAAK,YACAvnB,EAAAinB,EAAAC,EAEA,OADAA,GAAAQ,WAAAJ,GACAtnB,EAGA,QAAA2nB,GAAAvkB,GAIA,OAHAwkB,GAAA,GAAAC,YAAAzkB,GACAxvB,EAAA,GAAAliC,OAAAk2E,EAAAt5E,QAEAlH,EAAA,EAAmBA,EAAAwgF,EAAAt5E,OAAiBlH,IACpCwsC,EAAAxsC,GAAAyV,OAAA2gD,aAAAoqB,EAAAxgF,GAEA,OAAAwsC,GAAAl9B,KAAA,IAGA,QAAAoxE,GAAA1kB,GACA,GAAAA,EAAAx0D,MACA,MAAAw0D,GAAAx0D,MAAA,EAEA,IAAAg5E,GAAA,GAAAC,YAAAzkB,EAAA2kB,WAEA,OADAH,GAAA94E,IAAA,GAAA+4E,YAAAzkB,IACAwkB,EAAAI,OAIA,QAAAC,KA0FA,MAzFAr+E,MAAAo9E,UAAA,EAEAp9E,KAAAs+E,UAAA,SAAAl7B,GAEA,GADApjD,KAAAu+E,UAAAn7B,EACAA,EAEO,mBAAAA,GACPpjD,KAAAw+E,UAAAp7B,MACO,IAAA05B,EAAAY,MAAAe,KAAA//E,UAAAggF,cAAAt7B,GACPpjD,KAAA2+E,UAAAv7B,MACO,IAAA05B,EAAA8B,UAAAC,SAAAngF,UAAAggF,cAAAt7B,GACPpjD,KAAA8+E,cAAA17B,MACO,IAAA05B,EAAAiC,cAAAC,gBAAAtgF,UAAAggF,cAAAt7B,GACPpjD,KAAAw+E,UAAAp7B,EAAA/1C,eACO,IAAAyvE,EAAAmC,aAAAnC,EAAAY,MAAAwB,EAAA97B,GACPpjD,KAAAm/E,iBAAAjB,EAAA96B,EAAAg7B,QAEAp+E,KAAAu+E,UAAA,GAAAE,OAAAz+E,KAAAm/E,uBACO,KAAArC,EAAAmC,cAAAG,YAAA1gF,UAAAggF,cAAAt7B,KAAAi8B,EAAAj8B,GAGP,SAAAjzC,OAAA,4BAFAnQ,MAAAm/E,iBAAAjB,EAAA96B,OAdApjD,MAAAw+E,UAAA,EAmBAx+E,MAAAi9E,QAAA5+E,IAAA,kBACA,gBAAA+kD,GACApjD,KAAAi9E,QAAA/3E,IAAA,2CACSlF,KAAA2+E,WAAA3+E,KAAA2+E,UAAAr/E,KACTU,KAAAi9E,QAAA/3E,IAAA,eAAAlF,KAAA2+E,UAAAr/E,MACSw9E,EAAAiC,cAAAC,gBAAAtgF,UAAAggF,cAAAt7B,IACTpjD,KAAAi9E,QAAA/3E,IAAA,oEAKA43E,EAAAY,OACA19E,KAAA09E,KAAA,WACA,GAAA9gB,GAAAugB,EAAAn9E,KACA,IAAA48D,EACA,MAAAA,EAGA,IAAA58D,KAAA2+E,UACA,MAAA33E,SAAAC,QAAAjH,KAAA2+E,UACS,IAAA3+E,KAAAm/E,iBACT,MAAAn4E,SAAAC,QAAA,GAAAw3E,OAAAz+E,KAAAm/E,mBACS,IAAAn/E,KAAA8+E,cACT,SAAA3uE,OAAA,uCAEA,OAAAnJ,SAAAC,QAAA,GAAAw3E,OAAAz+E,KAAAw+E,cAIAx+E,KAAAi/E,YAAA,WACA,MAAAj/E,MAAAm/E,iBACAhC,EAAAn9E,OAAAgH,QAAAC,QAAAjH,KAAAm/E,kBAEAn/E,KAAA09E,OAAAx7E,KAAAu7E,KAKAz9E,KAAA6W,KAAA,WACA,GAAA+lD,GAAAugB,EAAAn9E,KACA,IAAA48D,EACA,MAAAA,EAGA,IAAA58D,KAAA2+E,UACA,MAAAd,GAAA79E,KAAA2+E,UACO,IAAA3+E,KAAAm/E,iBACP,MAAAn4E,SAAAC,QAAA82E,EAAA/9E,KAAAm/E,kBACO,IAAAn/E,KAAA8+E,cACP,SAAA3uE,OAAA,uCAEA,OAAAnJ,SAAAC,QAAAjH,KAAAw+E,YAIA1B,EAAA8B,WACA5+E,KAAA4+E,SAAA,WACA,MAAA5+E,MAAA6W,OAAA3U,KAAA8hD,KAIAhkD,KAAAs/E,KAAA,WACA,MAAAt/E,MAAA6W,OAAA3U,KAAAgL,KAAAs+B,QAGAxrC,KAMA,QAAAu/E,GAAA9mC,GACA,GAAA+mC,GAAA/mC,EAAA7B,aACA,OAAAxvB,GAAA1kB,QAAA88E,IAAA,EAAAA,EAAA/mC,EAGA,QAAAgnC,GAAA7qB,EAAAp1D,GACAA,OACA,IAAA4jD,GAAA5jD,EAAA4jD,IAEA,IAAAwR,YAAA6qB,GAAA,CACA,GAAA7qB,EAAAwoB,SACA,SAAAngB,WAAA,eAEAj9D,MAAA0/E,IAAA9qB,EAAA8qB,IACA1/E,KAAA2/E,YAAA/qB,EAAA+qB,YACAngF,EAAAy9E,UACAj9E,KAAAi9E,QAAA,GAAAD,GAAApoB,EAAAqoB,UAEAj9E,KAAAy4C,OAAAmc,EAAAnc,OACAz4C,KAAAmiD,KAAAyS,EAAAzS,KACAiB,GAAA,MAAAwR,EAAA2pB,YACAn7B,EAAAwR,EAAA2pB,UACA3pB,EAAAwoB,UAAA,OAGAp9E,MAAA0/E,IAAAzsE,OAAA2hD,EAWA,IARA50D,KAAA2/E,YAAAngF,EAAAmgF,aAAA3/E,KAAA2/E,aAAA,QACAngF,EAAAy9E,SAAAj9E,KAAAi9E,UACAj9E,KAAAi9E,QAAA,GAAAD,GAAAx9E,EAAAy9E,UAEAj9E,KAAAy4C,OAAA8mC,EAAA//E,EAAAi5C,QAAAz4C,KAAAy4C,QAAA,OACAz4C,KAAAmiD,KAAA3iD,EAAA2iD,MAAAniD,KAAAmiD,MAAA,KACAniD,KAAA4/E,SAAA,MAEA,QAAA5/E,KAAAy4C,QAAA,SAAAz4C,KAAAy4C,SAAA2K,EACA,SAAA6Z,WAAA,4CAEAj9D,MAAAs+E,UAAAl7B,GAOA,QAAAY,GAAAZ,GACA,GAAAy8B,GAAA,GAAAhB,SASA,OARAz7B,GAAAnrB,OAAArvB,MAAA,KAAA/G,QAAA,SAAA6xD,GACA,GAAAA,EAAA,CACA,GAAA9qD,GAAA8qD,EAAA9qD,MAAA,KACA9K,EAAA8K,EAAA2X,QAAA4e,QAAA,WACAxsB,EAAA/J,EAAAkE,KAAA,KAAAqyB,QAAA,UACA0gD,GAAA3C,OAAA4C,mBAAAhiF,GAAAgiF,mBAAAntE,OAGAktE,EAGA,QAAAE,GAAAC,GACA,GAAA/C,GAAA,GAAAD,EAYA,OATAgD,GAAA7gD,QAAA,oBACAv2B,MAAA,SAAA/G,QAAA,SAAAo+E,GACA,GAAAlyE,GAAAkyE,EAAAr3E,MAAA,KACA9G,EAAAiM,EAAAwS,QAAA0X,MACA,IAAAn2B,EAAA,CACA,GAAA6Q,GAAA5E,EAAAjB,KAAA,KAAAmrB,MACAglD,GAAAC,OAAAp7E,EAAA6Q,MAGAsqE,EAKA,QAAAiD,GAAAC,EAAA3gF,GACAA,IACAA,MAGAQ,KAAAV,KAAA,UACAU,KAAAogF,WAAA9tE,KAAA9S,EAAA4gF,OAAA,IAAA5gF,EAAA4gF,OACApgF,KAAAqgF,GAAArgF,KAAAogF,QAAA,KAAApgF,KAAAogF,OAAA,IACApgF,KAAAsgF,WAAA,cAAA9gF,KAAA8gF,WAAA,KACAtgF,KAAAi9E,QAAA,GAAAD,GAAAx9E,EAAAy9E,SACAj9E,KAAA0/E,IAAAlgF,EAAAkgF,KAAA,GACA1/E,KAAAs+E,UAAA6B,GAhYA,IAAA96B,EAAAk7B,MAAA,CAIA,GAAAzD,IACAiC,aAAA,mBAAA15B,GACA03B,SAAA,UAAA13B,IAAA,YAAAxkC,QACA68D,KAAA,cAAAr4B,IAAA,QAAAA,IAAA,WACA,IAEA,MADA,IAAAo5B,OACA,EACO,MAAAptE,GACP,aAGAutE,SAAA,YAAAv5B,GACA45B,YAAA,eAAA55B,GAGA,IAAAy3B,EAAAmC,YACA,GAAAuB,IACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGAtB,EAAA,SAAAx9E,GACA,MAAAA,IAAA++E,SAAA/hF,UAAAggF,cAAAh9E,IAGA29E,EAAAD,YAAAsB,QAAA,SAAAh/E,GACA,MAAAA,IAAA8+E,EAAA99E,QAAAzE,OAAAS,UAAA2O,SAAA3P,KAAAgE,KAAA,EAyDAs7E,GAAAt+E,UAAAw+E,OAAA,SAAAp/E,EAAA6U,GACA7U,EAAA6+E,EAAA7+E,GACA6U,EAAAiqE,EAAAjqE,EACA,IAAA6iB,GAAAx1B,KAAA6H,IAAA/J,EACAkC,MAAA6H,IAAA/J,GAAA03B,IAAA,IAAA7iB,KAGAqqE,EAAAt+E,UAAA,gBAAAZ,SACAkC,MAAA6H,IAAA80E,EAAA7+E,KAGAk/E,EAAAt+E,UAAAL,IAAA,SAAAP,GAEA,MADAA,GAAA6+E,EAAA7+E,GACAkC,KAAAue,IAAAzgB,GAAAkC,KAAA6H,IAAA/J,GAAA,MAGAk/E,EAAAt+E,UAAA6f,IAAA,SAAAzgB,GACA,MAAAkC,MAAA6H,IAAAlJ,eAAAg+E,EAAA7+E,KAGAk/E,EAAAt+E,UAAAwG,IAAA,SAAApH,EAAA6U,GACA3S,KAAA6H,IAAA80E,EAAA7+E,IAAA8+E,EAAAjqE,IAGAqqE,EAAAt+E,UAAAmD,QAAA,SAAA0sB,EAAA+tC,GACA,OAAAx+D,KAAAkC,MAAA6H,IACA7H,KAAA6H,IAAAlJ,eAAAb,IACAywB,EAAA7wB,KAAA4+D,EAAAt8D,KAAA6H,IAAA/J,KAAAkC,OAKAg9E,EAAAt+E,UAAAkD,KAAA,WACA,GAAAm3C,KAEA,OADA/4C,MAAA6B,QAAA,SAAA8Q,EAAA7U,GAAwCi7C,EAAAp2C,KAAA7E,KACxC++E,EAAA9jC,IAGAikC,EAAAt+E,UAAAspE,OAAA,WACA,GAAAjvB,KAEA,OADA/4C,MAAA6B,QAAA,SAAA8Q,GAAkComC,EAAAp2C,KAAAgQ,KAClCkqE,EAAA9jC,IAGAikC,EAAAt+E,UAAA6oE,QAAA,WACA,GAAAxuB,KAEA,OADA/4C,MAAA6B,QAAA,SAAA8Q,EAAA7U,GAAwCi7C,EAAAp2C,MAAA7E,EAAA6U,MACxCkqE,EAAA9jC,IAGA+jC,EAAAC,WACAC,EAAAt+E,UAAAmiB,OAAA48C,UAAAuf,EAAAt+E,UAAA6oE,QAqJA,IAAAngD,IAAA,6CA4CAq4D,GAAA/gF,UAAA2uB,MAAA,WACA,UAAAoyD,GAAAz/E,MAA8BojD,KAAApjD,KAAAu+E,aAgC9BF,EAAA3gF,KAAA+hF,EAAA/gF,WAgBA2/E,EAAA3gF,KAAAwiF,EAAAxhF,WAEAwhF,EAAAxhF,UAAA2uB,MAAA,WACA,UAAA6yD,GAAAlgF,KAAAu+E,WACA6B,OAAApgF,KAAAogF,OACAE,WAAAtgF,KAAAsgF,WACArD,QAAA,GAAAD,GAAAh9E,KAAAi9E,SACAyC,IAAA1/E,KAAA0/E,OAIAQ,EAAA9iE,MAAA,WACA,GAAAujE,GAAA,GAAAT,GAAA,MAAuCE,OAAA,EAAAE,WAAA,IAEvC,OADAK,GAAArhF,KAAA,QACAqhF,EAGA,IAAAC,IAAA,oBAEAV,GAAAW,SAAA,SAAAnB,EAAAU,GACA,QAAAQ,EAAAl+E,QAAA09E,GACA,SAAArN,YAAA,sBAGA,WAAAmN,GAAA,MAA+BE,SAAAnD,SAA0B6D,SAAApB,MAGzDr6B,EAAA23B,UACA33B,EAAAo6B,UACAp6B,EAAA66B,WAEA76B,EAAAk7B,MAAA,SAAA3rB,EAAA7rD,GACA,UAAA/B,SAAA,SAAAC,EAAA2a,GACA,GAAAm/D,GAAA,GAAAtB,GAAA7qB,EAAA7rD,GACAi4E,EAAA,GAAAC,eAEAD,GAAAzD,OAAA,WACA,GAAA/9E,IACA4gF,OAAAY,EAAAZ,OACAE,WAAAU,EAAAV,WACArD,QAAA8C,EAAAiB,EAAAE,yBAAA,IAEA1hF,GAAAkgF,IAAA,eAAAsB,KAAAG,YAAA3hF,EAAAy9E,QAAA5+E,IAAA,gBACA,IAAA+kD,GAAA,YAAA49B,KAAAL,SAAAK,EAAAI,YACAn6E,GAAA,GAAAi5E,GAAA98B,EAAA5jD,KAGAwhF,EAAAxD,QAAA,WACA57D,EAAA,GAAAq7C,WAAA,4BAGA+jB,EAAAK,UAAA,WACAz/D,EAAA,GAAAq7C,WAAA,4BAGA+jB,EAAAr9B,KAAAo9B,EAAAtoC,OAAAsoC,EAAArB,KAAA,GAEA,YAAAqB,EAAApB,YACAqB,EAAAM,iBAAA,EACO,SAAAP,EAAApB,cACPqB,EAAAM,iBAAA,GAGA,gBAAAN,IAAAlE,EAAAY,OACAsD,EAAAO,aAAA,QAGAR,EAAA9D,QAAAp7E,QAAA,SAAA8Q,EAAA7U,GACAkjF,EAAAQ,iBAAA1jF,EAAA6U,KAGAquE,EAAAS,SAAA,KAAAV,EAAAxC,UAAA,KAAAwC,EAAAxC,cAGAl5B,EAAAk7B,MAAAmB,UAAA,IACC,mBAAAr8B,WAAArlD,OrD8ukBK,SAAUzC,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIwkF,GAAmDxkF,EAAoB,GACZA,GAAoBmB,EAAEqjF,IAsBpG,SAAUpkF,EAAQD,EAASH,GAEjC,cAC4B,SAASirD,GsD3ijBrC,QAAAw5B,GAAAC,GAGA,OAFAC,GAAA,GACAC,EAAAF,EAAAj5E,MAAA,KACApL,EAAA,EAAmBA,EAAAukF,EAAAr9E,OAAmBlH,IACtC,GAAAukF,EAAAvkF,GAAAkH,OAAA,GACA,GAAAs9E,GAAAD,EAAAvkF,EACA,KACAwkF,EAAAlC,mBAAAkC,EAAA7iD,QAAA,YAEA,MAAA9tB,IACAywE,GAAA,IAAAE,EAGA,MAAAF,GAMA,QAAAG,GAAAC,GACA,GAAAC,KACAD,GAAAxP,WAAA,OACAwP,IAAAv5C,UAAA,GAEA,QAAA3c,GAAA,EAAAo2D,EAAAF,EAAAt5E,MAAA,KAAiDojB,EAAAo2D,EAAA19E,OAAgBsnB,IAAA,CACjE,GAAAq2D,GAAAD,EAAAp2D,EACA,QAAAq2D,EAAA39E,OAAA,CAGA,GAAA49E,GAAAD,EAAAz5E,MAAA,IACA,KAAA05E,EAAA59E,OACAy9E,EAAArC,mBAAAwC,EAAA,KAAAxC,mBAAAwC,EAAA,IAGA3oD,EAAA,0BAAA0oD,EAAA,eAAAH,EAAA,MAGA,MAAAC,GAknEA,QAAAI,GAAA57C,EAAA/M,GACA,MAAA4oD,GAAA77C,EAAA7oC,KAAA87B,EAAA97B,MAEA,QAAA2kF,GAAA97C,EAAA/M,GACA,MAAA4oD,GAAA77C,EAAA/M,GAyfA,QAAA8oD,GAAApD,EAAAqD,GAEA,OADA,KAAAA,IAA8BA,EAAA,MAC9B,OAAArD,EACA,MAAAsD,IAAAC,UAaA,IAXA,gBAAAvD,IAAA,aAAAA,KACAqD,EAAArD,EAAA,cAEArjC,EAAAkX,OAAA,OAAAwvB,GACA,gBAAAA,IACA,gBAAAA,IACA,gBAAAA,IAAA,OAAAA,GAAA,sCAAAA,IACA,gBAAArD,IAAA,UAAAA,IAAA,OAAAA,EAAA,YACAA,IAAA,WAGA,gBAAAA,IAAA,OAAAA,GAAA,CAEA,UAAAwD,IADAxD,EACAoD,EAAAC,IAEA,GAAArD,YAAAx3E,SAAAi7E,GA2BA,CACA,GAAAC,GAAAJ,GAAAC,WACAI,EAAA3D,CAWA,OAVArjC,GAAAp6C,QAAAohF,EAAA,SAAAnhF,EAAAohF,GACA,GAAAjnC,EAAA4R,SAAAo1B,EAAAnhF,IACA,MAAAA,EAAA6mC,UAAA,MAEA,GAAAtW,GAAAqwD,EAAAQ,IACA7wD,EAAA8wD,cAAA9wD,EAAAwlC,YACAmrB,IAAAI,qBAAAthF,EAAAuwB,OAIA2wD,EAAAK,eAAAX,EAAAC,IAvCA,GAAAW,MACAC,GAAA,EACAC,EAAAlE,CAYA,IAXArjC,EAAAp6C,QAAA2hF,EAAA,SAAA1hF,EAAAgE,GACA,mBAAAhE,IAAA,MAAAA,EAAA6mC,UAAA,MAEA,GAAAtW,GAAAqwD,EAAAc,EAAA1hF,GACAuwB,GAAAwlC,YACA0rB,EACAA,IAAAlxD,EAAAoxD,cAAA5rB,UACAyrB,EAAA3gF,KAAA,GAAA+gF,IAAA5hF,EAAAuwB,QAIA,GAAAixD,EAAA5+E,OACA,MAAAk+E,IAAAC,UAEA,IAAAc,GAAAC,GAAAN,EAAAf,EAAA,SAAAsB,GAA6F,MAAAA,GAAA/lF,MAAyB2kF,EACtH,IAAAc,EAAA,CACA,GAAAO,GAAAF,GAAAN,EAAAS,GAAAC,aACA,WAAApB,IAAAe,EAAAjB,EAAAC,GAAA,GAAAsB,KAAsFC,YAAAJ,IAAiCI,YAAAH,MAGvH,UAAAnB,IAAAe,EAAAjB,EAAAC,GAAAsB,GAAAE,SA4mWA,QAAAC,GAAAC,GAEA,GAAA1/E,GAAA0/E,EAAAh1B,SAAAnB,gBAAA,oBAAAP,EAAA22B,EAAA5E,GAA+F,MAAA6E,IAAAC,cAAAC,gBAAA92B,EAAA+xB,KAG/FgF,aACAC,SACAC,YACAC,gBACAx1B,YACAy1B,eACAC,gBACK,QACL9oC,GAAAwa,cACAl5D,EAAAD,QAAAqH,GAz+dA1G,OAAAC,eAAAZ,EAAA,cAA8CqV,OAAA,GAI9C,IA46DAqyE,GAqFAC,EAgDAC,EAoQAC,EACAC,EAi2BAC,EAkMAxC,EAz1GA5mC,EAAA9+C,EAAA,IACAmoF,EAAAnoF,EAAA,IACA41D,EAAA51D,EAAA,IACAq0D,EALA,SAAAyY,GAA+B,MAAAA,IAAA,gBAAAA,IAAA,WAAAA,KAAA,QAAAA,GAK/B9sE,EAAA,KA2BAooF,EAAA,WAIA,QAAAA,GAAAC,GACAxlF,KAAAwlF,cAEAxlF,KAAAylF,QAAA,YA2CA,MArCAF,GAAA7mF,UAAAwG,IAAA,SAAApD,EAAA6Q,GACA,MAAAA,EACA3S,KAAAwlF,YAAAE,WAAA1lF,KAAA2lF,cAAA7jF,IAGA9B,KAAAwlF,YAAAle,QAAAtnE,KAAA2lF,cAAA7jF,GAAAm6C,EAAA9uC,UAAAwF,KAOA4yE,EAAA7mF,UAAAL,IAAA,SAAAyD,GACA,GAAA8jF,GAAA5lF,KAAAwlF,YAAAnc,QAAArpE,KAAA2lF,cAAA7jF,GACA,cAAA8jF,EACA,KAGA3pC,EAAA8V,SAAA6zB,IAMAL,EAAA7mF,UAAA6P,OAAA,SAAAzM,GACA9B,KAAAwlF,YAAAE,WAAA1lF,KAAA2lF,cAAA7jF,KAMAyjF,EAAA7mF,UAAAinF,cAAA,SAAA7nF,GACA,MAAAkC,MAAAylF,QAAA3nF,GAEAynF,EAAA7mF,UAAA2O,SAAA,WACA,MAAArN,MAAAwlF,YAAAn4E,YAEAk4E,KAwBAM,EAAA,WACA,QAAAA,KACA7lF,KAAA8lF,UACA9lF,KAAA+lF,mBAAA,EAmBA,MAjBAF,GAAAnnF,UAAAwG,IAAA,SAAApD,EAAA6Q,GACA,MAAAA,QACA3S,MAAA8lF,OAAAhkF,GAGA9B,KAAA8lF,OAAAhkF,GAAA6Q,GAGAkzE,EAAAnnF,UAAAL,IAAA,SAAAyD,GACA,MAAAm6C,GAAA4R,SAAA7tD,KAAA8lF,OAAAhkF,GACA9B,KAAA8lF,OAAAhkF,GAEA,MAEA+jF,EAAAnnF,UAAA6P,OAAA,SAAAzM,SACA9B,MAAA8lF,OAAAhkF,IAEA+jF,KA2BAG,EAAA,SAAAC,GACA,IAGA,sBAAAj9E,aACA,KAAAA,OAAAi9E,GAAA,CAEA,GAAAC,GAAAl9E,OAAAi9E,EAGA,OAFAC,GAAA5e,QAAA,6BACA4e,EAAAR,WAAA,qBACA,GAAAH,GAAAW,IAGA,MAAA70E,IAGA,UAAAw0E,IAGAM,EAAAH,EAAA,gBAEAI,EAAAJ,EAAA,kBAiBAK,EAAA,GAAAf,GAAAgB,OAAA,sBAKAC,EAAA,WACA,GAAA/4E,GAAA,CACA,mBACA,MAAAA,SAQAg5E,EAAA,SAAA10E,GACA,GAAAmkD,GAAAha,EAAAsX,kBAAAzhD,GACA00E,EAAA,GAAAvqC,GAAA4c,IACA2tB,GAAArkF,OAAA8zD,EACA,IAAAwwB,GAAAD,EAAAxsB,QACA,OAAA/d,GAAAgY,OAAAU,gBAAA8xB,IAOAC,EAAA,WAEA,OADAC,MACA36D,EAAA,EAAoBA,EAAAlgB,UAAApH,OAAuBsnB,IAC3C26D,EAAA36D,GAAAlgB,UAAAkgB,EAGA,QADAqnC,GAAA,GACA71D,EAAA,EAAmBA,EAAAmpF,EAAAjiF,OAAqBlH,IACxCsK,MAAAC,QAAA4+E,EAAAnpF,KACAmpF,EAAAnpF,IACA,gBAAAmpF,GAAAnpF,IACA,gBAAAmpF,GAAAnpF,GAAAkH,OACA2uD,GAAAqzB,EAAA36E,MAAA,KAAA46E,EAAAnpF,IAEA,gBAAAmpF,GAAAnpF,GACA61D,GAAApX,EAAA9uC,UAAAw5E,EAAAnpF,IAGA61D,GAAAszB,EAAAnpF,GAEA61D,GAAA,GAEA,OAAAA,IAMAuzB,EAAA,KAMAC,GAAA,EAMAhC,EAAA,SAAAiC,EAAAC,GACA9qC,EAAAkX,QAAA4zB,IAAA,IAAAD,IAAA,IAAAA,EAAA,+CACA,IAAAA,GACAT,EAAAW,SAAA1B,EAAA2B,SAAAC,QACAN,EAAAP,EAAAr1B,IAAA/kD,KAAAo6E,GACAU,GACAX,EAAAlhF,IAAA,uBAEA,kBAAA4hF,GACAF,EAAAE,GAGAF,EAAA,KACAR,EAAA73E,OAAA,qBAOAyiD,EAAA,WAEA,OADA21B,MACA36D,EAAA,EAAoBA,EAAAlgB,UAAApH,OAAuBsnB,IAC3C26D,EAAA36D,GAAAlgB,UAAAkgB,EAOA,KALA,IAAA66D,IACAA,GAAA,EACA,OAAAD,IAAA,IAAAR,EAAA/nF,IAAA,oBACAwmF,GAAA,IAEA+B,EAAA,CACA,GAAAvzB,GAAAqzB,EAAA36E,MAAA,KAAA46E,EACAC,GAAAvzB,KAOA8zB,EAAA,SAAAC,GACA,kBAEA,OADAT,MACA36D,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C26D,EAAA36D,GAAAlgB,UAAAkgB,EAEAglC,GAAAjlD,UAAA,IAAAq7E,GAAAxmF,OAAA+lF,MAMAvpE,EAAA,WAEA,OADAupE,MACA36D,EAAA,EAAoBA,EAAAlgB,UAAApH,OAAuBsnB,IAC3C26D,EAAA36D,GAAAlgB,UAAAkgB,EAEA,IAAAqnC,GAAA,4BAAAqzB,EAAA36E,UAAA,GAAA46E,EACAN,GAAAjpE,MAAAi2C,IAKAg0B,EAAA,WAEA,OADAV,MACA36D,EAAA,EAAoBA,EAAAlgB,UAAApH,OAAuBsnB,IAC3C26D,EAAA36D,GAAAlgB,UAAAkgB,EAEA,IAAAqnC,GAAA,yBAAAqzB,EAAA36E,UAAA,GAAA46E,EAEA,MADAN,GAAAjpE,MAAAi2C,GACA,GAAAljD,OAAAkjD,IAKA15B,EAAA,WAEA,OADAgtD,MACA36D,EAAA,EAAoBA,EAAAlgB,UAAApH,OAAuBsnB,IAC3C26D,EAAA36D,GAAAlgB,UAAAkgB,EAEA,IAAAqnC,GAAA,qBAAAqzB,EAAA36E,UAAA,GAAA46E,EACAN,GAAA1sD,KAAA05B,IAMAi0B,EAAA,WAEA,mBAAAt+E,SACAA,OAAA83E,UACA93E,OAAA83E,SAAAyG,WACA,IAAAv+E,OAAA83E,SAAAyG,SAAA7kF,QAAA,WACAi3B,EAAA,8FASA6tD,EAAA,SAAAxjF,GACA,sBAAAA,KACAA,MACAA,GAAA0E,OAAA++E,mBACAzjF,GAAA0E,OAAAg/E,oBAKAC,EAAA,SAAAhmF,GACA,GAAAs6C,EAAAwa,aAAA,aAAAtoD,SAAAy5E,WACAjmF,QAEA,CAGA,GAAAkmF,IAAA,EACAC,EAAA,WACA,IAAA35E,SAAAi1C,KAEA,WADAphC,YAAA8lE,EAAA50E,KAAAC,MAAA,IAGA00E,KACAA,GAAA,EACAlmF,KAGAwM,UAAAmpB,kBACAnpB,SAAAmpB,iBAAA,mBAAAwwD,GAAA,GAEA9+E,OAAAsuB,iBAAA,OAAAwwD,GAAA,IAEA35E,SAAAs1D,cAEAt1D,SAAAs1D,YAAA,gCACA,aAAAt1D,SAAAy5E,YACAE,MAGA9+E,OAAAy6D,YAAA,SAAAqkB,MAWAC,EAAA,aAKAC,EAAA,aAOAxF,EAAA,SAAAxuE,EAAAU,GACA,GAAAV,IAAAU,EACA,QAEA,IAAAV,IAAA+zE,GAAArzE,IAAAszE,EACA,QAEA,IAAAtzE,IAAAqzE,GAAA/zE,IAAAg0E,EACA,QAGA,IAAAC,GAAAC,GAAAl0E,GAAAm0E,EAAAD,GAAAxzE,EACA,eAAAuzE,EACA,OAAAE,EACAF,EAAAE,GAAA,EAAAn0E,EAAAtP,OAAAgQ,EAAAhQ,OAAAujF,EAAAE,GAGA,EAGA,OAAAA,EACA,EAGAn0E,EAAAU,GAAA,KASA0zE,EAAA,SAAAp0E,EAAAU,GACA,MAAAV,KAAAU,EACA,EAEAV,EAAAU,GACA,EAGA,GAQA2zE,EAAA,SAAAvmF,EAAAJ,GACA,GAAAA,GAAAI,IAAAJ,GACA,MAAAA,GAAAI,EAGA,UAAAqO,OAAA,yBAAArO,EAAA,gBAAAm6C,EAAA9uC,UAAAzL,KAOA4mF,EAAA,SAAA5mF,GACA,mBAAAA,IAAA,OAAAA,EACA,MAAAu6C,GAAA9uC,UAAAzL,EACA,IAAAE,KACA,QAAAg4D,KAAAl4D,GACAE,EAAAe,KAAAi3D,EAGAh4D,GAAAykB,MAEA,QADAvkB,GAAA,IACAtE,EAAA,EAAmBA,EAAAoE,EAAA8C,OAAiBlH,IACpC,IAAAA,IACAsE,GAAA,KACAA,GAAAm6C,EAAA9uC,UAAAvL,EAAApE,IACAsE,GAAA,IACAA,GAAAwmF,EAAA5mF,EAAAE,EAAApE,IAGA,OADAsE,IAAA,KASAymF,EAAA,SAAAz2E,EAAA02E,GACA,GAAA38E,GAAAiG,EAAApN,MACA,IAAAmH,GAAA28E,EACA,OAAA12E,EAGA,QADA22E,MACA7qF,EAAA,EAAmBA,EAAAiO,EAASjO,GAAA4qF,EAC5B5qF,EAAA4qF,EAAA38E,EACA48E,EAAA9lF,KAAAmP,EAAA62B,UAAA/qC,EAAAiO,IAGA48E,EAAA9lF,KAAAmP,EAAA62B,UAAA/qC,IAAA4qF,GAGA,OAAAC,IAQAC,EAAA,SAAAhnF,EAAAC,GACA,GAAAmG,MAAAC,QAAArG,GACA,OAAAlE,GAAA,EAAuBA,EAAAkE,EAAAgD,SAAgBlH,EACvCmE,EAAAnE,EAAAkE,EAAAlE,QAUAy+C,GAAAp6C,QAAAH,EAAA,SAAAI,EAAAG,GAA+C,MAAAN,GAAAM,EAAAH,MAU/C6mF,EAAA,SAAA99E,GACAoxC,EAAAkX,QAAAq0B,EAAA38E,GAAA,sBACA,IACAhM,GAAAwS,EAAA2mD,EAAA4wB,EAAAprF,EAAAqrF,EAAA/2E,CAyBA,KAtBA,IAAAjH,GACAwG,EAAA,EACA2mD,EAAA,EACAn5D,EAAA,EAAAgM,IAAAioE,IAAA,MAGAj0E,EAAAgM,EAAA,EACAA,EAAAqI,KAAA41E,IAAAj+E,GACAA,GAAAqI,KAAA61E,IAAA,UAEAH,EAAA11E,KAAAy7D,IAAAz7D,KAAAC,MAAAD,KAAA89C,IAAAnmD,GAAAqI,KAAA81E,KAbA,MAcA33E,EAAAu3E,EAdA,KAeA5wB,EAAA9kD,KAAA+1E,MAAAp+E,EAAAqI,KAAA61E,IAAA,EAhBA,GAgBAH,GAAA11E,KAAA61E,IAAA,EAhBA,OAoBA13E,EAAA,EACA2mD,EAAA9kD,KAAA+1E,MAAAp+E,EAAAqI,KAAA61E,IAAA,YAIAF,KACArrF,EA1BA,GA0BmBA,EAAGA,GAAA,EACtBqrF,EAAAlmF,KAAAq1D,EAAA,OACAA,EAAA9kD,KAAAC,MAAA6kD,EAAA,EAEA,KAAAx6D,EA9BA,GA8BmBA,EAAGA,GAAA,EACtBqrF,EAAAlmF,KAAA0O,EAAA,OACAA,EAAA6B,KAAAC,MAAA9B,EAAA,EAEAw3E,GAAAlmF,KAAA9D,EAAA,KACAgqF,EAAAK,UACAp3E,EAAA+2E,EAAA/7E,KAAA,GAEA,IAAAq8E,GAAA,EACA,KAAA3rF,EAAA,EAAeA,EAAA,GAAQA,GAAA,GACvB,GAAA4rF,GAAA/2C,SAAAvgC,EAAAu3E,OAAA7rF,EAAA,MAAA6P,SAAA,GACA,KAAA+7E,EAAA1kF,SACA0kF,EAAA,IAAAA,GACAD,GAAAC,EAEA,MAAAD,GAAA14E,eAOA64E,EAAA,WACA,wBAAAtgF,UACAA,OAAA,SACAA,OAAA,kBACA,UAAAuH,KAAAvH,OAAA83E,SAAA3qC,QAMAozC,EAAA,WAEA,sBAAAC,UAAA,gBAAAA,SAAAC,IAQAC,EAAA,SAAAttD,EAAAjJ,GACA,GAAAtR,GAAA,eACA,aAAAua,EACAva,EACA,0FAGA,qBAAAua,EACAva,EAAA,6DAEA,eAAAua,IACAva,EAAA,6BAEA,IAAAzE,GAAA,GAAAjN,OAAAisB,EAAA,OAAAjJ,EAAA/wB,KAAAiL,WAAA,KAAAwU,EAEA,OADAzE,GAAAgf,OAAAwa,cACAx5B,GAOAusE,EAAA,GAAA//C,QAAA,iBAMAs+C,GAAA,SAAAp2E,GACA,GAAA63E,EAAAp5E,KAAAuB,GAAA,CACA,GAAA83E,GAAAlhF,OAAAoJ,EACA,IAAA83E,IAAA,YAAAA,GAAA,WACA,MAAAA,GAGA,aAmBAC,GAAA,SAAAloF,GACA,IACAA,IAEA,MAAA0P,GAEA2Q,WAAA,WAKA,GAAA8mB,GAAAz3B,EAAAy3B,OAAA,EAEA,MADAnP,GAAA,yCAAAmP,GACAz3B,GACS6B,KAAAC,MAAA,MAMT22E,GAAA,WASA,OARA,gBAAA9gF,SACAA,OAAA,WACAA,OAAA,qBACA,IAKA2pE,OAAA,gGAWAoX,GAAA,SAAApoF,EAAAqoF,GACA,GAAA/nE,GAAAD,WAAArgB,EAAAqoF,EAIA,OAHA,gBAAA/nE,MAAA,OACAA,EAAA,QAEAA,GAuBAgoE,GAAA,WAMA,QAAAA,GAAAC,EAAAC,GACA,YAAAA,EAAA,CACAnqF,KAAAoqF,QAAAF,EAAAthF,MAAA,IAGA,QADAyhF,GAAA,EACA7sF,EAAA,EAA2BA,EAAAwC,KAAAoqF,QAAA1lF,OAAyBlH,IACpDwC,KAAAoqF,QAAA5sF,GAAAkH,OAAA,IACA1E,KAAAoqF,QAAAC,GAAArqF,KAAAoqF,QAAA5sF,GACA6sF,IAGArqF,MAAAoqF,QAAA1lF,OAAA2lF,EACArqF,KAAAsqF,UAAA,MAGAtqF,MAAAoqF,QAAAF,EACAlqF,KAAAsqF,UAAAH,EAwLA,MArLAlsF,QAAAC,eAAA+rF,EAAA,SAMA5rF,IAAA,WACA,UAAA4rF,GAAA,KAEA7rF,YAAA,EACAD,cAAA,IAEA8rF,EAAAvrF,UAAA6rF,SAAA,WACA,MAAAvqF,MAAAsqF,WAAAtqF,KAAAoqF,QAAA1lF,OACA,KACA1E,KAAAoqF,QAAApqF,KAAAsqF,YAKAL,EAAAvrF,UAAA8rF,UAAA,WACA,MAAAxqF,MAAAoqF,QAAA1lF,OAAA1E,KAAAsqF,WAKAL,EAAAvrF,UAAA+rF,SAAA,WACA,GAAAN,GAAAnqF,KAAAsqF,SAIA,OAHAH,GAAAnqF,KAAAoqF,QAAA1lF,QACAylF,IAEA,GAAAF,GAAAjqF,KAAAoqF,QAAAD,IAKAF,EAAAvrF,UAAAgsF,QAAA,WACA,MAAA1qF,MAAAsqF,UAAAtqF,KAAAoqF,QAAA1lF,OACA1E,KAAAoqF,QAAApqF,KAAAoqF,QAAA1lF,OAAA,GACA,MAEAulF,EAAAvrF,UAAA2O,SAAA,WAEA,OADAw0E,GAAA,GACArkF,EAAAwC,KAAAsqF,UAAoC9sF,EAAAwC,KAAAoqF,QAAA1lF,OAAyBlH,IAC7D,KAAAwC,KAAAoqF,QAAA5sF,KACAqkF,GAAA,IAAA7hF,KAAAoqF,QAAA5sF,GAEA,OAAAqkF,IAAA,KAEAoI,EAAAvrF,UAAAisF,mBAAA,WAEA,OADA9I,GAAA,GACArkF,EAAAwC,KAAAsqF,UAAoC9sF,EAAAwC,KAAAoqF,QAAA1lF,OAAyBlH,IAC7D,KAAAwC,KAAAoqF,QAAA5sF,KACAqkF,GAAA,IAAA50E,mBAAAgG,OAAAjT,KAAAoqF,QAAA5sF,KAEA,OAAAqkF,IAAA,KAQAoI,EAAAvrF,UAAAsG,MAAA,SAAA4lF,GAEA,WADA,KAAAA,IAA+BA,EAAA,GAC/B5qF,KAAAoqF,QAAAplF,MAAAhF,KAAAsqF,UAAAM,IAKAX,EAAAvrF,UAAAyB,OAAA,WACA,GAAAH,KAAAsqF,WAAAtqF,KAAAoqF,QAAA1lF,OACA,WAEA,QADAq9E,MACAvkF,EAAAwC,KAAAsqF,UAAoC9sF,EAAAwC,KAAAoqF,QAAA1lF,OAAA,EAA6BlH,IACjEukF,EAAAp/E,KAAA3C,KAAAoqF,QAAA5sF,GACA,WAAAysF,GAAAlI,EAAA,IAMAkI,EAAAvrF,UAAAoH,MAAA,SAAA+kF,GAEA,OADA9I,MACAvkF,EAAAwC,KAAAsqF,UAAoC9sF,EAAAwC,KAAAoqF,QAAA1lF,OAAyBlH,IAC7DukF,EAAAp/E,KAAA3C,KAAAoqF,QAAA5sF,GACA,IAAAqtF,YAAAZ,GACA,OAAAzsF,GAAAqtF,EAAAP,UAAgD9sF,EAAAqtF,EAAAT,QAAA1lF,OAAiClH,IACjFukF,EAAAp/E,KAAAkoF,EAAAT,QAAA5sF,QAKA,QADAstF,GAAAD,EAAAjiF,MAAA,KACApL,EAAA,EAA2BA,EAAAstF,EAAApmF,OAAwBlH,IACnDstF,EAAAttF,GAAAkH,OAAA,GACAq9E,EAAAp/E,KAAAmoF,EAAAttF,GAGA,WAAAysF,GAAAlI,EAAA,IAKAkI,EAAAvrF,UAAAm5D,QAAA,WACA,MAAA73D,MAAAsqF,WAAAtqF,KAAAoqF,QAAA1lF,QAOAulF,EAAAc,aAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAT,WAAAY,EAAAF,EAAAV,UACA,WAAAW,EACA,MAAAD,EAEA,IAAAC,IAAAC,EACA,MAAAlB,GAAAc,aAAAC,EAAAP,WAAAQ,EAAAR,WAGA,UAAAt6E,OAAA,8BACA86E,EACA,8BAEAD,EACA,MAQAf,EAAAmB,aAAA,SAAAzkD,EAAA/M,GAGA,OAFAyxD,GAAA1kD,EAAA3hC,QACAsmF,EAAA1xD,EAAA50B,QACAxH,EAAA,EAAuBA,EAAA6tF,EAAA3mF,QAAAlH,EAAA8tF,EAAA5mF,OAA6ClH,IAAA,CACpE,GAAA+tF,GAAA/I,EAAA6I,EAAA7tF,GAAA8tF,EAAA9tF,GACA,QAAA+tF,EACA,MAAAA,GAEA,MAAAF,GAAA3mF,SAAA4mF,EAAA5mF,OACA,EACA2mF,EAAA3mF,OAAA4mF,EAAA5mF,QAAA,KAOAulF,EAAAvrF,UAAA8sF,OAAA,SAAAC,GACA,GAAAzrF,KAAAwqF,cAAAiB,EAAAjB,YACA,QAEA,QAAAhtF,GAAAwC,KAAAsqF,UAAAx8E,EAAA29E,EAAAnB,UAAyD9sF,GAAAwC,KAAAoqF,QAAA1lF,OAA0BlH,IAAAsQ,IACnF,GAAA9N,KAAAoqF,QAAA5sF,KAAAiuF,EAAArB,QAAAt8E,GACA,QAGA,WAOAm8E,EAAAvrF,UAAAmvD,SAAA,SAAA49B,GACA,GAAAjuF,GAAAwC,KAAAsqF,UACAx8E,EAAA29E,EAAAnB,SACA,IAAAtqF,KAAAwqF,YAAAiB,EAAAjB,YACA,QAEA,MAAAhtF,EAAAwC,KAAAoqF,QAAA1lF,QAAA,CACA,GAAA1E,KAAAoqF,QAAA5sF,KAAAiuF,EAAArB,QAAAt8E,GACA,WAEAtQ,IACAsQ,EAEA,UAEAm8E,KAYAyB,GAAA,WAKA,QAAAA,GAAAtpF,EAAAupF,GACA3rF,KAAA2rF,eAEA3rF,KAAA4rF,OAAAxpF,EAAA4C,QAEAhF,KAAA6rF,YAAA34E,KAAAgG,IAAA,EAAAlZ,KAAA4rF,OAAAlnF,OACA,QAAAlH,GAAA,EAAuBA,EAAAwC,KAAA4rF,OAAAlnF,OAAwBlH,IAC/CwC,KAAA6rF,aAAA5vC,EAAAmf,aAAAp7D,KAAA4rF,OAAApuF,GAEAwC,MAAA8rF,cAgEA,MA9DA7tF,QAAAC,eAAAwtF,EAAA,kBAEArtF,IAAA,WACA,WAEAD,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAwtF,EAAA,yBAEArtF,IAAA,WACA,YAEAD,YAAA,EACAD,cAAA,IAGAutF,EAAAhtF,UAAAiE,KAAA,SAAAmD,GAEA9F,KAAA4rF,OAAAlnF,OAAA,IACA1E,KAAA6rF,aAAA,GAEA7rF,KAAA4rF,OAAAjpF,KAAAmD,GACA9F,KAAA6rF,aAAA5vC,EAAAmf,aAAAt1D,GACA9F,KAAA8rF,eAEAJ,EAAAhtF,UAAA2X,IAAA,WACA,GAAAiK,GAAAtgB,KAAA4rF,OAAAv1E,KACArW,MAAA6rF,aAAA5vC,EAAAmf,aAAA96C,GAEAtgB,KAAA4rF,OAAAlnF,OAAA,IACA1E,KAAA6rF,aAAA,IAGAH,EAAAhtF,UAAAotF,YAAA,WACA,GAAA9rF,KAAA6rF,YAAAH,EAAAK,sBACA,SAAA57E,OAAAnQ,KAAA2rF,aACA,8BACAD,EAAAK,sBACA,WACA/rF,KAAA6rF,YACA,KAEA,IAAA7rF,KAAA4rF,OAAAlnF,OAAAgnF,EAAAM,eACA,SAAA77E,OAAAnQ,KAAA2rF,aACA,iEACAD,EAAAM,eACA,gCACAhsF,KAAAisF,kBAQAP,EAAAhtF,UAAAutF,cAAA,WACA,UAAAjsF,KAAA4rF,OAAAlnF,OACA,GAEA,gBAAA1E,KAAA4rF,OAAA9+E,KAAA,UAEA4+E,KA0BAQ,GAAA,eAsBAC,GAAA,WAQA,QAAAA,GAAAC,EAAAC,EAAA1nF,EAAA2nF,EAAAC,OACA,KAAAA,IAAwCA,EAAA,IACxCvsF,KAAAqsF,SACArsF,KAAA2E,YACA3E,KAAAssF,gBACAtsF,KAAAusF,iBACAvsF,KAAAosF,OAAA37E,cACAzQ,KAAAwsF,OAAAxsF,KAAAosF,KAAA/C,OAAArpF,KAAAosF,KAAA1pF,QAAA,QACA1C,KAAAysF,aAAAtG,EAAA9nF,IAAA,QAAA+tF,IAAApsF,KAAAosF,KAgEA,MA9DAD,GAAAztF,UAAAguF,gBAAA,WACA,MAAA1sF,MAAAosF,OAAApsF,KAAAysF,cAAAzsF,KAAA2sF,gBAEAR,EAAAztF,UAAAkuF,gBAAA,WACA,aAAA5sF,KAAAysF,aAAApD,OAAA,MAEA8C,EAAAztF,UAAAmuF,WAAA,WACA,8BAAA7sF,KAAAwsF,QAEAL,EAAAztF,UAAAiuF,aAAA,WACA,yBAAA3sF,KAAAwsF,QAAA,wBAAAxsF,KAAAwsF,QAEAL,EAAAztF,UAAAouF,WAAA,SAAAC,GACAA,IAAA/sF,KAAAysF,eACAzsF,KAAAysF,aAAAM,EACA/sF,KAAA4sF,mBACAzG,EAAAjhF,IAAA,QAAAlF,KAAAosF,KAAApsF,KAAAysF,gBAUAN,EAAAztF,UAAAsuF,cAAA,SAAA1tF,EAAA6f,GACA88B,EAAAkX,OAAA,gBAAA7zD,GAAA,8BACA28C,EAAAkX,OAAA,gBAAAh0C,GAAA,+BACA,IAAA8tE,EACA,IAvEA,cAuEA3tF,EACA2tF,GACAjtF,KAAAqsF,OAAA,kBAAArsF,KAAAysF,aAAA,YAEA,IAAAntF,IAAA4sF,GAKA,SAAA/7E,OAAA,4BAAA7Q,EAJA2tF,IACAjtF,KAAAqsF,OAAA,sBAAArsF,KAAAysF,aAAA,QAKAzsF,KAAA0sF,oBACAvtE,EAAA,GAAAnf,KAAA2E,UAEA,IAAAuoF,KAIA,OAHAjxC,GAAAp6C,QAAAsd,EAAA,SAAArd,EAAA6Q,GACAu6E,EAAAvqF,KAAAb,EAAA,IAAA6Q,KAEAs6E,EAAAC,EAAApgF,KAAA,MAGAq/E,EAAAztF,UAAA2O,SAAA,WACA,GAAAyE,GAAA9R,KAAAmtF,aAIA,OAHAntF,MAAAusF,iBACAz6E,GAAA,IAAA9R,KAAAusF,eAAA,KAEAz6E,GAGAq6E,EAAAztF,UAAAyuF,YAAA,WACA,OAAAntF,KAAAqsF,OAAA,sBAAArsF,KAAAosF,MAEAD,KAkEAiB,GAAA,SAAAC,GACA,GAAAC,GAAAC,GAAAF,GAAA1oF,EAAA2oF,EAAAE,SACA,cAAAF,EAAAd,QACAnF,EAAAiG,EAAAlB,KACA,8EAIAznF,GAAA,aAAAA,GACA,cAAA2oF,EAAAd,QACAnF,EAAA,gFAEAiG,EAAAjB,QACA/E,GAEA,IAAAgF,GAAA,OAAAgB,EAAAG,QAAA,QAAAH,EAAAG,MACA,QACAC,SAAA,GAAAvB,IAAAmB,EAAAlB,KAAAkB,EAAAjB,OAAA1nF,EAAA2nF,GACAlqF,KAAA,GAAA6nF,IAAAqD,EAAAzL,cAQA0L,GAAA,SAAAF,GAEA,GAAAjB,GAAA,GAAAI,EAAA,GAAAgB,EAAA,GAAA3L,EAAA,GAEAwK,GAAA,EAAAoB,EAAA,QAAAv0C,EAAA,GAEA,oBAAAm0C,GAAA,CAEA,GAAAM,GAAAN,EAAA3qF,QAAA,KACAirF,IAAA,IACAF,EAAAJ,EAAA1kD,UAAA,EAAAglD,EAAA,GACAN,IAAA1kD,UAAAglD,EAAA,GAGA,IAAAC,GAAAP,EAAA3qF,QAAA,MACA,IAAAkrF,IACAA,EAAAP,EAAA3oF,OAEA,IAAAmpF,GAAAR,EAAA3qF,QAAA,MACA,IAAAmrF,IACAA,EAAAR,EAAA3oF,QAEA0nF,EAAAiB,EAAA1kD,UAAA,EAAAz1B,KAAAy7D,IAAAif,EAAAC,IACAD,EAAAC,IAEAhM,EAAAD,EAAAyL,EAAA1kD,UAAAilD,EAAAC,IAEA,IAAAC,GAAA7L,EAAAoL,EAAA1kD,UAAAz1B,KAAAy7D,IAAA0e,EAAA3oF,OAAAmpF,IAEAF,GAAAvB,EAAA1pF,QAAA,KACAirF,GAAA,GACAtB,EAAA,UAAAoB,GAAA,QAAAA,EACAv0C,EAAA7G,SAAA+5C,EAAAzjD,UAAAglD,EAAA,QAGAA,EAAAN,EAAA3oF,MAEA,IAAAqJ,GAAAq+E,EAAAxjF,MAAA,IACA,KAAAmF,EAAArJ,QAEA8nF,EAAAz+E,EAAA,GACAy/E,EAAAz/E,EAAA,GAAA0C,eAEA,IAAA1C,EAAArJ,OACA8nF,EAAAz+E,EAAA,GAEA,cAAAA,EAAA,GAAA/I,MAAA,EAAA2oF,GAAAl9E,gBACA+7E,EAAA,aAGA,KAAAgB,GAAA,MAAAM,KACAN,EAAAM,EAAA,IAGA,OACA1B,OACAlzC,OACAszC,SACAgB,YACAnB,SACAoB,SACA5L,eAwBAkM,GAAA,iCAOAC,GAAA,+BAWAC,GAAA,SAAAnsF,GACA,sBAAAA,IAAA,IAAAA,EAAA4C,SAAAqpF,GAAAx9E,KAAAzO,IAMAosF,GAAA,SAAArM,GACA,sBAAAA,IACA,IAAAA,EAAAn9E,SACAspF,GAAAz9E,KAAAsxE,IAMAsM,GAAA,SAAAtM,GAKA,MAJAA,KAEAA,IAAA1iD,QAAA,yBAEA+uD,GAAArM,IAMAuM,GAAA,SAAAzL,GACA,cAAAA,GACA,gBAAAA,IACA,gBAAAA,KAAA6E,EAAA7E,IACAA,GAAA,gBAAAA,IAAA1mC,EAAA4R,SAAA80B,EAAA,QAWA0L,GAAA,SAAA77B,EAAAC,EAAAzuD,EAAA5B,EAAAswD,GACAA,OAAApgD,KAAAtO,GAEAsqF,GAAAryC,EAAAsW,YAAAC,EAAAC,EAAAC,GAAA1uD,EAAA5B,IASAksF,GAAA,SAAA/7B,EAAAvuD,EAAAuqF,GACA,GAAAnsF,GAAAmsF,YAAAtE,IAAA,GAAAyB,IAAA6C,EAAAh8B,GAAAg8B,CACA,QAAAj8E,KAAAtO,EACA,SAAAmM,OAAAoiD,EAAA,sBAAAnwD,EAAA6pF,gBAEA,sBAAAjoF,GACA,SAAAmM,OAAAoiD,EACA,uBACAnwD,EAAA6pF,gBACA,oBACAjoF,EAAAqJ,WAEA,IAAAm6E,EAAAxjF,GACA,SAAAmM,OAAAoiD,EAAA,YAAAvuD,EAAAqJ,WAAA,IAAAjL,EAAA6pF,gBAGA,oBAAAjoF,IACAA,EAAAU,OA5EA,SA4EA,GACAu3C,EAAAmf,aAAAp3D,GA7EA,SA8EA,SAAAmM,OAAAoiD,EACA,sDAGAnwD,EAAA6pF,gBACA,MACAjoF,EAAA2kC,UAAA,MACA,QAIA,IAAA3kC,GAAA,gBAAAA,GAAA,CACA,GAAAwqF,IAAA,EAAAC,GAAA,CAqBA,IApBAxyC,EAAAp6C,QAAAmC,EAAA,SAAAlC,EAAA6Q,GACA,cAAA7Q,EACA0sF,GAAA,MAEA,kBAAA1sF,GAAA,QAAAA,IACA2sF,GAAA,GACAR,GAAAnsF,IACA,SAAAqO,OAAAoiD,EACA,6BACAzwD,EACA,KACAM,EAAA6pF,gBACA,uFAIA7pF,GAAAO,KAAAb,GACAwsF,GAAA/7B,EAAA5/C,EAAAvQ,GACAA,EAAAiU,QAEAm4E,GAAAC,EACA,SAAAt+E,OAAAoiD,EACA,4BACAnwD,EAAA6pF,gBACA,sCAUAyC,GAAA,SAAAn8B,EAAAo8B,GACA,GAAAnxF,GAAAoxF,CACA,KAAApxF,EAAA,EAAeA,EAAAmxF,EAAAjqF,OAAuBlH,IAAA,CACtCoxF,EAAAD,EAAAnxF,EAEA,QADAoE,GAAAgtF,EAAA5pF,QACA8I,EAAA,EAAuBA,EAAAlM,EAAA8C,OAAiBoJ,IACxC,iBAAAlM,EAAAkM,QAAAlM,EAAA8C,OAAA,OAGA,KAAAupF,GAAArsF,EAAAkM,IACA,SAAAqC,OAAAoiD,EACA,4BACA3wD,EAAAkM,GACA,aACA8gF,EAAAvhF,WACA,uFAQAshF,EAAAtoE,KAAA4jE,GAAAmB,aACA,IAAAyD,GAAA,IACA,KAAArxF,EAAA,EAAeA,EAAAmxF,EAAAjqF,OAAuBlH,IAAA,CAEtC,GADAoxF,EAAAD,EAAAnxF,GACA,OAAAqxF,KAAAhhC,SAAA+gC,GACA,SAAAz+E,OAAAoiD,EACA,mBACAs8B,EAAAxhF,WACA,qCACAuhF,EAAAvhF,WAEAwhF,GAAAD,IAaAE,GAAA,SAAAt8B,EAAAC,EAAAzuD,EAAA5B,EAAAswD,GACA,IAAAA,OAAApgD,KAAAtO,EAAA,CAEA,GAAAuuD,GAAAtW,EAAAsW,YAAAC,EAAAC,EAAAC,EACA,KAAA1uD,GAAA,gBAAAA,IAAA8D,MAAAC,QAAA/D,GACA,SAAAmM,OAAAoiD,EAAA,yDAEA,IAAAo8B,KACA1yC,GAAAp6C,QAAAmC,EAAA,SAAAlC,EAAA6Q,GACA,GAAAi8E,GAAA,GAAA3E,IAAAnoF,EAEA,IADAwsF,GAAA/7B,EAAA5/C,EAAAvQ,EAAA0D,MAAA8oF,IACA,cAAAA,EAAAlE,YACA0D,GAAAz7E,GACA,SAAAxC,OAAAoiD,EACA,kCACAq8B,EAAAvhF,WACA,+FAIAshF,GAAAhsF,KAAAisF,KAEAF,GAAAn8B,EAAAo8B,KAEAI,GAAA,SAAAv8B,EAAAC,EAAAkwB,EAAAjwB,GACA,IAAAA,OAAApgD,KAAAqwE,EAAA,CAEA,GAAA6E,EAAA7E,GACA,SAAAxyE,OAAA8rC,EAAAsW,YAAAC,EAAAC,EAAAC,GACA,MACAiwB,EAAAt1E,WACA,4FAGA,KAAA+gF,GAAAzL,GACA,SAAAxyE,OAAA8rC,EAAAsW,YAAAC,EAAAC,EAAAC,GACA,yFAGAs8B,GAAA,SAAAx8B,EAAAC,EAAAw8B,EAAAv8B,GACA,IAAAA,OAAApgD,KAAA28E,EAEA,OAAAA,GACA,YACA,kBACA,oBACA,oBACA,kBACA,KACA,SACA,SAAA9+E,OAAA8rC,EAAAsW,YAAAC,EAAAC,EAAAC,GACA,8GAIAw8B,GAAA,SAAA18B,EAAAC,EAAA3wD,EAAA4wD,GACA,KAAAA,OAAApgD,KAAAxQ,GAEAmsF,GAAAnsF,IACA,SAAAqO,OAAA8rC,EAAAsW,YAAAC,EAAAC,EAAAC,GACA,yBACA5wD,EACA,qGAGAqtF,GAAA,SAAA38B,EAAAC,EAAAovB,EAAAnvB,GACA,KAAAA,OAAApgD,KAAAuvE,GAEAqM,GAAArM,IACA,SAAA1xE,OAAA8rC,EAAAsW,YAAAC,EAAAC,EAAAC,GACA,0BACAmvB,EACA,qFAGAuN,GAAA,SAAA58B,EAAAC,EAAAovB,EAAAnvB,GACAmvB,IAEAA,IAAA1iD,QAAA,yBAEAgwD,GAAA38B,EAAAC,EAAAovB,EAAAnvB,IAEA28B,GAAA,SAAA78B,EAAApwD,GACA,aAAAA,EAAAmoF,WACA,SAAAp6E,OAAAqiD,EAAA,8CAGA88B,GAAA,SAAA98B,EAAAC,EAAA66B,GAEA,GAAAzL,GAAAyL,EAAAlrF,KAAAiL,UACA,oBAAAigF,GAAAI,SAAAtB,MACA,IAAAkB,EAAAI,SAAAtB,KAAA1nF,SACAupF,GAAAX,EAAAI,SAAA/oF,YACA,cAAA2oF,EAAAI,SAAAtB,KAAAxjF,MAAA,SACA,IAAAi5E,EAAAn9E,SAAAypF,GAAAtM,GACA,SAAA1xE,OAAA8rC,EAAAsW,YAAAC,EAAAC,GAAA,GACA,yFAIA88B,GAAA,SAAA/8B,EAAAC,EAAA+8B,EAAA98B,GACA,KAAAA,OAAApgD,KAAAk9E,IAEA,iBAAAA,GACA,SAAAr/E,OAAA8rC,EAAAsW,YAAAC,EAAAC,EAAAC,GAAA,uBAqBA+8B,GAAA,WAKA,QAAAA,GAAAC,EAAAnB,GACAvuF,KAAA0vF,QACA1vF,KAAAuuF,QA8EA,MAxEAkB,GAAA/wF,UAAAixF,OAAA,SAAAC,GACA3zC,EAAA4e,iBAAA,0BAAA/uD,UAAApH,QACAu3C,EAAA4W,iBAAA,wBAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA0vF,MAAAG,mBAAA7vF,KAAAuuF,MAAAjkB,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAMAq5B,EAAA/wF,UAAA6P,OAAA,SAAAqhF,GACA3zC,EAAA4e,iBAAA,0BAAA/uD,UAAApH,QACA2qF,GAAA,sBAAArvF,KAAAuuF,OACAtyC,EAAA4W,iBAAA,wBAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA0vF,MAAAI,gBAAA9vF,KAAAuuF,MAAA,KAAAjkB,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAOAq5B,EAAA/wF,UAAAwG,IAAA,SAAAyN,EAAAi9E,GACA3zC,EAAA4e,iBAAA,uBAAA/uD,UAAApH,QACA2qF,GAAA,mBAAArvF,KAAAuuF,OACAF,GAAA,qBAAA17E,EAAA3S,KAAAuuF,OAAA,GACAtyC,EAAA4W,iBAAA,qBAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA0vF,MAAAI,gBAAA9vF,KAAAuuF,MAAA57E,EAAA23D,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAQAq5B,EAAA/wF,UAAAqxF,gBAAA,SAAAp9E,EAAAgwE,EAAAiN,GACA3zC,EAAA4e,iBAAA,mCAAA/uD,UAAApH,QACA2qF,GAAA,+BAAArvF,KAAAuuF,OACAF,GAAA,iCAAA17E,EAAA3S,KAAAuuF,OAAA,GACAQ,GAAA,iCAAApM,GAAA,GACA1mC,EAAA4W,iBAAA,iCAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA0vF,MAAAM,4BAAAhwF,KAAAuuF,MAAA57E,EAAAgwE,EAAArY,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAOAq5B,EAAA/wF,UAAAyD,OAAA,SAAA8tF,EAAAL,GAGA,GAFA3zC,EAAA4e,iBAAA,0BAAA/uD,UAAApH,QACA2qF,GAAA,sBAAArvF,KAAAuuF,OACAzmF,MAAAC,QAAAkoF,GAAA,CAEA,OADAC,MACA1yF,EAAA,EAA2BA,EAAAyyF,EAAAvrF,SAA0BlH,EACrD0yF,EAAA,GAAA1yF,GAAAyyF,EAAAzyF,EAEAyyF,GAAAC,EACAv2D,EAAA,gOAGAm1D,GAAA,wBAAAmB,EAAAjwF,KAAAuuF,OAAA,GACAtyC,EAAA4W,iBAAA,wBAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA0vF,MAAAS,mBAAAnwF,KAAAuuF,MAAA0B,EAAA3lB,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAEAq5B,KAkBAW,GAAA,WAQA,QAAAA,GAAAC,EAAA9mB,GACAvpE,KAAAqwF,YACArwF,KAAAupE,WAQA,MAJA6mB,GAAA1xF,UAAA4xF,OAAA,WAEA,MADAr0C,GAAA4e,iBAAA,+BAAA/uD,UAAApH,SACgB2rF,UAAArwF,KAAAqwF,UAAA9mB,SAAAvpE,KAAAupE,SAAA+mB,WAEhBF,KAgCAG,GAAA,WAEA,GAAAC,GAAA,mEAGAC,EAAA,EAKAC,IACA,iBAAAt5B,GACA,GAAAu5B,GAAAv5B,IAAAq5B,CACAA,GAAAr5B,CACA,IAAA55D,GACAozF,EAAA,GAAA9oF,OAAA,EACA,KAAAtK,EAAA,EAAmBA,GAAA,EAAQA,IAC3BozF,EAAApzF,GAAAgzF,EAAAvoF,OAAAmvD,EAAA,IAGAA,EAAAlkD,KAAAC,MAAAikD,EAAA,GAEAnb,GAAAkX,OAAA,IAAAiE,EAAA,2BACA,IAAA5pD,GAAAojF,EAAA9jF,KAAA,GACA,IAAA6jF,EAKA,CAGA,IAAAnzF,EAAA,GAAwBA,GAAA,QAAAkzF,EAAAlzF,GAAmCA,IAC3DkzF,EAAAlzF,GAAA,CAEAkzF,GAAAlzF,SAVA,KAAAA,EAAA,EAAuBA,EAAA,GAAQA,IAC/BkzF,EAAAlzF,GAAA0V,KAAAC,MAAA,GAAAD,KAAAqwD,SAWA,KAAA/lE,EAAA,EAAmBA,EAAA,GAAQA,IAC3BgQ,GAAAgjF,EAAAvoF,OAAAyoF,EAAAlzF,GAGA,OADAy+C,GAAAkX,OAAA,KAAA3lD,EAAA9I,OAAA,oCACA8I,MA0BAk2E,GAAA,WACA,QAAAA,GAAA5lF,EAAAqiB,GACAngB,KAAAlC,OACAkC,KAAAmgB,OAWA,MAHAujE,GAAAmN,KAAA,SAAA/yF,EAAAqiB,GACA,UAAAujE,GAAA5lF,EAAAqiB,IAEAujE,KAsBAoN,GAAA,WACA,QAAAA,MA6BA,MAvBAA,GAAApyF,UAAAslF,WAAA,WACA,MAAAhkF,MAAA+wF,QAAA9kF,KAAAjM,OAUA8wF,EAAApyF,UAAAsyF,oBAAA,SAAAC,EAAAt9D,GACA,GAAAu9D,GAAA,GAAAxN,IAAAqE,EAAAkJ,GACAE,EAAA,GAAAzN,IAAAqE,EAAAp0D,EACA,YAAA3zB,KAAA+wF,QAAAG,EAAAC,IAMAL,EAAApyF,UAAA0yF,QAAA,WACA,MAAA1N,IAAA2N,KAEAP,KAmBAQ,GAAA,SAAAx4B,GAEA,QAAAw4B,KACA,cAAAx4B,KAAA/sD,MAAA/L,KAAA8L,YAAA9L,KA8DA,MAhEA+yD,GAAAuG,UAAAg4B,EAAAx4B,GAIA76D,OAAAC,eAAAozF,EAAA,gBACAjzF,IAAA,WACA,MAAA2mF,IAEA9/E,IAAA,SAAAjD,GACA+iF,EAAA/iF,GAEA7D,YAAA,EACAD,cAAA,IAKAmzF,EAAA5yF,UAAAqyF,QAAA,SAAA/8E,EAAAU,GACA,MAAA8tE,GAAAxuE,EAAAlW,KAAA4W,EAAA5W,OAKAwzF,EAAA5yF,UAAA6yF,YAAA,SAAApxE,GAGA,KAAA87B,GAAAqX,eAAA,oDAKAg+B,EAAA5yF,UAAAsyF,oBAAA,SAAAC,EAAAt9D,GACA,UAKA29D,EAAA5yF,UAAA0yF,QAAA,WACA,MAAA1N,IAAA2N,KAKAC,EAAA5yF,UAAA8yF,QAAA,WAGA,UAAA9N,IAAAsE,EAAAhD,IAOAsM,EAAA5yF,UAAA+yF,SAAA,SAAAC,EAAA5zF,GAGA,MAFAm+C,GAAAkX,OAAA,gBAAAu+B,GAAA,gDAEA,GAAAhO,IAAAgO,EAAA1M,IAKAsM,EAAA5yF,UAAA2O,SAAA,WACA,cAEAikF,GACCR,IACDa,GAAA,GAAAL,IAyBAM,GAAA,SAAAjP,GACA,sBAAAA,GACA,UAAAgG,EAAAhG,GAEA,UAAAA,GAOAkP,GAAA,SAAAC,GACA,GAAAA,EAAA3O,aAAA,CACA,GAAAlhF,GAAA6vF,EAAA7vF,KACAg6C,GAAAkX,OAAA,gBAAAlxD,IACA,gBAAAA,IACA,gBAAAA,IAAAg6C,EAAA4R,SAAA5rD,EAAA,mDAGAg6C,GAAAkX,OAAA2+B,IAAA7M,GAAA6M,EAAAj6B,UAAA,+BAGA5b,GAAAkX,OAAA2+B,IAAA7M,GAAA6M,EAAArO,cAAA5rB,UAAA,uDAwBAirB,GAAA,WAOA,QAAAA,GAAAiP,EAAAC,OACA,KAAAA,IAAuCA,EAAAlP,EAAAoC,0BAAArC,YACvC7iF,KAAA+xF,SACA/xF,KAAAgyF,gBACAhyF,KAAAiyF,UAAA,KACAh2C,EAAAkX,WAAA7gD,KAAAtS,KAAA+xF,QAAA,OAAA/xF,KAAA+xF,OAAA,4DACAF,GAAA7xF,KAAAgyF,eA+NA,MA7NA/zF,QAAAC,eAAA4kF,EAAA,6BACAzkF,IAAA,WACA,MAAA6mF,IAEAhgF,IAAA,SAAAjD,GACAijF,EAAAjjF,GAEA7D,YAAA,EACAD,cAAA,IAGA2kF,EAAApkF,UAAAykF,WAAA,WACA,UAGAL,EAAApkF,UAAA+kF,YAAA,WACA,MAAAzjF,MAAAgyF,eAGAlP,EAAApkF,UAAA2kF,eAAA,SAAA6O,GACA,UAAApP,GAAA9iF,KAAA+xF,OAAAG,IAGApP,EAAApkF,UAAAyzF,kBAAA,SAAAC,GAEA,oBAAAA,EACApyF,KAAAgyF,cAGAlP,EAAAoC,0BAAArC,YAIAC,EAAApkF,UAAA6D,SAAA,SAAAH,GACA,MAAAA,GAAAy1D,UACA73D,KAEA,cAAAoC,EAAAmoF,WACAvqF,KAAAgyF,cAGAlP,EAAAoC,0BAAArC,YAMAC,EAAApkF,UAAA2zF,SAAA,WACA,UAGAvP,EAAApkF,UAAA4zF,wBAAA,SAAAF,EAAA//D,GACA,aAGAywD,EAAApkF,UAAA0kF,qBAAA,SAAAgP,EAAAG,GACA,oBAAAH,EACApyF,KAAAqjF,eAAAkP,GAEAA,EAAA16B,WAAA,cAAAu6B,EACApyF,KAGA8iF,EAAAoC,0BAAArC,WAAAO,qBAAAgP,EAAAG,GAAAlP,eAAArjF,KAAAgyF,gBAIAlP,EAAApkF,UAAA8zF,YAAA,SAAApwF,EAAAmwF,GACA,GAAAE,GAAArwF,EAAAmoF,UACA,eAAAkI,EACAF,EAEAA,EAAA16B,WAAA,cAAA46B,EACAzyF,MAGAi8C,EAAAkX,OAAA,cAAAs/B,GAAA,IAAArwF,EAAAooF,YAAA,8CACAxqF,KAAAojF,qBAAAqP,EAAA3P,EAAAoC,0BAAArC,WAAA2P,YAAApwF,EAAAqoF,WAAA8H,MAIAzP,EAAApkF,UAAAm5D,QAAA,WACA,UAGAirB,EAAApkF,UAAAg0F,YAAA,WACA,UAGA5P,EAAApkF,UAAAmH,aAAA,SAAAyJ,EAAA9J,GACA,UAKAs9E,EAAApkF,UAAAuD,IAAA,SAAA0wF,GACA,MAAAA,KAAA3yF,KAAAyjF,cAAA5rB,WAEA+6B,SAAA5yF,KAAA+kC,WACAm/C,YAAAlkF,KAAAyjF,cAAAxhF,OAGAjC,KAAA+kC,YAGA+9C,EAAApkF,UAAAmhB,KAAA,WACA,UAAA7f,KAAAiyF,UAAA,CACA,GAAAY,GAAA,EACA7yF,MAAAgyF,cAAAn6B,YACAg7B,GACA,YACAjB,GAAA5xF,KAAAgyF,cAAA/vF,OACA,IACA,IAAA3C,SAAAU,MAAA+xF,MACAc,IAAAvzF,EAAA,IAEAuzF,GADA,WAAAvzF,EACAqpF,EAAA3oF,KAAA+xF,QAGA/xF,KAAA+xF,OAEA/xF,KAAAiyF,UAAAzL,EAAAqM,GAEA,MAAA7yF,MAAAiyF,WAMAnP,EAAApkF,UAAAqmC,SAAA,WACA,MAAA/kC,MAAA+xF,QAKAjP,EAAApkF,UAAAo0F,UAAA,SAAArH,GACA,MAAAA,KAAA3I,EAAAoC,0BAAArC,WACA,EAEA4I,YAAA3I,GAAAoC,2BACA,GAGAjpC,EAAAkX,OAAAs4B,EAAAtI,aAAA,qBACAnjF,KAAA+yF,mBAAAtH,KASA3I,EAAApkF,UAAAq0F,mBAAA,SAAAC,GACA,GAAAC,SAAAD,GAAAjB,OACAmB,QAAAlzF,MAAA+xF,OACAoB,EAAArQ,EAAAsQ,iBAAA1wF,QAAAuwF,GACAI,EAAAvQ,EAAAsQ,iBAAA1wF,QAAAwwF,EAGA,OAFAj3C,GAAAkX,OAAAggC,GAAA,wBAAAF,GACAh3C,EAAAkX,OAAAkgC,GAAA,wBAAAH,GACAC,IAAAE,EAEA,WAAAH,EAEA,EAIAlzF,KAAA+xF,OAAAiB,EAAAjB,QACA,EAEA/xF,KAAA+xF,SAAAiB,EAAAjB,OACA,EAGA,EAKAsB,EAAAF,GAMArQ,EAAApkF,UAAA40F,UAAA,WACA,MAAAtzF,OAKA8iF,EAAApkF,UAAA60F,UAAA,WACA,UAKAzQ,EAAApkF,UAAA8sF,OAAA,SAAAC,GAIA,GAAAA,IAAAzrF,KACA,QAEA,IAAAyrF,EAAAtI,aAAA,CACA,GAAA6P,GAAAvH,CACA,OAAAzrF,MAAA+xF,SAAAiB,EAAAjB,QACA/xF,KAAAgyF,cAAAxG,OAAAwH,EAAAhB,eAGA,UASAlP,EAAAsQ,kBAAA,sCACAtQ,KA+BA0Q,GAAA,SAAA16B,GAEA,QAAA06B,KACA,cAAA16B,KAAA/sD,MAAA/L,KAAA8L,YAAA9L,KAuDA,MAzDA+yD,GAAAuG,UAAAk6B,EAAA16B,GAOA06B,EAAA90F,UAAAqyF,QAAA,SAAA/8E,EAAAU,GACA,GAAA++E,GAAAz/E,EAAAmM,KAAAsjE,cACAiQ,EAAAh/E,EAAAyL,KAAAsjE,cACAkQ,EAAAF,EAAAX,UAAAY,EACA,YAAAC,EACAnR,EAAAxuE,EAAAlW,KAAA4W,EAAA5W,MAGA61F,GAMAH,EAAA90F,UAAA6yF,YAAA,SAAApxE,GACA,OAAAA,EAAAsjE,cAAA5rB,WAKA27B,EAAA90F,UAAAsyF,oBAAA,SAAAC,EAAAt9D,GACA,OAAAs9D,EAAAxN,cAAA+H,OAAA73D,EAAA8vD,gBAKA+P,EAAA90F,UAAA0yF,QAAA,WACA,MAAA1N,IAAA2N,KAKAmC,EAAA90F,UAAA8yF,QAAA,WACA,UAAA9N,IAAAsE,EAAA,GAAAlF,IAAA,kBAAAsC,KAOAoO,EAAA90F,UAAA+yF,SAAA,SAAAC,EAAA5zF,GACA,GAAAg0F,GAAA3M,EAAAuM,EACA,WAAAhO,IAAA5lF,EAAA,GAAAglF,IAAA,kBAAAgP,KAKA0B,EAAA90F,UAAA2O,SAAA,WACA,mBAEAmmF,GACC1C,IACD/M,GAAA,GAAAyP,IAoBAI,GAAA,WASA,QAAAA,GAAAzzE,EAAA0zE,EAAAC,EAAAC,EAAAC,OACA,KAAAA,IAA0CA,EAAA,MAC1Ch0F,KAAA+zF,aACA/zF,KAAAg0F,mBAIAh0F,KAAAi0F,aAEA,KADA,GAAA1I,GAAA,GACAprE,EAAA03C,WAMA,GALA13C,IACAorE,EAAAsI,EAAAC,EAAA3zE,EAAAre,IAAA+xF,GAAA,EAEAE,IACAxI,IAAA,GACAA,EAAA,EAGAprE,EADAngB,KAAA+zF,WACA5zE,EAAAwmB,KAGAxmB,EAAAyZ,UAGA,QAAA2xD,EAAA,CAEAvrF,KAAAi0F,WAAAtxF,KAAAwd,EACA,OAIAngB,KAAAi0F,WAAAtxF,KAAAwd,GAEAA,EADAngB,KAAA+zF,WACA5zE,EAAAyZ,MAGAzZ,EAAAwmB,MA4CA,MAvCAitD,GAAAl1F,UAAAw1F,QAAA,WACA,OAAAl0F,KAAAi0F,WAAAvvF,OACA,WACA,IACAkkB,GADAzI,EAAAngB,KAAAi0F,WAAA59E,KAMA,IAHAuS,EADA5oB,KAAAg0F,iBACAh0F,KAAAg0F,iBAAA7zE,EAAAre,IAAAqe,EAAAxN,QAEsB7Q,IAAAqe,EAAAre,IAAA6Q,MAAAwN,EAAAxN,OACtB3S,KAAA+zF,WAEA,IADA5zE,IAAAwmB,MACAxmB,EAAA03C,WACA73D,KAAAi0F,WAAAtxF,KAAAwd,GACAA,IAAAyZ,UAKA,KADAzZ,IAAAyZ,OACAzZ,EAAA03C,WACA73D,KAAAi0F,WAAAtxF,KAAAwd,GACAA,IAAAwmB,IAGA,OAAA/d,IAEAgrE,EAAAl1F,UAAAy1F,QAAA,WACA,MAAAn0F,MAAAi0F,WAAAvvF,OAAA,GAEAkvF,EAAAl1F,UAAA01F,KAAA,WACA,OAAAp0F,KAAAi0F,WAAAvvF,OACA,WACA,IAAAyb,GAAAngB,KAAAi0F,WAAAj0F,KAAAi0F,WAAAvvF,OAAA,EACA,OAAA1E,MAAAg0F,iBACAh0F,KAAAg0F,iBAAA7zE,EAAAre,IAAAqe,EAAAxN,QAGoB7Q,IAAAqe,EAAAre,IAAA6Q,MAAAwN,EAAAxN,QAGpBihF,KAKAS,GAAA,WASA,QAAAA,GAAAvyF,EAAA6Q,EAAAqzD,EAAAr/B,EAAA/M,GACA55B,KAAA8B,MACA9B,KAAA2S,QACA3S,KAAAgmE,MAAA,MAAAA,IAAAquB,EAAAC,IACAt0F,KAAA2mC,KACA,MAAAA,IAAA4tD,GAAA1R,WACA7iF,KAAA45B,MACA,MAAAA,IAAA26D,GAAA1R,WA+PA,MAnPAwR,GAAA31F,UAAA81F,KAAA,SAAA1yF,EAAA6Q,EAAAqzD,EAAAr/B,EAAA/M,GACA,UAAAy6D,GAAA,MAAAvyF,IAAA9B,KAAA8B,IAAA,MAAA6Q,IAAA3S,KAAA2S,MAAA,MAAAqzD,IAAAhmE,KAAAgmE,MAAA,MAAAr/B,IAAA3mC,KAAA2mC,KAAA,MAAA/M,IAAA55B,KAAA45B,QAKAy6D,EAAA31F,UAAAm0E,MAAA,WACA,MAAA7yE,MAAA2mC,KAAAksC,QAAA,EAAA7yE,KAAA45B,MAAAi5C,SAKAwhB,EAAA31F,UAAAm5D,QAAA,WACA,UAWAw8B,EAAA31F,UAAA+1F,iBAAA,SAAAjvF,GACA,MAAAxF,MAAA2mC,KAAA8tD,iBAAAjvF,IACAA,EAAAxF,KAAA8B,IAAA9B,KAAA2S,QACA3S,KAAA45B,MAAA66D,iBAAAjvF,IAUA6uF,EAAA31F,UAAAg2F,iBAAA,SAAAlvF,GACA,MAAAxF,MAAA45B,MAAA86D,iBAAAlvF,IACAA,EAAAxF,KAAA8B,IAAA9B,KAAA2S,QACA3S,KAAA2mC,KAAA+tD,iBAAAlvF,IAMA6uF,EAAA31F,UAAAi2F,KAAA,WACA,MAAA30F,MAAA2mC,KAAAkxB,UACA73D,KAGAA,KAAA2mC,KAAAguD,QAMAN,EAAA31F,UAAAk2F,OAAA,WACA,MAAA50F,MAAA20F,OAAA7yF,KAKAuyF,EAAA31F,UAAAm2F,OAAA,WACA,MAAA70F,MAAA45B,MAAAi+B,UACA73D,KAAA8B,IAGA9B,KAAA45B,MAAAi7D,UAUAR,EAAA31F,UAAA27C,OAAA,SAAAv4C,EAAA6Q,EAAAmhF,GACA,GAAAvI,GAAAjtF,CAYA,OAXAA,GAAA0B,KACAurF,EAAAuI,EAAAhyF,EAAAxD,EAAAwD,KAEAxD,EADAitF,EAAA,EACAjtF,EAAAk2F,KAAA,eAAAl2F,EAAAqoC,KAAA0T,OAAAv4C,EAAA6Q,EAAAmhF,GAAA,MAEA,IAAAvI,EACAjtF,EAAAk2F,KAAA,KAAA7hF,EAAA,gBAGArU,EAAAk2F,KAAA,oBAAAl2F,EAAAs7B,MAAAygB,OAAAv4C,EAAA6Q,EAAAmhF,IAEAx1F,EAAAw2F,UAMAT,EAAA31F,UAAAq2F,WAAA,WACA,GAAA/0F,KAAA2mC,KAAAkxB,UACA,MAAA08B,IAAA1R,UAEA,IAAAvkF,GAAA0B,IAIA,OAHA1B,GAAAqoC,KAAAquD,UAAA12F,EAAAqoC,UAAAquD,WACA12F,IAAA22F,gBACA32F,IAAAk2F,KAAA,eAAAl2F,EAAAqoC,KAAAouD,aAAA,MACAz2F,EAAAw2F,UAOAT,EAAA31F,UAAA6P,OAAA,SAAAzM,EAAAgyF,GACA,GAAAx1F,GAAA42F,CAEA,IADA52F,EAAA0B,KACA8zF,EAAAhyF,EAAAxD,EAAAwD,KAAA,EACAxD,EAAAqoC,KAAAkxB,WAAAv5D,EAAAqoC,KAAAquD,UAAA12F,EAAAqoC,UAAAquD,WACA12F,IAAA22F,gBAEA32F,IAAAk2F,KAAA,eAAAl2F,EAAAqoC,KAAAp4B,OAAAzM,EAAAgyF,GAAA,UAEA,CAMA,GALAx1F,EAAAqoC,KAAAquD,WACA12F,IAAA62F,gBACA72F,EAAAs7B,MAAAi+B,WAAAv5D,EAAAs7B,MAAAo7D,UAAA12F,EAAAs7B,MAAA+M,KAAAquD,WACA12F,IAAA82F,iBAEA,IAAAtB,EAAAhyF,EAAAxD,EAAAwD,KAAA,CACA,GAAAxD,EAAAs7B,MAAAi+B,UACA,MAAA08B,IAAA1R,UAGAqS,GAAA52F,EAAAs7B,MAAA+6D,OACAr2F,IAAAk2F,KAAAU,EAAApzF,IAAAozF,EAAAviF,MAAA,UAAArU,EAAAs7B,MAAAm7D,cAGAz2F,IAAAk2F,KAAA,oBAAAl2F,EAAAs7B,MAAArrB,OAAAzM,EAAAgyF,IAEA,MAAAx1F,GAAAw2F,UAMAT,EAAA31F,UAAAs2F,OAAA,WACA,MAAAh1F,MAAAgmE,OAMAquB,EAAA31F,UAAAo2F,OAAA,WACA,GAAAx2F,GAAA0B,IAOA,OANA1B,GAAAs7B,MAAAo7D,WAAA12F,EAAAqoC,KAAAquD,WACA12F,IAAA+2F,eACA/2F,EAAAqoC,KAAAquD,UAAA12F,EAAAqoC,UAAAquD,WACA12F,IAAA62F,gBACA72F,EAAAqoC,KAAAquD,UAAA12F,EAAAs7B,MAAAo7D,WACA12F,IAAAg3F,cACAh3F,GAMA+1F,EAAA31F,UAAAu2F,aAAA,WACA,GAAA32F,GAAA0B,KAAAs1F,YAMA,OALAh3F,GAAAs7B,MAAA+M,KAAAquD,WACA12F,IAAAk2F,KAAA,oBAAAl2F,EAAAs7B,MAAAu7D,gBACA72F,IAAA+2F,cACA/2F,IAAAg3F,cAEAh3F,GAMA+1F,EAAA31F,UAAA02F,cAAA,WACA,GAAA92F,GAAA0B,KAAAs1F,YAKA,OAJAh3F,GAAAqoC,UAAAquD,WACA12F,IAAA62F,eACA72F,IAAAg3F,cAEAh3F,GAMA+1F,EAAA31F,UAAA22F,YAAA,WACA,GAAAE,GAAAv1F,KAAAw0F,KAAA,UAAAH,EAAAC,IAAA,KAAAt0F,KAAA45B,MAAA+M,KACA,OAAA3mC,MAAA45B,MAAA46D,KAAA,UAAAx0F,KAAAgmE,MAAAuvB,EAAA,OAMAlB,EAAA31F,UAAAy2F,aAAA,WACA,GAAAK,GAAAx1F,KAAAw0F,KAAA,UAAAH,EAAAC,IAAAt0F,KAAA2mC,KAAA/M,MAAA,KACA,OAAA55B,MAAA2mC,KAAA6tD,KAAA,UAAAx0F,KAAAgmE,MAAA,KAAAwvB,IAMAnB,EAAA31F,UAAA42F,WAAA,WACA,GAAA3uD,GAAA3mC,KAAA2mC,KAAA6tD,KAAA,WAAAx0F,KAAA2mC,KAAAq/B,MAAA,WACApsC,EAAA55B,KAAA45B,MAAA46D,KAAA,WAAAx0F,KAAA45B,MAAAosC,MAAA,UACA,OAAAhmE,MAAAw0F,KAAA,WAAAx0F,KAAAgmE,MAAAr/B,EAAA/M,IAQAy6D,EAAA31F,UAAA+2F,eAAA,WACA,GAAAC,GAAA11F,KAAA21F,QACA,OAAAziF,MAAA61E,IAAA,EAAA2M,IAAA11F,KAAA6yE,QAAA,GAMAwhB,EAAA31F,UAAAi3F,OAAA,WACA,GAAAD,EACA,IAAA11F,KAAAg1F,UAAAh1F,KAAA2mC,KAAAquD,SACA,SAAA7kF,OAAA,0BAAAnQ,KAAA8B,IAAA,IAAA9B,KAAA2S,MAAA,IAEA,IAAA3S,KAAA45B,MAAAo7D,SACA,SAAA7kF,OAAA,mBAAAnQ,KAAA8B,IAAA,IAAA9B,KAAA2S,MAAA,WAGA,KADA+iF,EAAA11F,KAAA2mC,KAAAgvD,YACA31F,KAAA45B,MAAA+7D,SACA,SAAAxlF,OAAA,sBAGA,OAAAulF,IAAA11F,KAAAg1F,SAAA,MAGAX,EAAAC,KAAA,EACAD,EAAAuB,OAAA,EACAvB,KAKAwB,GAAA,WACA,QAAAA,MA2FA,MApFAA,GAAAn3F,UAAA81F,KAAA,SAAA1yF,EAAA6Q,EAAAqzD,EAAAr/B,EAAA/M,GACA,MAAA55B,OAUA61F,EAAAn3F,UAAA27C,OAAA,SAAAv4C,EAAA6Q,EAAAmhF,GACA,UAAAO,IAAAvyF,EAAA6Q,EAAA,OASAkjF,EAAAn3F,UAAA6P,OAAA,SAAAzM,EAAAgyF,GACA,MAAA9zF,OAKA61F,EAAAn3F,UAAAm0E,MAAA,WACA,UAKAgjB,EAAAn3F,UAAAm5D,QAAA,WACA,UAUAg+B,EAAAn3F,UAAA+1F,iBAAA,SAAAjvF,GACA,UAUAqwF,EAAAn3F,UAAAg2F,iBAAA,SAAAlvF,GACA,UAKAqwF,EAAAn3F,UAAAk2F,OAAA,WACA,aAKAiB,EAAAn3F,UAAAm2F,OAAA,WACA,aAMAgB,EAAAn3F,UAAAi3F,OAAA,WACA,UAMAE,EAAAn3F,UAAAs2F,OAAA,WACA,UAEAa,KAMAtB,GAAA,WAMA,QAAAA,GAAAuB,EAAAC,OACA,KAAAA,IAA+BA,EAAAxB,EAAA1R,YAC/B7iF,KAAA81F,cACA91F,KAAA+1F,QAyJA,MA/IAxB,GAAA71F,UAAA27C,OAAA,SAAAv4C,EAAA6Q,GACA,UAAA4hF,GAAAv0F,KAAA81F,YAAA91F,KAAA+1F,MACA17C,OAAAv4C,EAAA6Q,EAAA3S,KAAA81F,aACAtB,KAAA,UAAAH,GAAAuB,MAAA,aAQArB,EAAA71F,UAAA6P,OAAA,SAAAzM,GACA,UAAAyyF,GAAAv0F,KAAA81F,YAAA91F,KAAA+1F,MACAxnF,OAAAzM,EAAA9B,KAAA81F,aACAtB,KAAA,UAAAH,GAAAuB,MAAA,aASArB,EAAA71F,UAAAL,IAAA,SAAAyD,GAGA,IAFA,GAAAypF,GACAprE,EAAAngB,KAAA+1F,OACA51E,EAAA03C,WAAA,CAEA,QADA0zB,EAAAvrF,KAAA81F,YAAAh0F,EAAAqe,EAAAre,MAEA,MAAAqe,GAAAxN,KAEA44E,GAAA,EACAprE,IAAAwmB,KAEA4kD,EAAA,IACAprE,IAAAyZ,OAGA,aAOA26D,EAAA71F,UAAAs3F,kBAAA,SAAAl0F,GAEA,IADA,GAAAypF,GAAAprE,EAAAngB,KAAA+1F,MAAAE,EAAA,MACA91E,EAAA03C,WAAA,CAEA,QADA0zB,EAAAvrF,KAAA81F,YAAAh0F,EAAAqe,EAAAre,MACA,CACA,GAAAqe,EAAAwmB,KAAAkxB,UAMA,MAAAo+B,GACAA,EAAAn0F,IAGA,IARA,KADAqe,IAAAwmB,MACAxmB,EAAAyZ,MAAAi+B,WACA13C,IAAAyZ,KACA,OAAAzZ,GAAAre,IASAypF,EAAA,EACAprE,IAAAwmB,KAEA4kD,EAAA,IACA0K,EAAA91E,EACAA,IAAAyZ,OAGA,SAAAzpB,OAAA,0EAKAokF,EAAA71F,UAAAm5D,QAAA,WACA,MAAA73D,MAAA+1F,MAAAl+B,WAKA08B,EAAA71F,UAAAm0E,MAAA,WACA,MAAA7yE,MAAA+1F,MAAAljB,SAKA0hB,EAAA71F,UAAAk2F,OAAA,WACA,MAAA50F,MAAA+1F,MAAAnB,UAKAL,EAAA71F,UAAAm2F,OAAA,WACA,MAAA70F,MAAA+1F,MAAAlB,UAWAN,EAAA71F,UAAA+1F,iBAAA,SAAAjvF,GACA,MAAAxF,MAAA+1F,MAAAtB,iBAAAjvF,IAUA+uF,EAAA71F,UAAAg2F,iBAAA,SAAAlvF,GACA,MAAAxF,MAAA+1F,MAAArB,iBAAAlvF,IAQA+uF,EAAA71F,UAAAw3F,YAAA,SAAAC,GACA,UAAAvC,IAAA5zF,KAAA+1F,MAAA,KAAA/1F,KAAA81F,aAAA,EAAAK,IAEA5B,EAAA71F,UAAA03F,gBAAA,SAAAt0F,EAAAq0F,GACA,UAAAvC,IAAA5zF,KAAA+1F,MAAAj0F,EAAA9B,KAAA81F,aAAA,EAAAK,IAEA5B,EAAA71F,UAAA23F,uBAAA,SAAAv0F,EAAAq0F,GACA,UAAAvC,IAAA5zF,KAAA+1F,MAAAj0F,EAAA9B,KAAA81F,aAAA,EAAAK,IAEA5B,EAAA71F,UAAA43F,mBAAA,SAAAH,GACA,UAAAvC,IAAA5zF,KAAA+1F,MAAA,KAAA/1F,KAAA81F,aAAA,EAAAK,IAMA5B,EAAA1R,WAAA,GAAAgT,IACAtB,KAkBAgC,GAAArjF,KAAA89C,IAAA,GAIAwlC,GAAA,WAIA,QAAAA,GAAA9xF,GAKA1E,KAAA6yE,MAJA,SAAA4jB,GACA,MAAApkD,UAAAn/B,KAAA89C,IAAAylC,GAAAF,GAAA,KAGA7xF,EAAA,GACA1E,KAAA02F,SAAA12F,KAAA6yE,MAAA,CACA,IAAA8jB,GAHA,SAAA9N,GAAuC,MAAAx2C,UAAAvqC,MAAA+gF,EAAA,GAAA/7E,KAAA,SAGvC9M,KAAA6yE,MACA7yE,MAAA42F,MAAAlyF,EAAA,EAAAiyF,EAWA,MANAH,GAAA93F,UAAAm4F,aAAA,WAEA,GAAAjuE,KAAA5oB,KAAA42F,MAAA,GAAA52F,KAAA02F,SAEA,OADA12F,MAAA02F,WACA9tE,GAEA4tE,KAiBA5S,GAAA,SAAAkT,EAAAvL,EAAAwL,EAAAC,GACAF,EAAAzwE,KAAAklE,EACA,IAAA0L,GAAA,SAAAC,EAAA/7B,GACA,GACA0oB,GACA/hF,EAFA4C,EAAAy2D,EAAA+7B,CAGA,OAAAxyF,EACA,WAEA,OAAAA,EAGA,MAFAm/E,GAAAiT,EAAAI,GACAp1F,EAAAi1F,IAAAlT,KACA,GAAAwQ,IAAAvyF,EAAA+hF,EAAA1jE,KAAAk0E,GAAAuB,MAAA,UAGA,IAAA/7D,GAAAwY,SAAA3tC,EAAA,MAAAwyF,EACAvwD,EAAAswD,EAAAC,EAAAr9D,GACAD,EAAAq9D,EAAAp9D,EAAA,EAAAshC,EAGA,OAFA0oB,GAAAiT,EAAAj9D,GACA/3B,EAAAi1F,IAAAlT,KACA,GAAAwQ,IAAAvyF,EAAA+hF,EAAA1jE,KAAAk0E,GAAAuB,MAAAjvD,EAAA/M,IAyCAu9D,EAAA,GAAAX,IAAAM,EAAApyF,QACApB,EAvCA,SAAA6zF,GAuBA,OAtBAh3E,GAAA,KACA7c,EAAA,KACAgM,EAAAwnF,EAAApyF,OACA0yF,EAAA,SAAAC,EAAArxB,GACA,GAAAkxB,GAAA5nF,EAAA+nF,EACAl8B,EAAA7rD,CACAA,IAAA+nF,CACA,IAAAC,GAAAL,EAAAC,EAAA,EAAA/7B,GACA0oB,EAAAiT,EAAAI,GACAp1F,EAAAi1F,IAAAlT,IACA0T,GAAA,GAAAlD,IAAAvyF,EAAA+hF,EAAA1jE,KAAA6lD,EAAA,KAAAsxB,KAEAC,EAAA,SAAAC,GACAr3E,GACAA,EAAAwmB,KAAA6wD,EACAr3E,EAAAq3E,IAGAl0F,EAAAk0F,EACAr3E,EAAAq3E,IAGAh6F,EAAA,EAAuBA,EAAA25F,EAAAtkB,QAAkBr1E,EAAA,CACzC,GAAAi6F,GAAAN,EAAAN,eAEAQ,EAAAnkF,KAAA61E,IAAA,EAAAoO,EAAAtkB,OAAAr1E,EAAA,GACAi6F,GACAL,EAAAC,EAAAhD,GAAAuB,QAIAwB,EAAAC,EAAAhD,GAAAuB,OACAwB,EAAAC,EAAAhD,GAAAC,MAGA,MAAAhxF,IAGA6zF,EACA,WAAA5C,IAAAyC,GAAAzL,EAAAjoF,IAmBAo0F,MAOAzT,GAAA,WACA,QAAAA,GAAA0T,EAAAC,GACA53F,KAAA23F,WACA33F,KAAA43F,YA8IA,MA5IA35F,QAAAC,eAAA+lF,EAAA,WAMA5lF,IAAA,WAKA,MAJA49C,GAAAkX,OAAAukC,IAAA3T,GAAA,uCACAsB,EACAA,GACA,GAAApB,IAAkCC,YAAAwT,KAAiCxT,YAAAH,MAGnE3lF,YAAA,EACAD,cAAA,IAOA8lF,EAAAvlF,UAAAL,IAAA,SAAAw5F,GACA,GAAAC,GAAA77C,EAAAwb,QAAAz3D,KAAA23F,SAAAE,EACA,KAAAC,EACA,SAAA3nF,OAAA,wBAAA0nF,EACA,OAAAC,KAAAJ,GAGA,KAGAI,GAOA7T,EAAAvlF,UAAAq5F,SAAA,SAAAC,GACA,MAAA/7C,GAAA4R,SAAA7tD,KAAA43F,UAAAI,EAAA3qF,aAOA42E,EAAAvlF,UAAAu5F,SAAA,SAAAD,EAAAE,GACAj8C,EAAAkX,OAAA6kC,IAAArG,GAAA,sEAKA,KAJA,GAAAmF,MACAqB,GAAA,EACAC,EAAAF,EAAAhC,YAAAxS,GAAAmN,MACAz1D,EAAAg9D,EAAAlE,UACA94D,GACA+8D,EACAA,GAAAH,EAAAzG,YAAAn2D,EAAAjb,MACA22E,EAAAn0F,KAAAy4B,GACAA,EAAAg9D,EAAAlE,SAEA,IAAAmE,EAEAA,GADAF,EACAvU,GAAAkT,EAAAkB,EAAAhU,cAGA0T,EAEA,IAAAY,GAAAN,EAAA3qF,WACAkrF,EAAAt8C,EAAA5uB,MAAArtB,KAAA43F,UACAW,GAAAD,GAAAN,CACA,IAAAQ,GAAAv8C,EAAA5uB,MAAArtB,KAAA23F,SAEA,OADAa,GAAAF,GAAAD,EACA,GAAApU,GAAAuU,EAAAD,IAQAtU,EAAAvlF,UAAA+5F,aAAA,SAAA5U,EAAAqU,GACA,GAAA1uC,GAAAxpD,IAkCA,WAAAikF,GAjCAhoC,EAAAp0C,IAAA7H,KAAA23F,SAAA,SAAAe,EAAAJ,GACA,GAAAhpF,GAAA2sC,EAAAwb,QAAAjO,EAAAouC,UAAAU,EAEA,IADAr8C,EAAAkX,OAAA7jD,EAAA,oCAAAgpF,GACAI,IAAAhB,GAAA,CAEA,GAAApoF,EAAAiiF,YAAA1N,EAAA1jE,MAAA,CAKA,IAHA,GAAA22E,MACAsB,EAAAF,EAAAhC,YAAAxS,GAAAmN,MACAz1D,EAAAg9D,EAAAlE,UACA94D,GACAA,EAAAt9B,MAAA+lF,EAAA/lF,MACAg5F,EAAAn0F,KAAAy4B,GAEAA,EAAAg9D,EAAAlE,SAGA,OADA4C,GAAAn0F,KAAAkhF,GACAD,GAAAkT,EAAAxnF,EAAA00E,cAIA,MAAA0T,IAIA,GAAAiB,GAAAT,EAAA75F,IAAAwlF,EAAA/lF,MACA86F,EAAAF,CAIA,OAHAC,KACAC,IAAArqF,OAAA,GAAAm1E,IAAAG,EAAA/lF,KAAA66F,KAEAC,EAAAv+C,OAAAwpC,IAAA1jE,QAGAngB,KAAA43F,YAQA3T,EAAAvlF,UAAAm6F,kBAAA,SAAAhV,EAAAqU,GAiBA,UAAAjU,GAhBAhoC,EAAAp0C,IAAA7H,KAAA23F,SAAA,SAAAe,GACA,GAAAA,IAAAhB,GAEA,MAAAgB,EAGA,IAAAC,GAAAT,EAAA75F,IAAAwlF,EAAA/lF,KACA,OAAA66F,GACAD,EAAAnqF,OAAA,GAAAm1E,IAAAG,EAAA/lF,KAAA66F,IAIAD,IAIA14F,KAAA43F,YAEA3T,KAkDArB,GAAA,WAQA,QAAAA,GAAAkW,EAAA9G,EAAA+G,GACA/4F,KAAA84F,YACA94F,KAAAgyF,gBACAhyF,KAAA+4F,YACA/4F,KAAAiyF,UAAA,KAMAjyF,KAAAgyF,eACAH,GAAA7xF,KAAAgyF,eAEAhyF,KAAA84F,UAAAjhC,WACA5b,EAAAkX,QAAAnzD,KAAAgyF,eAAAhyF,KAAAgyF,cAAAn6B,UAAA,wCAuXA,MApXA55D,QAAAC,eAAA0kF,EAAA,cACAvkF,IAAA,WACA,MAAAwkF,KACAA,EAAA,GAAAD,GAAA,GAAA2R,IAAA9R,GAAA,KAAAwB,GAAAE,WAEA/lF,YAAA,EACAD,cAAA,IAGAykF,EAAAlkF,UAAAykF,WAAA,WACA,UAGAP,EAAAlkF,UAAA+kF,YAAA,WACA,MAAAzjF,MAAAgyF,eAAAnP,GAGAD,EAAAlkF,UAAA2kF,eAAA,SAAA6O,GACA,MAAAlyF,MAAA84F,UAAAjhC,UAEA73D,KAGA,GAAA4iF,GAAA5iF,KAAA84F,UAAA5G,EAAAlyF,KAAA+4F,YAIAnW,EAAAlkF,UAAAyzF,kBAAA,SAAAC,GAEA,iBAAAA,EACA,MAAApyF,MAAAyjF,aAGA,IAAA39E,GAAA9F,KAAA84F,UAAAz6F,IAAA+zF,EACA,eAAAtsF,EAAA+8E,EAAA/8E,GAIA88E,EAAAlkF,UAAA6D,SAAA,SAAAH,GACA,GAAAqwF,GAAArwF,EAAAmoF,UACA,eAAAkI,EACAzyF,KACAA,KAAAmyF,kBAAAM,GAAAlwF,SAAAH,EAAAqoF,aAGA7H,EAAAlkF,UAAA2zF,SAAA,SAAAD,GACA,cAAApyF,KAAA84F,UAAAz6F,IAAA+zF,IAGAxP,EAAAlkF,UAAA0kF,qBAAA,SAAAgP,EAAAG,GAEA,GADAt2C,EAAAkX,OAAAo/B,EAAA,8CACA,cAAAH,EACA,MAAApyF,MAAAqjF,eAAAkP,EAGA,IAAA1O,GAAA,GAAAH,IAAA0O,EAAAG,GACAqG,MAAA,GAAAI,MAAA,GAAAC,MAAA,EAUA,OATA1G,GAAA16B,WACA+gC,EAAA54F,KAAA84F,UAAAvqF,OAAA6jF,GACA4G,EAAAh5F,KAAA+4F,UAAAF,kBAAAhV,EAAA7jF,KAAA84F,aAGAF,EAAA54F,KAAA84F,UAAAz+C,OAAA+3C,EAAAG,GACAyG,EAAAh5F,KAAA+4F,UAAAN,aAAA5U,EAAA7jF,KAAA84F,YAEAG,EAAAL,EAAA/gC,UAAAgrB,EAAA7iF,KAAAgyF,cACA,GAAApP,GAAAgW,EAAAK,EAAAD,IAIApW,EAAAlkF,UAAA8zF,YAAA,SAAApwF,EAAAmwF,GACA,GAAAE,GAAArwF,EAAAmoF,UACA,WAAAkI,EACA,MAAAF,EAGAt2C,GAAAkX,OAAA,cAAA/wD,EAAAmoF,YAAA,IAAAnoF,EAAAooF,YAAA,6CACA,IAAA0O,GAAAl5F,KAAAmyF,kBAAAM,GAAAD,YAAApwF,EAAAqoF,WAAA8H,EACA,OAAAvyF,MAAAojF,qBAAAqP,EAAAyG,IAIAtW,EAAAlkF,UAAAm5D,QAAA,WACA,MAAA73D,MAAA84F,UAAAjhC,WAGA+qB,EAAAlkF,UAAAg0F,YAAA,WACA,MAAA1yF,MAAA84F,UAAAjmB,SAGA+P,EAAAlkF,UAAAuD,IAAA,SAAA0wF,GACA,GAAA3yF,KAAA63D,UACA,WACA,IAAAn2D,MACAy3F,EAAA,EAAAtE,EAAA,EAAAuE,GAAA,CAWA,IAVAp5F,KAAA6F,aAAAk+E,GAAA,SAAAjiF,EAAAuwB,GACA3wB,EAAAI,GAAAuwB,EAAApwB,IAAA0wF,GACAwG,IACAC,GAAAxW,EAAA+G,gBAAAp5E,KAAAzO,GACA+yF,EAAA3hF,KAAAgG,IAAA27E,EAAAnsF,OAAA5G,IAGAs3F,GAAA,KAGAzG,GAAAyG,GAAAvE,EAAA,EAAAsE,EAAA,CAEA,GAAAhxC,KACA,QAAArmD,KAAAJ,GACAymD,EAAArmD,GAAAJ,EAAAI,EACA,OAAAqmD,GAMA,MAHAwqC,KAAA3yF,KAAAyjF,cAAA5rB,YACAn2D,EAAA,aAAA1B,KAAAyjF,cAAAxhF,OAEAP,GAIAkhF,EAAAlkF,UAAAmhB,KAAA,WACA,UAAA7f,KAAAiyF,UAAA,CACA,GAAAoH,GAAA,EACAr5F,MAAAyjF,cAAA5rB,YACAwhC,GACA,YACAzH,GAAA5xF,KAAAyjF,cAAAxhF,OACA,KACAjC,KAAA6F,aAAAk+E,GAAA,SAAAjiF,EAAAuwB,GACA,GAAAinE,GAAAjnE,EAAAxS,MACA,MAAAy5E,IACAD,GAAA,IAAAv3F,EAAA,IAAAw3F,KAEAt5F,KAAAiyF,UAAA,KAAAoH,EAAA,GAAA7S,EAAA6S,GAEA,MAAAr5F,MAAAiyF,WAGArP,EAAAlkF,UAAA4zF,wBAAA,SAAAF,EAAA//D,EAAA/iB,GACA,GAAAiqF,GAAAv5F,KAAAw5F,cAAAlqF,EACA,IAAAiqF,EAAA,CACA,GAAAE,GAAAF,EAAAvD,kBAAA,GAAAtS,IAAA0O,EAAA//D,GACA,OAAAonE,KAAA37F,KAAA,KAGA,MAAAkC,MAAA84F,UAAA9C,kBAAA5D,IAOAxP,EAAAlkF,UAAAg7F,kBAAA,SAAA1B,GACA,GAAAuB,GAAAv5F,KAAAw5F,cAAAxB,EACA,IAAAuB,EAAA,CACA,GAAA3E,GAAA2E,EAAA3E,QACA,OAAAA,MAAA92F,KAGA,MAAAkC,MAAA84F,UAAAlE,UAOAhS,EAAAlkF,UAAAi7F,cAAA,SAAA3B,GACA,GAAApD,GAAA50F,KAAA05F,kBAAA1B,EACA,OAAApD,GACA,GAAAlR,IAAAkR,EAAA50F,KAAA84F,UAAAz6F,IAAAu2F,IAGA,MAQAhS,EAAAlkF,UAAAk7F,iBAAA,SAAA5B,GACA,GAAAuB,GAAAv5F,KAAAw5F,cAAAxB,EACA,IAAAuB,EAAA,CACA,GAAA1E,GAAA0E,EAAA1E,QACA,OAAAA,MAAA/2F,KAGA,MAAAkC,MAAA84F,UAAAjE,UAOAjS,EAAAlkF,UAAAm7F,aAAA,SAAA7B,GACA,GAAAnD,GAAA70F,KAAA45F,iBAAA5B,EACA,OAAAnD,GACA,GAAAnR,IAAAmR,EAAA70F,KAAA84F,UAAAz6F,IAAAw2F,IAGA,MAMAjS,EAAAlkF,UAAAmH,aAAA,SAAAyJ,EAAA9J,GACA,GAAA+zF,GAAAv5F,KAAAw5F,cAAAlqF,EACA,OAAAiqF,GACAA,EAAA9E,iBAAA,SAAAqF,GACA,MAAAt0F,GAAAs0F,EAAAh8F,KAAAg8F,EAAA35E,QAIAngB,KAAA84F,UAAArE,iBAAAjvF,IAOAo9E,EAAAlkF,UAAAw3F,YAAA,SAAA8B,GACA,MAAAh4F,MAAAo2F,gBAAA4B,EAAA5G,UAAA4G,IAQApV,EAAAlkF,UAAA03F,gBAAA,SAAA2D,EAAA/B,GACA,GAAAuB,GAAAv5F,KAAAw5F,cAAAxB,EACA,IAAAuB,EACA,MAAAA,GAAAnD,gBAAA2D,EAAA,SAAAj4F,GAAkE,MAAAA,IAKlE,KAFA,GAAA27D,GAAAz9D,KAAA84F,UAAA1C,gBAAA2D,EAAAj8F,KAAA4lF,GAAAmN,MACAz1D,EAAAqiC,EAAA22B,OACA,MAAAh5D,GAAA48D,EAAAjH,QAAA31D,EAAA2+D,GAAA,GACAt8B,EAAAy2B,UACA94D,EAAAqiC,EAAA22B,MAEA,OAAA32B,IAOAmlB,EAAAlkF,UAAA43F,mBAAA,SAAA0B,GACA,MAAAh4F,MAAAq2F,uBAAA2B,EAAAxG,UAAAwG,IAOApV,EAAAlkF,UAAA23F,uBAAA,SAAA2D,EAAAhC,GACA,GAAAuB,GAAAv5F,KAAAw5F,cAAAxB,EACA,IAAAuB,EACA,MAAAA,GAAAlD,uBAAA2D,EAAA,SAAAl4F,GACA,MAAAA,IAMA,KAFA,GAAA27D,GAAAz9D,KAAA84F,UAAAzC,uBAAA2D,EAAAl8F,KAAA4lF,GAAAmN,MACAz1D,EAAAqiC,EAAA22B,OACA,MAAAh5D,GAAA48D,EAAAjH,QAAA31D,EAAA4+D,GAAA,GACAv8B,EAAAy2B,UACA94D,EAAAqiC,EAAA22B,MAEA,OAAA32B,IAMAmlB,EAAAlkF,UAAAo0F,UAAA,SAAArH,GACA,MAAAzrF,MAAA63D,UACA4zB,EAAA5zB,UACA,GAGA,EAGA4zB,EAAAtI,cAAAsI,EAAA5zB,UACA,EAEA4zB,IAAAwO,IACA,EAIA,GAMArX,EAAAlkF,UAAA40F,UAAA,SAAA0E,GACA,GAAAA,IAAArG,IACA3xF,KAAA+4F,UAAAhB,SAAAC,GACA,MAAAh4F,KAGA,IAAAg5F,GAAAh5F,KAAA+4F,UAAAd,SAAAD,EAAAh4F,KAAA84F,UACA,WAAAlW,GAAA5iF,KAAA84F,UAAA94F,KAAAgyF,cAAAgH,IAMApW,EAAAlkF,UAAA60F,UAAA,SAAAjkF,GACA,MAAAA,KAAAqiF,IAAA3xF,KAAA+4F,UAAAhB,SAAAzoF,IAKAszE,EAAAlkF,UAAA8sF,OAAA,SAAAC,GACA,GAAAA,IAAAzrF,KACA,QAEA,IAAAyrF,EAAAtI,aACA,QAGA,IAAA+W,GAAAzO,CACA,IAAAzrF,KAAAyjF,cAAA+H,OAAA0O,EAAAzW,eAGA,IAAAzjF,KAAA84F,UAAAjmB,UAAAqnB,EAAApB,UAAAjmB,QAAA,CAKA,IAJA,GAAAsnB,GAAAn6F,KAAAk2F,YAAAnS,IACAqW,EAAAF,EAAAhE,YAAAnS,IACAsW,EAAAF,EAAAjG,UACAoG,EAAAF,EAAAlG,UACAmG,GAAAC,GAAA,CACA,GAAAD,EAAAv8F,OAAAw8F,EAAAx8F,OACAu8F,EAAAl6E,KAAAqrE,OAAA8O,EAAAn6E,MACA,QAEAk6E,GAAAF,EAAAjG,UACAoG,EAAAF,EAAAlG,UAEA,cAAAmG,GAAA,OAAAC,EAGA,SAlBA,UA8BA1X,EAAAlkF,UAAA86F,cAAA,SAAAxB,GACA,MAAAA,KAAArG,GACA,KAGA3xF,KAAA+4F,UAAA16F,IAAA25F,EAAA3qF,aAOAu1E,EAAA+G,gBAAA,iBACA/G,KAOA2X,GAAA,SAAAzhC,GAEA,QAAAyhC,KACA,MAAAzhC,GAAAp7D,KAAAsC,KAAA,GAAAu0F,IAAA9R,GAAAG,GAAAC,WAAAoB,GAAAE,UAAAnkF,KAuBA,MAzBA+yD,GAAAuG,UAAAihC,EAAAzhC,GAIAyhC,EAAA77F,UAAAo0F,UAAA,SAAArH,GACA,MAAAA,KAAAzrF,KACA,EAGA,GAGAu6F,EAAA77F,UAAA8sF,OAAA,SAAAC,GAEA,MAAAA,KAAAzrF,MAEAu6F,EAAA77F,UAAA+kF,YAAA,WACA,MAAAzjF,OAEAu6F,EAAA77F,UAAAyzF,kBAAA,SAAAC,GACA,MAAAxP,IAAAC,YAEA0X,EAAA77F,UAAAm5D,QAAA,WACA,UAEA0iC,GACC3X,IAMDqX,GAAA,GAAAM,GACAt8F,QAAAuI,iBAAAk9E,IACA2N,KACA1+E,MAAA,GAAA+wE,IAAAqE,EAAAnF,GAAAC,aAEA2X,KACA7nF,MAAA,GAAA+wE,IAAAsE,EAAAiS,OAMA3I,GAAAtM,aAAApC,GAAAC,WACAC,GAAAoC,0BAAAtC,GAlyDA,SAAA3gF,GACAgjF,EAAAhjF,GAkyDAg4F,IA3+CA,SAAAh4F,GACAmjF,EAAAnjF,GA2+CAg4F,GAiBA,IAAAlX,KAAA,GAhgDA,SAAA9gF,GACAkjF,EAAAljF,GAskDAygF,EAsBA,IAwnBA+X,IAi1BAC,GAz8CAC,GAAA,SAAA7hC,GAEA,QAAA6hC,KACA,cAAA7hC,KAAA/sD,MAAA/L,KAAA8L,YAAA9L,KAqDA,MAvDA+yD,GAAAuG,UAAAqhC,EAAA7hC,GAOA6hC,EAAAj8F,UAAAqyF,QAAA,SAAA/8E,EAAAU,GACA,GAAAi/E,GAAA3/E,EAAAmM,KAAA2yE,UAAAp+E,EAAAyL,KACA,YAAAwzE,EACAnR,EAAAxuE,EAAAlW,KAAA4W,EAAA5W,MAGA61F,GAMAgH,EAAAj8F,UAAA6yF,YAAA,SAAApxE,GACA,UAKAw6E,EAAAj8F,UAAAsyF,oBAAA,SAAAC,EAAAt9D,GACA,OAAAs9D,EAAAzF,OAAA73D,IAKAgnE,EAAAj8F,UAAA0yF,QAAA,WACA,MAAA1N,IAAA2N,KAKAsJ,EAAAj8F,UAAA8yF,QAAA,WACA,MAAA9N,IAAA8W,KAOAG,EAAAj8F,UAAA+yF,SAAA,SAAAC,EAAA5zF,GACA,GAAA88F,GAAAlY,EAAAgP,EACA,WAAAhO,IAAA5lF,EAAA88F,IAKAD,EAAAj8F,UAAA2O,SAAA,WACA,gBAEAstF,GACC7J,IACD+J,GAAA,GAAAF,IAsBAG,GAAA,SAAAhiC,GAEA,QAAAgiC,GAAAC,GACA,GAAAvxC,GAAAsP,EAAAp7D,KAAAsC,WAGA,OAFAwpD,GAAAuxC,aACA9+C,EAAAkX,QAAA4nC,EAAAljC,WAAA,cAAAkjC,EAAAxQ,WAAA,2DACA/gC,EAmDA,MAxDAuJ,GAAAuG,UAAAwhC,EAAAhiC,GAYAgiC,EAAAp8F,UAAAs8F,aAAA,SAAAC,GACA,MAAAA,GAAA14F,SAAAvC,KAAA+6F,aAKAD,EAAAp8F,UAAA6yF,YAAA,SAAApxE,GACA,OAAAA,EAAA5d,SAAAvC,KAAA+6F,YAAAljC,WAKAijC,EAAAp8F,UAAAqyF,QAAA,SAAA/8E,EAAAU,GACA,GAAAwmF,GAAAl7F,KAAAg7F,aAAAhnF,EAAAmM,MACAg7E,EAAAn7F,KAAAg7F,aAAAtmF,EAAAyL,MACAwzE,EAAAuH,EAAApI,UAAAqI,EACA,YAAAxH,EACAnR,EAAAxuE,EAAAlW,KAAA4W,EAAA5W,MAGA61F,GAMAmH,EAAAp8F,UAAA+yF,SAAA,SAAAC,EAAA5zF,GACA,GAAA88F,GAAAlY,EAAAgP,GACAvxE,EAAAyiE,GAAAC,WAAA2P,YAAAxyF,KAAA+6F,WAAAH,EACA,WAAAlX,IAAA5lF,EAAAqiB,IAKA26E,EAAAp8F,UAAA8yF,QAAA,WACA,GAAArxE,GAAAyiE,GAAAC,WAAA2P,YAAAxyF,KAAA+6F,WAAAd,GACA,WAAAvW,IAAAsE,EAAA7nE,IAKA26E,EAAAp8F,UAAA2O,SAAA,WACA,MAAArN,MAAA+6F,WAAA/1F,QAAA8H,KAAA,MAEAguF,GACChK,IAqBDsK,GAAA,WAMA,QAAAA,GAAAC,EAAAC,EAAAC,GACAv7F,KAAAq7F,QACAr7F,KAAAs7F,OACAt7F,KAAAu7F,SAsIA,MA9HAH,GAAA18F,UAAAuD,IAAA,WAEA,MADAg6C,GAAA4e,iBAAA,uBAAA/uD,UAAApH,QACA1E,KAAAq7F,MAAAp5F,OAOAm5F,EAAA18F,UAAA88F,UAAA,WAEA,MADAv/C,GAAA4e,iBAAA,6BAAA/uD,UAAApH,QACA1E,KAAAq7F,MAAAp5F,KAAA,IAIAm5F,EAAA18F,UAAA4xF,OAAA,WAGA,MADAr0C,GAAA4e,iBAAA,0BAAA/uD,UAAApH,QACA1E,KAAAw7F,aAOAJ,EAAA18F,UAAA+8F,OAAA,WAEA,MADAx/C,GAAA4e,iBAAA,0BAAA/uD,UAAApH,SACA1E,KAAAq7F,MAAAxjC,WAQAujC,EAAA18F,UAAAoH,MAAA,SAAA41F,GACAz/C,EAAA4e,iBAAA,yBAAA/uD,UAAApH,QAEAg3F,EAAAzoF,OAAAyoF,GACAvM,GAAA,uBAAAuM,GAAA,EACA,IAAAC,GAAA,GAAA1R,IAAAyR,GACAE,EAAA57F,KAAAs7F,KAAAx1F,MAAA61F,EACA,WAAAP,GAAAp7F,KAAAq7F,MAAA94F,SAAAo5F,GAAAC,EAAA7X,KAQAqX,EAAA18F,UAAA2zF,SAAA,SAAAqJ,GACAz/C,EAAA4e,iBAAA,4BAAA/uD,UAAApH,QACAyqF,GAAA,0BAAAuM,GAAA,EACA,IAAAC,GAAA,GAAA1R,IAAAyR,EACA,QAAA17F,KAAAq7F,MAAA94F,SAAAo5F,GAAA9jC,WAOAujC,EAAA18F,UAAA+kF,YAAA,WAGA,MAFAxnC,GAAA4e,iBAAA,+BAAA/uD,UAAApH,QAEA1E,KAAAq7F,MAAA5X,cAAAxhF,OAUAm5F,EAAA18F,UAAAmD,QAAA,SAAA2D,GACA,GAAAgkD,GAAAxpD,IAGA,OAFAi8C,GAAA4e,iBAAA,2BAAA/uD,UAAApH,QACAu3C,EAAA4W,iBAAA,yBAAArtD,GAAA,IACAxF,KAAAq7F,MAAAlY,gBAEAnjF,KAAAq7F,MAEAx1F,aAAA7F,KAAAu7F,OAAA,SAAAz5F,EAAAqe,GACA,MAAA3a,GAAA,GAAA41F,GAAAj7E,EAAAqpC,EAAA8xC,KAAAx1F,MAAAhE,GAAAiiF,QAOAqX,EAAA18F,UAAAkmB,YAAA,WAEA,MADAq3B,GAAA4e,iBAAA,+BAAA/uD,UAAApH,SACA1E,KAAAq7F,MAAAlY,eAGAnjF,KAAAq7F,MAAAxjC,WAEA55D,OAAAC,eAAAk9F,EAAA18F,UAAA,OACAL,IAAA,WACA,MAAA2B,MAAAs7F,KAAAO,UAEAz9F,YAAA,EACAD,cAAA,IAMAi9F,EAAA18F,UAAAg0F,YAAA,WAEA,MADAz2C,GAAA4e,iBAAA,+BAAA/uD,UAAApH,QACA1E,KAAAq7F,MAAA3I,eAKA0I,EAAA18F,UAAAo9F,OAAA,WAEA,MADA7/C,GAAA4e,iBAAA,uBAAA/uD,UAAApH,QACA1E,KAAAs7F,MAEAr9F,OAAAC,eAAAk9F,EAAA18F,UAAA,OACAL,IAAA,WACA,MAAA2B,MAAA87F,UAEA19F,YAAA,EACAD,cAAA,IAEAi9F,KAsBAW,GAAA,WAOA,QAAAA,GAAA9M,EAAA+M,EAAAzyB,EAAA0yB,GACAj8F,KAAAivF,YACAjvF,KAAAg8F,oBACAh8F,KAAAupE,WACAvpE,KAAAi8F,WAoCA,MA/BAF,GAAAr9F,UAAAw9F,QAAA,WACA,GAAAzxF,GAAAzK,KAAAupE,SAAAuyB,QACA,iBAAA97F,KAAAivF,UACAxkF,EAAArI,KAGAqI,EAAA0xF,YAAA/5F,MAMA25F,EAAAr9F,UAAA09F,aAAA,WACA,MAAAp8F,MAAAivF,WAKA8M,EAAAr9F,UAAA29F,eAAA,WACA,MAAAr8F,MAAAg8F,kBAAAK,eAAAr8F,OAKA+7F,EAAAr9F,UAAA2O,SAAA,WACA,MAAArN,MAAAk8F,UAAA7uF,WACA,IACArN,KAAAivF,UACA,IACAhzC,EAAA9uC,UAAAnN,KAAAupE,SAAAiyB,cAEAO,KAEAO,GAAA,WAMA,QAAAA,GAAAN,EAAA5+E,EAAAhb,GACApC,KAAAg8F,oBACAh8F,KAAAod,QACApd,KAAAoC,OA0BA,MArBAk6F,GAAA59F,UAAAw9F,QAAA,WACA,MAAAl8F,MAAAoC,MAKAk6F,EAAA59F,UAAA09F,aAAA,WACA,gBAKAE,EAAA59F,UAAA29F,eAAA,WACA,MAAAr8F,MAAAg8F,kBAAAK,eAAAr8F,OAKAs8F,EAAA59F,UAAA2O,SAAA,WACA,MAAArN,MAAAoC,KAAAiL,WAAA,WAEAivF,KAqBAC,GAAA,WAMA,QAAAA,GAAAC,EAAAC,EAAAC,GACA18F,KAAAw8F,YACAx8F,KAAAy8F,kBACAz8F,KAAA08F,WAmEA,MA9DAH,GAAA79F,UAAAi+F,WAAA,SAAA1N,GACA,gBAAAA,GAKAsN,EAAA79F,UAAA2mC,YAAA,SAAA3I,EAAAvJ,GACA,GAAA7jB,GAAA6jB,EAAAypE,iBAAAC,UACA,WAAAd,IAAA,QAAA/7F,KAAA,GAAAo7F,IAAA1+D,EAAAogE,aAAA3pE,EAAA2oE,SAAAxsF,KAKAitF,EAAA79F,UAAA29F,eAAA,SAAAU,GACA,GAAAjpF,GAAA9T,KAAA08F,QACA,eAAAK,EAAAX,eAAA,CACAngD,EAAAkX,OAAAnzD,KAAAy8F,gBAAA,+DACA,IAAAO,GAAAh9F,KAAAy8F,eACA,mBAEAO,EAAAt/F,KAAAoW,EAAAipF,EAAA3/E,QAIA,GAAA6/E,GAAAj9F,KAAAw8F,SACA,mBACAS,EAAAv/F,KAAAoW,EAAAipF,EAAAxzB,YAOAgzB,EAAA79F,UAAAw+F,kBAAA,SAAA9/E,EAAAhb,GACA,MAAApC,MAAAy8F,gBACA,GAAAH,IAAAt8F,KAAAod,EAAAhb,GAGA,MAMAm6F,EAAA79F,UAAAizB,QAAA,SAAA85D,GACA,MAAAA,aAAA8Q,MAGA9Q,EAAA+Q,YAAAx8F,KAAAw8F,WAKA/Q,EAAA+Q,YAAAx8F,KAAAw8F,WAAA/Q,EAAAiR,WAAA18F,KAAA08F,WAMAH,EAAA79F,UAAAy+F,eAAA,WACA,cAAAn9F,KAAAw8F,WAEAD,KAWAa,GAAA,WAMA,QAAAA,GAAAC,EAAAZ,EAAAC,GACA18F,KAAAq9F,aACAr9F,KAAAy8F,kBACAz8F,KAAA08F,WAyFA,MApFAU,GAAA1+F,UAAAi+F,WAAA,SAAA1N,GACA,GAAAqO,GAAA,mBAAArO,EAAA,cAAAA,CAGA,OAFAqO,GACA,qBAAAA,EAAA,gBAAAA,EACArhD,EAAA4R,SAAA7tD,KAAAq9F,WAAAC,IAKAF,EAAA1+F,UAAAw+F,kBAAA,SAAA9/E,EAAAhb,GACA,MAAApC,MAAAy8F,gBACA,GAAAH,IAAAt8F,KAAAod,EAAAhb,GAGA,MAMAg7F,EAAA1+F,UAAA2mC,YAAA,SAAA3I,EAAAvJ,GACA8oB,EAAAkX,OAAA,MAAAz2B,EAAA01D,UAAA,wCACA,IAAA3nF,GAAA0oB,EAAA2oE,SAAAh2F,MAA0D42B,EAAA,WAC1DptB,EAAA6jB,EAAAypE,iBAAAC,UACA,WAAAd,IAAAr/D,EAAAp9B,KAAAU,KAAA,GAAAo7F,IAAA1+D,EAAAogE,aAAAryF,EAAA6E,GAAAotB,EAAAu/D,WAKAmB,EAAA1+F,UAAA29F,eAAA,SAAAU,GACA,GAAAjpF,GAAA9T,KAAA08F,QACA,eAAAK,EAAAX,eAAA,CACAngD,EAAAkX,OAAAnzD,KAAAy8F,gBAAA,+DACA,IAAAc,GAAAv9F,KAAAy8F,eACA,mBAEAc,EAAA7/F,KAAAoW,EAAAipF,EAAA3/E,QAIA,GAAAogF,GAAAx9F,KAAAq9F,WAAAN,EAAA9N,UACA,mBACAuO,EAAA9/F,KAAAoW,EAAAipF,EAAAxzB,SAAAwzB,EAAAd,YAOAmB,EAAA1+F,UAAAizB,QAAA,SAAA85D,GACA,GAAAA,YAAA2R,GAAA,CACA,IAAAp9F,KAAAq9F,aAAA5R,EAAA4R,WACA,QAEA,IAAAr9F,KAAA08F,WAAAjR,EAAAiR,SAAA,CACA,GAAAe,GAAAxhD,EAAA6b,SAAA2zB,EAAA4R,WAEA,IAAAI,IADAxhD,EAAA6b,SAAA93D,KAAAq9F,YACA,CAIA,OAAAI,EAAA,CACA,GAAAC,GAAwDzhD,EAAAoc,UAAAozB,EAAA4R,YACxDM,EAAuD1hD,EAAAoc,UAAAr4D,KAAAq9F,WACvD,SAAAM,IAAAD,GACAjS,EAAA4R,WAAAK,IACA19F,KAAAq9F,WAAAM,IACAlS,EAAA4R,WAAAK,KAAA19F,KAAAq9F,WAAAM,IAIA,MAAA1hD,GAAAjnC,MAAAhV,KAAAq9F,WAAA,SAAApO,EAAApoF,GAAqF,MAAA4kF,GAAA4R,WAAApO,KAAApoF,MAKrF,UAKAu2F,EAAA1+F,UAAAy+F,eAAA,WACA,cAAAn9F,KAAAq9F,YAEAD,KAyBAzY,GAAA,WACA,QAAAA,GAAAiZ,EAAAx7F,EAAAy7F,EAAAC,GACA99F,KAAA49F,OACA59F,KAAAoC,OACApC,KAAA69F,eACA79F,KAAA89F,iBA6cA,MA3cA7/F,QAAAC,eAAAymF,EAAA,0BACAtmF,IAAA,WAEA,MADA49C,GAAAkX,OAAAsnC,GAAA,oCACAA,IAEAv1F,IAAA,SAAAjD,GACAw4F,GAAAx4F,GAEA7D,YAAA,EACAD,cAAA,IAOAwmF,EAAAoZ,wBAAA,SAAA5+E,GACA,GAAA6+E,GAAA,KACAC,EAAA,IAOA,IANA9+E,EAAA++E,aACAF,EAAA7+E,EAAAg/E,sBAEAh/E,EAAAi/E,WACAH,EAAA9+E,EAAAk/E,oBAEAl/E,EAAA09E,aAAAlL,GAAA,CACA,GAAA2M,GAAA,mGAEAC,EAAA,uGAEA,IAAAp/E,EAAA++E,WAAA,CAEA,GADA/+E,EAAAq/E,qBACAzW,EACA,SAAA53E,OAAAmuF,EAEA,oBAAAN,GACA,SAAA7tF,OAAAouF,GAGA,GAAAp/E,EAAAi/E,SAAA,CAEA,GADAj/E,EAAAs/E,mBACAzW,EACA,SAAA73E,OAAAmuF,EAEA,oBAAAL,GACA,SAAA9tF,OAAAouF,QAIA,IAAAp/E,EAAA09E,aAAA9Y,IACA,SAAAia,IAAA5P,GAAA4P,IACA,MAAAC,IAAA7P,GAAA6P,GACA,SAAA9tF,OAAA,qKAOA,IAFA8rC,EAAAkX,OAAAh0C,EAAA09E,oBAAA/B,KACA37E,EAAA09E,aAAAhC,GAAA,uBACA,MAAAmD,GAAA,gBAAAA,IACA,MAAAC,GAAA,gBAAAA,GACA,SAAA9tF,OAAA,0FAUAw0E,EAAA+Z,eAAA,SAAAv/E,GACA,GAAAA,EAAA++E,YACA/+E,EAAAi/E,UACAj/E,EAAAw/E,aACAx/E,EAAAy/E,mBACA,SAAAzuF,OAAA,uGAQAw0E,EAAAjmF,UAAAmgG,+BAAA,SAAArsC,GACA,QAAAxyD,KAAA89F,eACA,SAAA3tF,OAAAqiD,EAAA,gDAMAmyB,EAAAjmF,UAAAk+F,eAAA,WACA,MAAA58F,MAAA69F,cAKAlZ,EAAAjmF,UAAAo9F,OAAA,WAKA,MAJA7/C,GAAA4e,iBAAA,gBAAA/uD,UAAApH,QAIA,GAAAigF,GAAA8V,uBAAAz6F,KAAA49F,KAAA59F,KAAAoC,OASAuiF,EAAAjmF,UAAAyC,GAAA,SAAA8tF,EAAA1gE,EAAAuwE,EAAA/+F,GACAk8C,EAAA4e,iBAAA,eAAA/uD,UAAApH,QACAsqF,GAAA,aAAAC,GAAA,GACAhzC,EAAA4W,iBAAA,aAAAtkC,GAAA,EACA,IAAAla,GAAAswE,EAAAoa,yBAAA,WAAAD,EAAA/+F,EACA,cAAAkvF,EACAjvF,KAAAg/F,aAAAzwE,EAAAla,EAAAs7E,OAAAt7E,EAAAtU,aAEA,CACA,GAAAyd,KACAA,GAAAyxE,GAAA1gE,EACAvuB,KAAAi/F,aAAAzhF,EAAAnJ,EAAAs7E,OAAAt7E,EAAAtU,SAEA,MAAAwuB,IAQAo2D,EAAAjmF,UAAAsgG,aAAA,SAAAzwE,EAAA2wE,EAAAn/F,GACA,GAAAy2C,GAAA,GAAA+lD,IAAAhuE,EAAA2wE,GAAA,KAAAn/F,GAAA,KACAC,MAAA49F,KAAAuB,yBAAAn/F,KAAAw2C,IAQAmuC,EAAAjmF,UAAAugG,aAAA,SAAAzhF,EAAA0hF,EAAAn/F,GACA,GAAAy2C,GAAA,GAAA4mD,IAAA5/E,EAAA0hF,EAAAn/F,EACAC,MAAA49F,KAAAuB,yBAAAn/F,KAAAw2C,IAOAmuC,EAAAjmF,UAAAgqD,IAAA,SAAAumC,EAAA1gE,EAAAxuB,GACAk8C,EAAA4e,iBAAA,gBAAA/uD,UAAApH,QACAsqF,GAAA,cAAAC,GAAA,GACAhzC,EAAA4W,iBAAA,cAAAtkC,GAAA,GACA0tB,EAAA6W,sBAAA,cAAA/yD,GAAA,EACA,IAAAy2C,GAAA,KACAh5B,EAAA,IACA,cAAAyxE,EAAA,CAEAz4C,EAAA,GAAA+lD,IADAhuE,GAAA,KACA,KAAAxuB,GAAA,UAEAkvF,KACA1gE,IACA/Q,KACAA,EAAAyxE,GAAA1gE,GAEAioB,EAAA,GAAA4mD,IAAA5/E,EAAA,KAAAzd,GAAA,MAEAC,MAAA49F,KAAAwB,4BAAAp/F,KAAAw2C,IAUAmuC,EAAAjmF,UAAA0W,KAAA,SAAA65E,EAAAoQ,EAAAC,EAAAv/F,GACA,GAAAypD,GAAAxpD,IACAi8C,GAAA4e,iBAAA,iBAAA/uD,UAAApH,QACAsqF,GAAA,eAAAC,GAAA,GACAhzC,EAAA4W,iBAAA,eAAAwsC,GAAA,EACA,IAAAhrF,GAAAswE,EAAAoa,yBAAA,aAAAO,EAAAv/F,GAKAw/F,GAAA,EACAj1B,EAAA,GAAAruB,GAAAka,QAEAmU,GAAAlU,QAAAlvD,MAAA,aACA,IAAAs4F,GAAA,SAAAj2B,GAGAg2B,IACAA,GAAA,EACA/1C,EAAAd,IAAAumC,EAAAuQ,GACAH,GACAA,EAAApzF,KAAAoI,EAAAtU,SAAAwpE,GAEAe,EAAArjE,QAAAsiE,IAUA,OAPAvpE,MAAAmB,GAAA8tF,EAAAuQ,EACA,SAAAr4F,GACAqiD,EAAAd,IAAAumC,EAAAuQ,GACAnrF,EAAAs7E,QACAt7E,EAAAs7E,OAAA1jF,KAAAoI,EAAAtU,SAAAoH,GACAmjE,EAAA1oD,OAAAza,KAEAmjE,EAAAlU,SAOAuuB,EAAAjmF,UAAA+gG,aAAA,SAAAC,GAEA,GADAzjD,EAAA4e,iBAAA,yBAAA/uD,UAAApH,QACA,gBAAAg7F,IACAxsF,KAAAC,MAAAusF,QACAA,GAAA,EACA,SAAAvvF,OAAA,iEAEA,IAAAnQ,KAAA69F,aAAAc,WACA,SAAAxuF,OAAA,sGAGA,WAAAw0E,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAApC,KAAA69F,aAAA4B,aAAAC,GAAA1/F,KAAA89F,iBAOAnZ,EAAAjmF,UAAAihG,YAAA,SAAAD,GAEA,GADAzjD,EAAA4e,iBAAA,wBAAA/uD,UAAApH,QACA,gBAAAg7F,IACAxsF,KAAAC,MAAAusF,QACAA,GAAA,EACA,SAAAvvF,OAAA,gEAEA,IAAAnQ,KAAA69F,aAAAc,WACA,SAAAxuF,OAAA,qGAGA,WAAAw0E,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAApC,KAAA69F,aAAA8B,YAAAD,GAAA1/F,KAAA89F,iBAOAnZ,EAAAjmF,UAAAkhG,aAAA,SAAAx9F,GAEA,GADA65C,EAAA4e,iBAAA,yBAAA/uD,UAAApH,QACA,SAAAtC,EACA,SAAA+N,OAAA,0EAEA,kBAAA/N,EACA,SAAA+N,OAAA,oFAEA,eAAA/N,EACA,SAAA+N,OAAA,8EAEAg/E,IAAA,uBAAA/sF,GAAA,GACApC,KAAA6+F,+BAAA,qBACA,IAAAgB,GAAA,GAAA5V,IAAA7nF,EACA,IAAAy9F,EAAAhoC,UACA,SAAA1nD,OAAA,oFAEA,IAAAb,GAAA,GAAAwrF,IAAA+E,GACAC,EAAA9/F,KAAA69F,aAAAkC,QAAAzwF,EAEA,OADAq1E,GAAAoZ,wBAAA+B,GACA,GAAAnb,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAA09F,GAAA,IAMAnb,EAAAjmF,UAAAshG,WAAA,WACA/jD,EAAA4e,iBAAA,uBAAA/uD,UAAApH,QACA1E,KAAA6+F,+BAAA,mBACA,IAAAiB,GAAA9/F,KAAA69F,aAAAkC,QAAApO,GAEA,OADAhN,GAAAoZ,wBAAA+B,GACA,GAAAnb,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAA09F,GAAA,IAMAnb,EAAAjmF,UAAAuhG,gBAAA,WACAhkD,EAAA4e,iBAAA,4BAAA/uD,UAAApH,QACA1E,KAAA6+F,+BAAA,wBACA,IAAAiB,GAAA9/F,KAAA69F,aAAAkC,QAAAhc,GAEA,OADAY,GAAAoZ,wBAAA+B,GACA,GAAAnb,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAA09F,GAAA,IAMAnb,EAAAjmF,UAAAwhG,aAAA,WACAjkD,EAAA4e,iBAAA,yBAAA/uD,UAAApH,QACA1E,KAAA6+F,+BAAA,qBACA,IAAAiB,GAAA9/F,KAAA69F,aAAAkC,QAAAlF,GAEA,OADAlW,GAAAoZ,wBAAA+B,GACA,GAAAnb,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAA09F,GAAA,IAOAnb,EAAAjmF,UAAAyhG,QAAA,SAAAxtF,EAAA7U,OACA,KAAA6U,IAA+BA,EAAA,MAC/BspC,EAAA4e,iBAAA,oBAAA/uD,UAAApH,QACA2pF,GAAA,kBAAA17E,EAAA3S,KAAAoC,MAAA,GACA8sF,GAAA,kBAAApxF,GAAA,EACA,IAAAgiG,GAAA9/F,KAAA69F,aAAAsC,QAAAxtF,EAAA7U,EAGA,IAFA6mF,EAAA+Z,eAAAoB,GACAnb,EAAAoZ,wBAAA+B,GACA9/F,KAAA69F,aAAAK,WACA,SAAA/tF,OAAA,yFAQA,YAJAmC,KAAAK,IACAA,EAAA,KACA7U,EAAA,MAEA,GAAA6mF,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAA09F,EAAA9/F,KAAA89F,iBAOAnZ,EAAAjmF,UAAA0hG,MAAA,SAAAztF,EAAA7U,OACA,KAAA6U,IAA+BA,EAAA,MAC/BspC,EAAA4e,iBAAA,kBAAA/uD,UAAApH,QACA2pF,GAAA,gBAAA17E,EAAA3S,KAAAoC,MAAA,GACA8sF,GAAA,gBAAApxF,GAAA,EACA,IAAAgiG,GAAA9/F,KAAA69F,aAAAuC,MAAAztF,EAAA7U,EAGA,IAFA6mF,EAAA+Z,eAAAoB,GACAnb,EAAAoZ,wBAAA+B,GACA9/F,KAAA69F,aAAAO,SACA,SAAAjuF,OAAA,mFAGA,WAAAw0E,GAAA3kF,KAAA49F,KAAA59F,KAAAoC,KAAA09F,EAAA9/F,KAAA89F,iBASAnZ,EAAAjmF,UAAA2hG,QAAA,SAAA1tF,EAAA7U,GAIA,GAHAm+C,EAAA4e,iBAAA,oBAAA/uD,UAAApH,QACA2pF,GAAA,kBAAA17E,EAAA3S,KAAAoC,MAAA,GACA8sF,GAAA,kBAAApxF,GAAA,GACAkC,KAAA69F,aAAAK,WACA,SAAA/tF,OAAA,yFAGA,IAAAnQ,KAAA69F,aAAAO,SACA,SAAAjuF,OAAA,qFAGA,OAAAnQ,MAAAmgG,QAAAxtF,EAAA7U,GAAAsiG,MAAAztF,EAAA7U,IAKA6mF,EAAAjmF,UAAA2O,SAAA,WAEA,MADA4uC,GAAA4e,iBAAA,qBAAA/uD,UAAApH,QACA1E,KAAA49F,KAAAvwF,WAAArN,KAAAoC,KAAAuoF,sBAIAhG,EAAAjmF,UAAA4xF,OAAA,WAGA,MADAr0C,GAAA4e,iBAAA,mBAAA/uD,UAAApH,QACA1E,KAAAqN,YAMAs3E,EAAAjmF,UAAA4hG,YAAA,WACA,MAAAtgG,MAAA69F,aAAA0C,kBAKA5b,EAAAjmF,UAAA8hG,gBAAA,WACA,GAAA9+F,GAAA1B,KAAAsgG,cACA9yF,EAAA86E,EAAA5mF,EACA,cAAA8L,EAAyB,UAAAA,GAOzBm3E,EAAAjmF,UAAA+hG,QAAA,SAAAhV,GAEA,GADAxvC,EAAA4e,iBAAA,oBAAA/uD,UAAApH,UACA+mF,YAAA9G,IAAA,CAEA,SAAAx0E,OADA,wFAGA,GAAAuwF,GAAA1gG,KAAA49F,OAAAnS,EAAAmS,KACA+C,EAAA3gG,KAAAoC,KAAAopF,OAAAC,EAAArpF,MACAw+F,EAAA5gG,KAAAwgG,oBAAA/U,EAAA+U,iBACA,OAAAE,IAAAC,GAAAC,GAUAjc,EAAAoa,yBAAA,SAAAvsC,EAAA8sC,EAAAv/F,GACA,GAAAsU,IAAmBs7E,OAAA,KAAA5vF,QAAA,KACnB,IAAAu/F,GAAAv/F,EACAsU,EAAAs7E,OAAA2P,EACArjD,EAAA4W,iBAAAL,EAAA,EAAAn+C,EAAAs7E,QAAA,GACAt7E,EAAAtU,UACAk8C,EAAA6W,sBAAAN,EAAA,EAAAn+C,EAAAtU,SAAA,OAEA,IAAAu/F,EAEA,mBAAAA,IAAA,OAAAA,EAEAjrF,EAAAtU,QAAAu/F,MAEA,sBAAAA,GAIA,SAAAnvF,OAAA8rC,EAAAsW,YAAAC,EAAA,MACA,yDAJAn+C,GAAAs7E,OAAA2P,EAOA,MAAAjrF,IAEApW,OAAAC,eAAAymF,EAAAjmF,UAAA,OACAL,IAAA,WACA,MAAA2B,MAAA87F,UAEA19F,YAAA,EACAD,cAAA,IAEAwmF,KAuBAkc,GAAA,WACA,QAAAA,KACA7gG,KAAAkF,OAkEA,MA5DA27F,GAAAniG,UAAA4B,IAAA,SAAA8L,EAAAnK,GACAjC,KAAAkF,IAAAkH,GAAA,OAAAnK,MAMA4+F,EAAAniG,UAAAmvD,SAAA,SAAA/rD,GACA,MAAAm6C,GAAA4R,SAAA7tD,KAAAkF,IAAApD,IAMA++F,EAAAniG,UAAAL,IAAA,SAAA+N,GACA,MAAApM,MAAA6tD,SAAAzhD,GAAApM,KAAAkF,IAAAkH,OAAAkG,IAKAuuF,EAAAniG,UAAA6P,OAAA,SAAAnC,SACApM,MAAAkF,IAAAkH,IAKAy0F,EAAAniG,UAAAwf,MAAA,WACAle,KAAAkF,QAMA27F,EAAAniG,UAAAm5D,QAAA,WACA,MAAA5b,GAAA4b,QAAA73D,KAAAkF,MAKA27F,EAAAniG,UAAAm0E,MAAA,WACA,MAAA52B,GAAA6b,SAAA93D,KAAAkF,MAMA27F,EAAAniG,UAAAgqF,KAAA,SAAA/mF,GACAs6C,EAAAp6C,QAAA7B,KAAAkF,IAAA,SAAA00D,EAAA/uD,GAAgD,MAAAlJ,GAAAi4D,EAAA/uD,MAMhDg2F,EAAAniG,UAAAkD,KAAA,WACA,GAAAA,KAIA,OAHAq6C,GAAAp6C,QAAA7B,KAAAkF,IAAA,SAAA00D,GACAh4D,EAAAe,KAAAi3D,KAEAh4D,GAEAi/F,KAuBAC,GAAA,WACA,QAAAA,KAKA9gG,KAAA+xF,OAAA,KAKA/xF,KAAA84F,UAAA,KAuIA,MA/HAgI,GAAApiG,UAAA2xE,KAAA,SAAAjuE,GACA,SAAApC,KAAA+xF,OACA,MAAA/xF,MAAA+xF,OAAAxvF,SAAAH,EAEA,IAAAA,EAAAy1D,WAAA,MAAA73D,KAAA84F,UAYA,WAXA,IAAAiI,GAAA3+F,EAAAmoF,UAEA,IADAnoF,IAAAqoF,WACAzqF,KAAA84F,UAAAjrC,SAAAkzC,GAAA,CAEA,MADA/gG,MAAA84F,UAAAz6F,IAAA0iG,GACA1wB,KAAAjuE,GAGA,aAcA0+F,EAAApiG,UAAAsiG,SAAA,SAAA5+F,EAAA4B,GACA,GAAA5B,EAAAy1D,UACA73D,KAAA+xF,OAAA/tF,EACAhE,KAAA84F,UAAA,SAEA,WAAA94F,KAAA+xF,OACA/xF,KAAA+xF,OAAA/xF,KAAA+xF,OAAAS,YAAApwF,EAAA4B,OAEA,CACA,MAAAhE,KAAA84F,YACA94F,KAAA84F,UAAA,GAAA+H,IAEA,IAAAE,GAAA3+F,EAAAmoF,UACAvqF,MAAA84F,UAAAjrC,SAAAkzC,IACA/gG,KAAA84F,UAAAx4F,IAAAygG,EAAA,GAAAD,GAEA,IAAAh7F,GAAA9F,KAAA84F,UAAAz6F,IAAA0iG,EACA3+F,KAAAqoF,WACA3kF,EAAAk7F,SAAA5+F,EAAA4B,KASA88F,EAAApiG,UAAAuiG,OAAA,SAAA7+F,GACA,GAAAA,EAAAy1D,UAGA,MAFA73D,MAAA+xF,OAAA,KACA/xF,KAAA84F,UAAA,MACA,CAGA,WAAA94F,KAAA+xF,OAAA,CACA,GAAA/xF,KAAA+xF,OAAA5O,aAEA,QAGA,IAAAxwE,GAAA3S,KAAA+xF,MACA/xF,MAAA+xF,OAAA,IACA,IAAAmP,GAAAlhG,IAIA,OAHA2S,GAAA9M,aAAAk+E,GAAA,SAAAjiF,EAAAmpB,GACAi2E,EAAAF,SAAA,GAAA/W,IAAAnoF,GAAAmpB,KAEAjrB,KAAAihG,OAAA7+F,GAGA,UAAApC,KAAA84F,UAAA,CACA,GAAAiI,GAAA3+F,EAAAmoF,UAEA,IADAnoF,IAAAqoF,WACAzqF,KAAA84F,UAAAjrC,SAAAkzC,GAAA,CACA/gG,KAAA84F,UAAAz6F,IAAA0iG,GAAAE,OAAA7+F,IAEApC,KAAA84F,UAAAvqF,OAAAwyF,GAGA,QAAA/gG,KAAA84F,UAAAjhC,YACA73D,KAAA84F,UAAA,MACA,GAOA,UAWAgI,EAAApiG,UAAAyiG,YAAA,SAAAC,EAAAC,GACA,OAAArhG,KAAA+xF,OACAsP,EAAAD,EAAAphG,KAAA+xF,QAGA/xF,KAAA6F,aAAA,SAAA/D,EAAAmpB,GACA,GAAA7oB,GAAA,GAAA6nF,IAAAmX,EAAA/zF,WAAA,IAAAvL,EACAmpB,GAAAk2E,YAAA/+F,EAAAi/F,MASAP,EAAApiG,UAAAmH,aAAA,SAAAw7F,GACA,OAAArhG,KAAA84F,WACA94F,KAAA84F,UAAApQ,KAAA,SAAA5mF,EAAAmpB,GACAo2E,EAAAv/F,EAAAmpB,MAIA61E,KAuBAQ,GAAA,SAAAt5B,GAGA,MAFAA,SACAA,EAAA,UAAAA,EAAA,eAAAvW,OAAAE,UACAqW,GASAu5B,GAAA,SAAA5uF,EAAA6uF,GACA,MAAA7uF,IAAA,gBAAAA,IAIAspC,EAAAkX,OAAA,OAAAxgD,GAAA,6CACA6uF,EAAA7uF,EAAA,SAJAA,GAcA8uF,GAAA,SAAAx2E,EAAAu2E,GACA,GAAAE,GAAA,GAAAZ,GAIA,OAHA71E,GAAAk2E,YAAA,GAAAlX,IAAA,aAAA7nF,EAAA+d,GACAuhF,EAAAV,SAAA5+F,EAAAu/F,GAAAxhF,EAAAqhF,MAEAE,GAUAC,GAAA,SAAAxhF,EAAAqhF,GACA,GAEA7tE,GAFAiuE,EAAAzhF,EAAAsjE,cAAAxhF,MACA0gF,EAAA4e,GAAAK,EAAAJ,EAEA,IAAArhF,EAAAgjE,aAAA,CACA,GAAA0e,GAAA1hF,EACAxN,EAAA4uF,GAAAM,EAAA98D,WAAAy8D,EACA,OAAA7uF,KAAAkvF,EAAA98D,YACA49C,IAAAkf,EAAApe,cAAAxhF,MACA,GAAA6gF,IAAAnwE,EAAA+vE,EAAAC,IAGAxiE,EAIA,GAAA2hF,GAAA3hF,CAWA,OAVAwT,GAAAmuE,EACAnf,IAAAmf,EAAAre,cAAAxhF,QACA0xB,IAAA0vD,eAAA,GAAAP,IAAAH,KAEAmf,EAAAj8F,aAAAk+E,GAAA,SAAAqO,EAAA//D,GACA,GAAAkgE,GAAAoP,GAAAtvE,EAAAmvE,EACAjP,KAAAlgE,IACAsB,IAAAyvD,qBAAAgP,EAAAG,MAGA5+D,IAwBA,SAAA+mE,GACAA,IAAA,yBACAA,IAAA,iBACAA,IAAA,mCACAA,IAAA,sCACCA,YAQD,IAwGAqH,IAw5DAC,GAhgEAC,GAAA,WACA,QAAAA,GAAAC,EAAAC,EAAAC,EAAAC,GACAriG,KAAAkiG,WACAliG,KAAAmiG,aACAniG,KAAAoiG,UACApiG,KAAAqiG,SACApmD,EAAAkX,QAAAkvC,GAAAF,EAAA,uCAyBA,MAnBAF,GAAAK,KAAA,GAAAL,IACA,WACA,GAKAA,EAAAM,OAAA,GAAAN,IAAA,GACA,QACA,GAKAA,EAAAO,qBAAA,SAAAJ,GACA,UAAAH,IAAA,GACA,EAAAG,GACA,IAEAH,KAkBAQ,GAAA,WAOA,QAAAA,GACArgG,EACAsgG,EACAC,GACA3iG,KAAAoC,OACApC,KAAA0iG,eACA1iG,KAAA2iG,SAEA3iG,KAAAV,KAAAo7F,GAAAkI,eAEA5iG,KAAA4M,OAAAq1F,GAAAK,KAoBA,MAfAG,GAAA/jG,UAAAmkG,kBAAA,SAAAzQ,GACA,GAAApyF,KAAAoC,KAAAy1D,UAIA,UAAA73D,KAAA0iG,aAAA/vF,MAGA,MAFAspC,GAAAkX,OAAAnzD,KAAA0iG,aAAA9rF,SAAAihD,UAAA,4DAEA73D,IAGA,IAAAs3F,GAAAt3F,KAAA0iG,aAAAI,QAAA,GAAA7Y,IAAAmI,GACA,WAAAqQ,GAAAxY,GAAAvV,MAAA4iB,EAAAt3F,KAAA2iG,QATA,MADA1mD,GAAAkX,OAAAnzD,KAAAoC,KAAAmoF,aAAA6H,EAAA,iDACA,GAAAqQ,GAAAziG,KAAAoC,KAAAqoF,WAAAzqF,KAAA0iG,aAAA1iG,KAAA2iG,SAYAF,KAyBAM,GAAA,WAIA,MAHAhB,MACAA,GAAA,GAAAxN,IAAAnM,IAEA2Z,IAKAiB,GAAA,WAMA,QAAAA,GAAArwF,EAAAiE,OACA,KAAAA,IAAkCA,EAAAmsF,MAClC/iG,KAAA2S,QACA3S,KAAA4W,WAkTA,MA3SAosF,GAAAC,WAAA,SAAAvhG,GACA,GAAAupB,GAAA+3E,EAAAtuB,KAIA,OAHAz4B,GAAAp6C,QAAAH,EAAA,SAAAi6F,EAAAuH,GACAj4E,IAAA/lB,IAAA,GAAA+kF,IAAA0R,GAAAuH,KAEAj4E,GAMA+3E,EAAAtkG,UAAAm5D,QAAA,WACA,cAAA73D,KAAA2S,OAAA3S,KAAA4W,SAAAihD,WAcAmrC,EAAAtkG,UAAAykG,iCAAA,SAAApY,EAAAqY,GACA,SAAApjG,KAAA2S,OAAAywF,EAAApjG,KAAA2S,OACA,OAAoBvQ,KAAA6nF,GAAAvV,MAAA/hE,MAAA3S,KAAA2S,MAGpB,IAAAo4E,EAAAlzB,UACA,WAGA,IAAA46B,GAAA1H,EAAAR,WACAzkF,EAAA9F,KAAA4W,SAAAvY,IAAAo0F,EACA,WAAA3sF,EAAA,CACA,GAAAu9F,GAAAv9F,EAAAq9F,iCAAApY,EAAAN,WAAA2Y,EACA,UAAAC,EAAA,CAEA,OAAgCjhG,KADhC,GAAA6nF,IAAAwI,GAAA3sF,MAAAu9F,EAAAjhG,MACgCuQ,MAAA0wF,EAAA1wF,OAGhC,YAIA,aAWAqwF,EAAAtkG,UAAA4kG,yBAAA,SAAAvY,GACA,MAAA/qF,MAAAmjG,iCAAApY,EAAA,WAAgF,YAMhFiY,EAAAtkG,UAAAokG,QAAA,SAAA/X,GACA,GAAAA,EAAAlzB,UACA,MAAA73D,KAGA,IAAAyyF,GAAA1H,EAAAR,WACA+M,EAAAt3F,KAAA4W,SAAAvY,IAAAo0F,EACA,eAAA6E,EACAA,EAAAwL,QAAA/X,EAAAN,YAGAuY,EAAAtuB,OAWAsuB,EAAAtkG,UAAAwG,IAAA,SAAA6lF,EAAAwY,GACA,GAAAxY,EAAAlzB,UACA,UAAAmrC,GAAAO,EAAAvjG,KAAA4W,SAGA,IAAA67E,GAAA1H,EAAAR,WACAzkF,EAAA9F,KAAA4W,SAAAvY,IAAAo0F,IAAAuQ,EAAAtuB,MACA8uB,EAAA19F,EAAAZ,IAAA6lF,EAAAN,WAAA8Y,GACA3K,EAAA54F,KAAA4W,SAAAyjC,OAAAo4C,EAAA+Q,EACA,WAAAR,GAAAhjG,KAAA2S,MAAAimF,IASAoK,EAAAtkG,UAAA6P,OAAA,SAAAw8E,GACA,GAAAA,EAAAlzB,UACA,MAAA73D,MAAA4W,SAAAihD,UACAmrC,EAAAtuB,MAGA,GAAAsuB,GAAA,KAAAhjG,KAAA4W,SAIA,IAAA67E,GAAA1H,EAAAR,WACAzkF,EAAA9F,KAAA4W,SAAAvY,IAAAo0F,EACA,IAAA3sF,EAAA,CACA,GAAA09F,GAAA19F,EAAAyI,OAAAw8E,EAAAN,YACAmO,MAAA,EAOA,OALAA,GADA4K,EAAA3rC,UACA73D,KAAA4W,SAAArI,OAAAkkF,GAGAzyF,KAAA4W,SAAAyjC,OAAAo4C,EAAA+Q,GAEA,OAAAxjG,KAAA2S,OAAAimF,EAAA/gC,UACAmrC,EAAAtuB,MAGA,GAAAsuB,GAAAhjG,KAAA2S,MAAAimF,GAIA,MAAA54F,OAUAgjG,EAAAtkG,UAAAL,IAAA,SAAA0sF,GACA,GAAAA,EAAAlzB,UACA,MAAA73D,MAAA2S,KAGA,IAAA8/E,GAAA1H,EAAAR,WACAzkF,EAAA9F,KAAA4W,SAAAvY,IAAAo0F,EACA,OAAA3sF,GACAA,EAAAzH,IAAA0sF,EAAAN,YAGA,MAWAuY,EAAAtkG,UAAA+kG,QAAA,SAAA1Y,EAAA2Y,GACA,GAAA3Y,EAAAlzB,UACA,MAAA6rC,EAGA,IAAAjR,GAAA1H,EAAAR,WACAzkF,EAAA9F,KAAA4W,SAAAvY,IAAAo0F,IAAAuQ,EAAAtuB,MACA8uB,EAAA19F,EAAA29F,QAAA1Y,EAAAN,WAAAiZ,GACA9K,MAAA,EAOA,OALAA,GADA4K,EAAA3rC,UACA73D,KAAA4W,SAAArI,OAAAkkF,GAGAzyF,KAAA4W,SAAAyjC,OAAAo4C,EAAA+Q,GAEA,GAAAR,GAAAhjG,KAAA2S,MAAAimF,IAWAoK,EAAAtkG,UAAAilG,KAAA,SAAAhiG,GACA,MAAA3B,MAAA4jG,MAAA3Z,GAAAvV,MAAA/yE,IAUAqhG,EAAAtkG,UAAAklG,MAAA,SAAAC,EAAAliG,GACA,GAAAmiG,KAIA,OAHA9jG,MAAA4W,SAAA69E,iBAAA,SAAAsM,EAAAzJ,GACAwM,EAAA/C,GAAAzJ,EAAAsM,MAAAC,EAAA/9F,MAAAi7F,GAAAp/F,KAEAA,EAAAkiG,EAAA7jG,KAAA2S,MAAAmxF,IASAd,EAAAtkG,UAAAqlG,WAAA,SAAA3hG,EAAA41D,GACA,MAAAh4D,MAAAgkG,YAAA5hG,EAAA6nF,GAAAvV,MAAA1c,IAEAgrC,EAAAtkG,UAAAslG,YAAA,SAAAC,EAAAJ,EAAA7rC,GACA,GAAApvC,KAAA5oB,KAAA2S,OAAAqlD,EAAA6rC,EAAA7jG,KAAA2S,MACA,IAAAiW,EACA,MAAAA,EAGA,IAAAq7E,EAAApsC,UACA,WAGA,IAAA46B,GAAAwR,EAAA1Z,WACA2Z,EAAAlkG,KAAA4W,SAAAvY,IAAAo0F,EACA,OAAAyR,GACAA,EAAAF,YAAAC,EAAAxZ,WAAAoZ,EAAA/9F,MAAA2sF,GAAAz6B,GAGA,MAWAgrC,EAAAtkG,UAAAylG,cAAA,SAAA/hG,EAAA41D,GACA,MAAAh4D,MAAAokG,eAAAhiG,EAAA6nF,GAAAvV,MAAA1c,IAEAgrC,EAAAtkG,UAAA0lG,eAAA,SAAAH,EAAAI,EAAArsC,GACA,GAAAisC,EAAApsC,UACA,MAAA73D,KAGAA,MAAA2S,OACAqlD,EAAAqsC,EAAArkG,KAAA2S,MAEA,IAAA8/E,GAAAwR,EAAA1Z,WACA2Z,EAAAlkG,KAAA4W,SAAAvY,IAAAo0F,EACA,OAAAyR,GACAA,EAAAE,eAAAH,EAAAxZ,WAAA4Z,EAAAv+F,MAAA2sF,GAAAz6B,GAGAgrC,EAAAtuB,OAWAsuB,EAAAtkG,UAAA4lG,QAAA,SAAAtsC,GACAh4D,KAAAukG,SAAAta,GAAAvV,MAAA1c,IAEAgrC,EAAAtkG,UAAA6lG,SAAA,SAAAF,EAAArsC,GACAh4D,KAAA4W,SAAA69E,iBAAA,SAAArC,EAAAkF,GACAA,EAAAiN,SAAAF,EAAAv+F,MAAAssF,GAAAp6B,KAEAh4D,KAAA2S,OACAqlD,EAAAqsC,EAAArkG,KAAA2S,QAOAqwF,EAAAtkG,UAAA8lG,aAAA,SAAAxsC,GACAh4D,KAAA4W,SAAA69E,iBAAA,SAAArC,EAAAkF,GACAA,EAAA3kF,OACAqlD,EAAAo6B,EAAAkF,EAAA3kF,UAIAqwF,EAAAtuB,MAAA,GAAAsuB,GAAA,MACAA,KAwBAyB,GAAA,WACA,QAAAA,GAAA73F,EAAAxK,GACApC,KAAA4M,SACA5M,KAAAoC,OAEApC,KAAAV,KAAAo7F,GAAAgK,gBAUA,MARAD,GAAA/lG,UAAAmkG,kBAAA,SAAAzQ,GACA,MAAApyF,MAAAoC,KAAAy1D,UACA,GAAA4sC,GAAAzkG,KAAA4M,OAAAq9E,GAAAvV,OAGA,GAAA+vB,GAAAzkG,KAAA4M,OAAA5M,KAAAoC,KAAAqoF,aAGAga,KAyBAE,GAAA,WACA,QAAAA,GAAA/3F,EAAAxK,EAAA64F,GACAj7F,KAAA4M,SACA5M,KAAAoC,OACApC,KAAAi7F,OAEAj7F,KAAAV,KAAAo7F,GAAAkK,UAUA,MARAD,GAAAjmG,UAAAmkG,kBAAA,SAAAzQ,GACA,MAAApyF,MAAAoC,KAAAy1D,UACA,GAAA8sC,GAAA3kG,KAAA4M,OAAAq9E,GAAAvV,MAAA10E,KAAAi7F,KAAA9I,kBAAAC,IAGA,GAAAuS,GAAA3kG,KAAA4M,OAAA5M,KAAAoC,KAAAqoF,WAAAzqF,KAAAi7F,OAGA0J,KAyBAE,GAAA,WACA,QAAAA,GACAj4F,EACAxK,EACAwU,GACA5W,KAAA4M,SACA5M,KAAAoC,OACApC,KAAA4W,WAEA5W,KAAAV,KAAAo7F,GAAAoK,MAsCA,MAjCAD,GAAAnmG,UAAAmkG,kBAAA,SAAAzQ,GACA,GAAApyF,KAAAoC,KAAAy1D,UAAA,CACA,GAAAy/B,GAAAt3F,KAAA4W,SAAAksF,QAAA,GAAA7Y,IAAAmI,GACA,OAAAkF,GAAAz/B,UAEA,KAEAy/B,EAAA3kF,MAEA,GAAAgyF,IAAA3kG,KAAA4M,OAAAq9E,GAAAvV,MAAA4iB,EAAA3kF,OAIA,GAAAkyF,GAAA7kG,KAAA4M,OAAAq9E,GAAAvV,MAAA4iB,GAKA,MADAr7C,GAAAkX,OAAAnzD,KAAAoC,KAAAmoF,aAAA6H,EAAA,kEACA,GAAAyS,GAAA7kG,KAAA4M,OAAA5M,KAAAoC,KAAAqoF,WAAAzqF,KAAA4W,WAMAiuF,EAAAnmG,UAAA2O,SAAA,WACA,mBACArN,KAAAoC,KACA,KACApC,KAAA4M,OAAAS,WACA,WACArN,KAAA4W,SAAAvJ,WACA,KAEAw3F,KAwBAE,GAAA,WAMA,QAAAA,GAAA1J,EAAA2J,EAAAC,GACAjlG,KAAAq7F,QACAr7F,KAAAglG,oBACAhlG,KAAAilG,YAwCA,MAlCAF,GAAArmG,UAAAwmG,mBAAA,WACA,MAAAllG,MAAAglG,mBAMAD,EAAArmG,UAAAymG,WAAA,WACA,MAAAnlG,MAAAilG,WAMAF,EAAArmG,UAAA0mG,kBAAA,SAAAhjG,GACA,GAAAA,EAAAy1D,UACA,MAAA73D,MAAAklG,uBAAAllG,KAAAilG,SAEA,IAAAlE,GAAA3+F,EAAAmoF,UACA,OAAAvqF,MAAAqlG,mBAAAtE,IAMAgE,EAAArmG,UAAA2mG,mBAAA,SAAAvjG,GACA,MAAA9B,MAAAklG,uBAAAllG,KAAAilG,WAAAjlG,KAAAq7F,MAAAhJ,SAAAvwF,IAKAijG,EAAArmG,UAAA4mG,QAAA,WACA,MAAAtlG,MAAAq7F,OAEA0J,KAyBAQ,GAAA,WAMA,QAAAA,GAAAC,EAAAC,GACAzlG,KAAAwlG,cACAxlG,KAAAylG,eAyDA,MAjDAF,GAAA7mG,UAAAgnG,gBAAA,SAAAC,EAAAn0F,EAAAo0F,GACA,UAAAL,GAAA,GAAAR,IAAAY,EAAAn0F,EAAAo0F,GAAA5lG,KAAAylG,eAQAF,EAAA7mG,UAAAmnG,iBAAA,SAAAC,EAAAt0F,EAAAo0F,GACA,UAAAL,GAAAvlG,KAAAwlG,YAAA,GAAAT,IAAAe,EAAAt0F,EAAAo0F,KAKAL,EAAA7mG,UAAAqnG,cAAA,WACA,MAAA/lG,MAAAwlG,aAKAD,EAAA7mG,UAAAsnG,qBAAA,WACA,MAAAhmG,MAAAwlG,YAAAN,qBACAllG,KAAAwlG,YAAAF,UACA,MAKAC,EAAA7mG,UAAAunG,eAAA,WACA,MAAAjmG,MAAAylG,cAKAF,EAAA7mG,UAAAwnG,sBAAA,WACA,MAAAlmG,MAAAylG,aAAAP,qBACAllG,KAAAylG,aAAAH,UACA,MAMAC,EAAA7wB,MAAA,GAAA6wB,GAAA,GAAAR,IAAAniB,GAAAC,YACA,GACA,MAAAkiB,IAAAniB,GAAAC,YACA,GACA,IACA0iB,KA2BAY,GAAA,WACA,QAAAA,GAAA7mG,EAAAw9F,EAAA1K,EAAAgU,EAAAnK,GACAj8F,KAAAV,OACAU,KAAA88F,eACA98F,KAAAoyF,YACApyF,KAAAomG,UACApmG,KAAAi8F,WAqDA,MA/CAkK,GAAAE,YAAA,SAAA98B,GACA,UAAA48B,KAAAG,MAAA/8B,IAOA48B,EAAAI,iBAAA,SAAAxF,EAAAx3B,GACA,UAAA48B,KAAAK,YAAAj9B,EAAAw3B,IAOAoF,EAAAM,mBAAA,SAAA1F,EAAAx3B,GACA,UAAA48B,KAAAO,cAAAn9B,EAAAw3B,IAQAoF,EAAAQ,mBAAA,SAAA5F,EAAA6F,EAAAC,GACA,UAAAV,KAAAW,cAAAF,EAAA7F,EAAA8F,IAOAV,EAAAY,iBAAA,SAAAhG,EAAAx3B,GACA,UAAA48B,KAAAa,YAAAz9B,EAAAw3B,IAIAoF,EAAAK,YAAA,cAEAL,EAAAO,cAAA,gBAEAP,EAAAW,cAAA,gBAEAX,EAAAa,YAAA,cAEAb,EAAAG,MAAA,QACAH,KAyBAc,GAAA,WACA,QAAAA,GAAA1L,GACAv7F,KAAAu7F,SAkGA,MAhGA0L,GAAAvoG,UAAA8zF,YAAA,SAAAyI,EAAAn5F,EAAA0hG,EAAA0D,EAAAt6F,EAAAu6F,GACAlrD,EAAAkX,OAAA8nC,EAAA1H,UAAAvzF,KAAAu7F,QAAA,oDACA,IAAAt1D,GAAAg1D,EAAA9I,kBAAArwF,EAEA,OAAAmkC,GAAA1jC,SAAA2kG,GAAA1b,OAAAgY,EAAAjhG,SAAA2kG,KAIAjhE,EAAA4xB,WAAA2rC,EAAA3rC,UAIAojC,GAGA,MAAAkM,IACA3D,EAAA3rC,UACAojC,EAAA5I,SAAAvwF,GACAqlG,EAAAC,iBAAAjB,GAAAM,mBAAA3kG,EAAAmkC,IAGAgW,EAAAkX,OAAA8nC,EAAA9X,aAAA,uEAGAl9C,EAAA4xB,UACAsvC,EAAAC,iBAAAjB,GAAAI,iBAAAzkG,EAAA0hG,IAGA2D,EAAAC,iBAAAjB,GAAAQ,mBAAA7kG,EAAA0hG,EAAAv9D,KAGAg1D,EAAA9X,cAAAqgB,EAAA3rC,UACAojC,EAIAA,EAAA7X,qBAAAthF,EAAA0hG,GAAAlQ,UAAAtzF,KAAAu7F,UAMA0L,EAAAvoG,UAAA2oG,eAAA,SAAAjB,EAAAkB,EAAAH,GAuBA,MAtBA,OAAAA,IACAf,EAAAjjB,cACAijB,EAAAvgG,aAAAk+E,GAAA,SAAAjiF,EAAAuwB,GACAi1E,EAAAjV,SAAAvwF,IACAqlG,EAAAC,iBAAAjB,GAAAM,mBAAA3kG,EAAAuwB,MAIAi1E,EAAAnkB,cACAmkB,EAAAzhG,aAAAk+E,GAAA,SAAAjiF,EAAAuwB,GACA,GAAA+zE,EAAA/T,SAAAvwF,GAAA,CACA,GAAAmkC,GAAAmgE,EAAAjU,kBAAArwF,EACAmkC,GAAAulD,OAAAn5D,IACA80E,EAAAC,iBAAAjB,GAAAQ,mBAAA7kG,EAAAuwB,EAAA4T,QAIAkhE,GAAAC,iBAAAjB,GAAAI,iBAAAzkG,EAAAuwB,OAKAi1E,EAAAhU,UAAAtzF,KAAAu7F,SAKA0L,EAAAvoG,UAAA2kF,eAAA,SAAA+iB,EAAAnN,GACA,MAAAmN,GAAAvuC,UACA+qB,GAAAC,WAGAujB,EAAA/iB,eAAA4V,IAMAgO,EAAAvoG,UAAA6oG,aAAA,WACA,UAKAN,EAAAvoG,UAAA8oG,iBAAA,WACA,MAAAxnG,OAKAinG,EAAAvoG,UAAAm+F,SAAA,WACA,MAAA78F,MAAAu7F,QAEA0L,KAqBAQ,GAAA,WACA,QAAAA,KACAznG,KAAA0nG,cAmDA,MA9CAD,GAAA/oG,UAAA0oG,iBAAA,SAAA1qE,GACA,GAAAp9B,GAAAo9B,EAAAp9B,KACAyhG,EAAwCrkE,EAAA01D,SACxCn2C,GAAAkX,OAAA7zD,GAAA6mG,GAAAK,aACAlnG,GAAA6mG,GAAAW,eACAxnG,GAAA6mG,GAAAO,cAAA,6CACAzqD,EAAAkX,OAAA,cAAA4tC,EAAA,kDACA,IAAA4G,GAAA1rD,EAAAwb,QAAAz3D,KAAA0nG,WAAA3G,EACA,IAAA4G,EAAA,CACA,GAAAC,GAAAD,EAAAroG,IACA,IAAAA,GAAA6mG,GAAAK,aAAAoB,GAAAzB,GAAAO,cACA1mG,KAAA0nG,WAAA3G,GAAAoF,GAAAQ,mBAAA5F,EAAArkE,EAAAogE,aAAA6K,EAAA7K,kBAEA,IAAAx9F,GAAA6mG,GAAAO,eACAkB,GAAAzB,GAAAK,kBACAxmG,MAAA0nG,WAAA3G,OAEA,IAAAzhG,GAAA6mG,GAAAO,eACAkB,GAAAzB,GAAAW,cACA9mG,KAAA0nG,WAAA3G,GAAAoF,GAAAM,mBAAA1F,EAAA4G,EAAAvB,aAEA,IAAA9mG,GAAA6mG,GAAAW,eACAc,GAAAzB,GAAAK,YACAxmG,KAAA0nG,WAAA3G,GAAAoF,GAAAI,iBAAAxF,EAAArkE,EAAAogE,kBAEA,IAAAx9F,GAAA6mG,GAAAW,eACAc,GAAAzB,GAAAW,cAIA,KAAA7qD,GAAAqX,eAAA,mCACA52B,EACA,mBACAirE,EANA3nG,MAAA0nG,WAAA3G,GAAAoF,GAAAQ,mBAAA5F,EAAArkE,EAAAogE,aAAA6K,EAAAvB,cAUApmG,MAAA0nG,WAAA3G,GAAArkE,GAMA+qE,EAAA/oG,UAAAmpG,WAAA,WACA,MAAA5rD,GAAAqc,UAAAt4D,KAAA0nG,aAEAD,KAyBAK,GAAA,WACA,QAAAA,MAcA,MATAA,GAAAppG,UAAAqpG,iBAAA,SAAAhH,GACA,aAKA+G,EAAAppG,UAAAspG,mBAAA,SAAA14F,EAAAxJ,EAAAojF,GACA,aAEA4e,KAOAG,GAAA,GAAAH,IAQAI,GAAA,WAMA,QAAAA,GAAAC,EAAAC,EAAAC,OACA,KAAAA,IAAiDA,EAAA,MACjDroG,KAAAmoG,UACAnoG,KAAAooG,aACApoG,KAAAqoG,0BAgCA,MA3BAH,GAAAxpG,UAAAqpG,iBAAA,SAAAhH,GACA,GAAA5gF,GAAAngB,KAAAooG,WAAArC,eACA,IAAA5lF,EAAAklF,mBAAAtE,GACA,MAAA5gF,GAAAmlF,UAAAnT,kBAAA4O,EAGA,IAAAuH,GAAA,MAAAtoG,KAAAqoG,wBACA,GAAAtD,IAAA/kG,KAAAqoG,yBAAA,MACAroG,KAAAooG,WAAAnC,gBACA,OAAAjmG,MAAAmoG,QAAAI,kBAAAxH,EAAAuH,IAMAJ,EAAAxpG,UAAAspG,mBAAA,SAAA14F,EAAAxJ,EAAAojF,GACA,GAAAsf,GAAA,MAAAxoG,KAAAqoG,wBACAroG,KAAAqoG,wBACAroG,KAAAooG,WAAAlC,wBACA58E,EAAAtpB,KAAAmoG,QAAAM,iBAAAD,EAAA1iG,EAAA,EAAAojF,EAAA55E,EACA,YAAAga,EAAA5kB,OACA,KAGA4kB,EAAA,IAGA4+E,KAsBAQ,GAAA,WAKA,QAAAA,GAAAC,EAAAC,GACA5oG,KAAA2oG,YACA3oG,KAAA4oG,UAEA,MAAAF,MAKAG,GAAA,WAIA,QAAAA,GAAAC,GACA9oG,KAAA8oG,UA4hBA,MAvhBAD,GAAAnqG,UAAAqqG,cAAA,SAAAJ,GACA1sD,EAAAkX,OAAAw1C,EACA5C,gBACAT,UACA/R,UAAAvzF,KAAA8oG,QAAAjM,YAAA,0BACA5gD,EAAAkX,OAAAw1C,EACA1C,iBACAX,UACA/R,UAAAvzF,KAAA8oG,QAAAjM,YAAA,4BASAgM,EAAAnqG,UAAAsqG,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GACAC,GAAAC,EADAC,EAAA,GAAA9B,GAEA,IAAAyB,EAAA5pG,OAAAo7F,GAAAkK,UAAA,CACA,GAAA4E,GAAAN,CACAM,GAAA58F,OAAAs1F,SACAmH,EAAArpG,KAAAypG,oBAAAR,EAAAO,EAAApnG,KAAAonG,EAAAvO,KAAAkO,EAAAC,EAAAG,IAGAttD,EAAAkX,OAAAq2C,EAAA58F,OAAAu1F,WAAA,mBAIAmH,EACAE,EAAA58F,OAAAy1F,QACA4G,EAAAhD,iBAAAd,eACAqE,EAAApnG,KAAAy1D,UACAwxC,EAAArpG,KAAA0pG,sBAAAT,EAAAO,EAAApnG,KAAAonG,EAAAvO,KAAAkO,EAAAC,EAAAE,EAAAC,QAGA,IAAAL,EAAA5pG,OAAAo7F,GAAAoK,MAAA,CACA,GAAA6E,GAAAT,CACAS,GAAA/8F,OAAAs1F,SACAmH,EAAArpG,KAAA4pG,gBAAAX,EAAAU,EAAAvnG,KAAAunG,EAAA/yF,SAAAuyF,EAAAC,EAAAG,IAGAttD,EAAAkX,OAAAw2C,EAAA/8F,OAAAu1F,WAAA,mBAEAmH,EACAK,EAAA/8F,OAAAy1F,QAAA4G,EAAAhD,iBAAAd,aACAkE,EAAArpG,KAAA6pG,kBAAAZ,EAAAU,EAAAvnG,KAAAunG,EAAA/yF,SAAAuyF,EAAAC,EAAAE,EAAAC,QAGA,IAAAL,EAAA5pG,OAAAo7F,GAAAkI,eAAA,CACA,GAAAkH,GAAAZ,CAKAG,GAJAS,EAAAnH,OAIA3iG,KAAA+pG,iBAAAd,EAAAa,EAAA1nG,KAAA+mG,EAAAC,EAAAG,GAHAvpG,KAAAgqG,cAAAf,EAAAa,EAAA1nG,KAAA0nG,EAAApH,aAAAyG,EAAAC,EAAAG,OAMA,IAAAL,EAAA5pG,OAAAo7F,GAAAgK,gBAIA,KAAAzoD,GAAAqX,eAAA,2BAAA41C,EAAA5pG,KAHA+pG,GAAArpG,KAAAiqG,gBAAAhB,EAAAC,EAAA9mG,KAAA+mG,EAAAI,GAKA,GAAAX,GAAAW,EAAA1B,YAEA,OADAgB,GAAAqB,oBAAAjB,EAAAI,EAAAT,GACA,GAAAF,IAAAW,EAAAT,IAQAC,EAAAqB,oBAAA,SAAAjB,EAAAI,EAAAE,GACA,GAAA5D,GAAA0D,EAAAtD,eACA,IAAAJ,EAAAT,qBAAA,CACA,GAAAiF,GAAAxE,EAAAL,UAAAniB,cAAAwiB,EAAAL,UAAAztC,UACAuyC,EAAAnB,EAAAjD,wBACAuD,EAAA7kG,OAAA,IACAukG,EAAAlD,gBAAAb,sBACAiF,IACAxE,EACAL,UACA9Z,OAAiD,KACjDma,EACAL,UACA7hB,cACA+H,OAAA4e,EAAA3mB,iBACA8lB,EAAA5mG,KAAAwjG,GAAAE,YACiCgD,EAAArD,2BAajC6C,EAAAnqG,UAAA2rG,oCAAA,SAAA1B,EAAA2B,EAAAnB,EAAAv8F,EAAA28F,GACA,GAAAgB,GAAA5B,EAAA5C,eACA,UAAAoD,EAAAqB,eAAAF,GAEA,MAAA3B,EAGA,IAAA8B,OAAA,GAAAnC,MAAA,EACA,IAAAgC,EAAAzyC,UAGA,GADA5b,EAAAkX,OAAAw1C,EAAA1C,iBAAAf,qBAAA,8DACAyD,EAAA1C,iBAAAd,aAAA,CAIA,GAAAuF,GAAA/B,EAAAzC,wBACAyE,EAAAD,YAAA9nB,IACA8nB,EACA9nB,GAAAC,WACA+nB,EAAAzB,EAAA0B,0BAAAF,EACAF,GAAAzqG,KAAA8oG,QAAAzB,eAAAsB,EAAA5C,gBAAAT,UAAAsF,EAAArB,OAEA,CACA,GAAAuB,GAAA3B,EAAA4B,uBAAApC,EAAAzC,wBACAuE,GAAAzqG,KAAA8oG,QAAAzB,eAAAsB,EAAA5C,gBAAAT,UAAAwF,EAAAvB,OAGA,CACA,GAAAxI,GAAAuJ,EAAA/f,UACA,iBAAAwW,EAAA,CACA9kD,EAAAkX,OAAA,GAAAm3C,EAAA9f,YAAA,wDACA,IAAAwgB,GAAAT,EAAAjF,SACAgD,GAAAK,EAAA1C,iBAAAX,SAEA,IAAA2F,GAAA9B,EAAA+B,mCAAAZ,EAAAU,EAAA1C,EAEAmC,GADA,MAAAQ,EACAjrG,KAAA8oG,QAAAzlB,eAAA2nB,EAAAC,GAIAV,EAAAjF,cAGA,CACA,GAAA6F,GAAAb,EAAA7f,WAEA2gB,MAAA,EACA,IAAAb,EAAAlF,mBAAAtE,GAAA,CACAuH,EAAAK,EAAA1C,iBAAAX,SACA,IAAA+F,GAAAlC,EAAA+B,mCAAAZ,EAAAC,EAAAjF,UAAAgD,EAEA8C,GADA,MAAAC,EACAd,EACAjF,UACAnT,kBAAA4O,GACAvO,YAAA2Y,EAAAE,GAIAd,EACAjF,UACAnT,kBAAA4O,OAIAqK,GAAAjC,EAAAZ,kBAAAxH,EAAA4H,EAAA1C,iBAGAwE,GADA,MAAAW,EACAprG,KAAA8oG,QAAAtW,YAAA+X,EAAAjF,UAAAvE,EAAAqK,EAAAD,EAAAv+F,EAAA28F,GAIAgB,EAAAjF,WAIA,MAAAqD,GAAAjD,gBAAA+E,EAAAF,EAAArF,sBAAAoF,EAAAzyC,UAAA73D,KAAA8oG,QAAAvB,iBAcAsB,EAAAnqG,UAAAgrG,sBAAA,SAAAT,EAAAqB,EAAAgB,EAAAnC,EAAAC,EAAAE,EAAAC,GACA,GACAgC,GADAC,EAAAvC,EAAAhD,iBAEAwF,EAAAnC,EACAtpG,KAAA8oG,QACA9oG,KAAA8oG,QAAAtB,kBACA,IAAA8C,EAAAzyC,UACA0zC,EAAAE,EAAApE,eAAAmE,EAAAlG,UAAAgG,EAAA,UAEA,IAAAG,EAAAlE,iBAAAiE,EAAArG,aAAA,CAEA,GAAAuG,GAAAF,EACAlG,UACA9S,YAAA8X,EAAAgB,EACAC,GAAAE,EAAApE,eAAAmE,EAAAlG,UAAAoG,EAAA,UAEA,CACA,GAAA3K,GAAAuJ,EAAA/f,UACA,KAAAihB,EAAApG,kBAAAkF,IACAA,EAAA9f,YAAA,EAEA,MAAAye,EAEA,IAAAkC,GAAAb,EAAA7f,WACAp4D,EAAAm5E,EAAAlG,UAAAnT,kBAAA4O,GACAxO,EAAAlgE,EAAAmgE,YAAA2Y,EAAAG,EAEAC,GADA,aAAAxK,EACA0K,EAAApoB,eAAAmoB,EAAAlG,UAAA/S,GAGAkZ,EAAAjZ,YAAAgZ,EAAAlG,UAAAvE,EAAAxO,EAAA4Y,EAAAlD,GAAA,MAGA,GAAAoB,GAAAJ,EAAApD,iBAAA0F,EAAAC,EAAAtG,sBAAAoF,EAAAzyC,UAAA4zC,EAAAlE,gBACA36F,EAAA,GAAAs7F,IAAAiB,EAAAE,EAAAD,EACA,OAAAppG,MAAAqqG,oCAAAhB,EAAAiB,EAAAnB,EAAAv8F,EAAA28F,IAYAV,EAAAnqG,UAAA+qG,oBAAA,SAAAR,EAAAqB,EAAAgB,EAAAnC,EAAAC,EAAAG,GACA,GACAF,GAAAoB,EADAF,EAAAtB,EAAAlD,gBAEAn5F,EAAA,GAAAs7F,IAAAiB,EAAAF,EAAAG,EACA,IAAAkB,EAAAzyC,UACA4yC,EAAAzqG,KAAA8oG,QAAAzB,eAAA4B,EAAAlD,gBAAAT,UAAAgG,EAAA/B,GACAF,EAAAJ,EAAAvD,gBAAA+E,GAAA,EAAAzqG,KAAA8oG,QAAAvB,oBAEA,CACA,GAAAxG,GAAAuJ,EAAA/f,UACA,kBAAAwW,EACA0J,EAAAzqG,KAAA8oG,QAAAzlB,eAAA4lB,EAAAlD,gBAAAT,UAAAgG,GACAjC,EAAAJ,EAAAvD,gBAAA+E,EAAAF,EAAArF,qBAAAqF,EAAApF,kBAEA,CACA,GAAAgG,GAAAb,EAAA7f,WACAxkD,EAAAskE,EAAAjF,UAAAnT,kBAAA4O,GACAyC,MAAA,EACA,IAAA2H,EAAAtzC,UAEA2rC,EAAA8H,MAEA,CACA,GAAAj5E,GAAAzlB,EAAAm7F,iBAAAhH,EAMAyC,GALA,MAAAnxE,EACA,cAAA84E,EAAAzgB,WACAr4D,EAAA9vB,SAAA4oG,EAAAhrG,UAAA03D,UAGAxlC,EAGAA,EAAAmgE,YAAA2Y,EAAAG,GAKA1oB,GAAAC,WAGA,GAAA58C,EAAAulD,OAAAgY,GAKA6F,EAAAJ,MALA,CACA,GAAA0C,GAAA3rG,KAAA8oG,QAAAtW,YAAA+X,EAAAjF,UAAAvE,EAAAyC,EAAA2H,EAAAv+F,EAAA28F,EACAF,GAAAJ,EAAAvD,gBAAAiG,EAAApB,EAAArF,qBAAAllG,KAAA8oG,QAAAvB,kBAOA,MAAA8B,IAQAR,EAAA+C,eAAA,SAAAjD,EAAA5H,GACA,MAAA4H,GAAA5C,gBAAAV,mBAAAtE,IAYA8H,EAAAnqG,UAAAkrG,gBAAA,SAAAjB,EAAAvmG,EAAAypG,EAAA1C,EAAAuB,EAAAnB,GACA,GAAA//C,GAAAxpD,KAOA8rG,EAAAnD,CAaA,OAZAkD,GAAAvH,QAAA,SAAAvZ,EAAA14D,GACA,GAAA05E,GAAA3pG,EAAA0D,MAAAilF,EACA8d,GAAA+C,eAAAjD,EAAAoD,EAAAxhB,cACAuhB,EAAAtiD,EAAAigD,oBAAAqC,EAAAC,EAAA15E,EAAA82E,EAAAuB,EAAAnB,MAGAsC,EAAAvH,QAAA,SAAAvZ,EAAA14D,GACA,GAAA05E,GAAA3pG,EAAA0D,MAAAilF,EACA8d,GAAA+C,eAAAjD,EAAAoD,EAAAxhB,cACAuhB,EAAAtiD,EAAAigD,oBAAAqC,EAAAC,EAAA15E,EAAA82E,EAAAuB,EAAAnB,MAGAuC,GAQAjD,EAAAnqG,UAAAstG,YAAA,SAAA7rF,EAAAwpF,GAIA,MAHAA,GAAArF,QAAA,SAAAvZ,EAAA14D,GACAlS,IAAAqyE,YAAAzH,EAAA14D,KAEAlS,GAaA0oF,EAAAnqG,UAAAmrG,kBAAA,SAAAlB,EAAAvmG,EAAAypG,EAAA1C,EAAAuB,EAAApB,EAAAC,GACA,GAAA//C,GAAAxpD,IAGA,IAAA2oG,EACA1C,iBACAX,UACAztC,YACA8wC,EAAA1C,iBAAAf,qBACA,MAAAyD,EAQA,IACAsD,GADAH,EAAAnD,CAGAsD,GADA7pG,EAAAy1D,UACAg0C,EAGA7I,GAAAtuB,MAAA+uB,QAAArhG,EAAAypG,EAEA,IAAAvD,GAAAK,EAAA1C,iBAAAX,SAuBA,OAtBA2G,GAAAr1F,SAAA69E,iBAAA,SAAAsM,EAAAzJ,GACA,GAAAgR,EAAAjW,SAAA0O,GAAA,CACA,GAAAmL,GAAAvD,EACA1C,iBACAX,UACAnT,kBAAA4O,GACAyC,EAAAh6C,EAAAwiD,YAAAE,EAAA5U,EACAwU,GAAAtiD,EAAAkgD,sBAAAoC,EAAA,GAAA7hB,IAAA8W,GAAAyC,EAAA2F,EAAAuB,EAAApB,EAAAC,MAGA0C,EAAAr1F,SAAA69E,iBAAA,SAAAsM,EAAAoL,GACA,GAAAC,IAAAzD,EAAA1C,iBAAAZ,mBAAAtE,IACA,MAAAoL,EAAAx5F,KACA,KAAA21F,EAAAjW,SAAA0O,KAAAqL,EAAA,CACA,GAAAF,GAAAvD,EACA1C,iBACAX,UACAnT,kBAAA4O,GACAyC,EAAAh6C,EAAAwiD,YAAAE,EAAAC,EACAL,GAAAtiD,EAAAkgD,sBAAAoC,EAAA,GAAA7hB,IAAA8W,GAAAyC,EAAA2F,EAAAuB,EAAApB,EAAAC,MAGAuC,GAYAjD,EAAAnqG,UAAAsrG,cAAA,SAAArB,EAAA0D,EAAA3J,EAAAyG,EAAAC,EAAAG,GACA,SAAAJ,EAAAqB,eAAA6B,GACA,MAAA1D,EAGA,IAAAW,GAAAX,EAAA1C,iBAAAd,aAGAuF,EAAA/B,EAAA1C,gBACA,UAAAvD,EAAA/vF,MAAA,CAEA,GAAA05F,EAAAx0C,WAAA6yC,EAAAxF,sBACAwF,EAAAtF,kBAAAiH,GACA,MAAArsG,MAAA0pG,sBAAAf,EAAA0D,EAAA3B,EAAApF,UAAA/iG,SAAA8pG,GAAAlD,EAAAC,EAAAE,EAAAC,EAEA,IAAA8C,EAAAx0C,UAAA,CAGA,GAAAy0C,GAAAtJ,GAAAtuB,KAIA,OAHAg2B,GAAApF,UAAAz/F,aAAA8rF,GAAA,SAAA7zF,EAAAqiB,GACAmsF,IAAApnG,IAAA,GAAA+kF,IAAAnsF,GAAAqiB,KAEAngB,KAAA6pG,kBAAAlB,EAAA0D,EAAAC,EAAAnD,EAAAC,EAAAE,EAAAC,GAGA,MAAAZ,GAKA,GAAA4D,GAAAvJ,GAAAtuB,KAOA,OANAguB,GAAA4B,QAAA,SAAAkI,EAAA75F,GACA,GAAA85F,GAAAJ,EAAAvmG,MAAA0mG,EACA9B,GAAAtF,kBAAAqH,KACAF,IAAArnG,IAAAsnG,EAAA9B,EAAApF,UAAA/iG,SAAAkqG,OAGAzsG,KAAA6pG,kBAAAlB,EAAA0D,EAAAE,EAAApD,EAAAC,EAAAE,EAAAC,IAWAV,EAAAnqG,UAAAurG,gBAAA,SAAAtB,EAAAvmG,EAAA+mG,EAAAI,GACA,GAAAmD,GAAA/D,EAAA1C,iBACAoD,EAAAV,EAAA9C,iBAAA6G,EAAApH,UAAAoH,EAAAxH,sBAAA9iG,EAAAy1D,UAAA60C,EAAAvH,aACA,OAAAnlG,MAAAqqG,oCAAAhB,EAAAjnG,EAAA+mG,EAAAlB,GAAAsB,IAWAV,EAAAnqG,UAAAqrG,iBAAA,SAAApB,EAAAvmG,EAAA+mG,EAAAwD,EAAApD,GACA,GAAA/3F,EACA,UAAA23F,EAAAqB,eAAApoG,GACA,MAAAumG,EAGA,IAAA/7F,GAAA,GAAAs7F,IAAAiB,EAAAR,EAAAgE,GACAC,EAAAjE,EAAA5C,gBAAAT,UACAmF,MAAA,EACA,IAAAroG,EAAAy1D,WAAA,cAAAz1D,EAAAmoF,WAAA,CACA,GAAA52D,OAAA,EACA,IAAAg1E,EAAA1C,iBAAAf,qBACAvxE,EAAAw1E,EAAA4B,uBAAApC,EAAAzC,6BAEA,CACA,GAAA2G,GAAAlE,EAAA1C,iBAAAX,SACArpD,GAAAkX,OAAA05C,YAAAjqB,IAAA,iDACAjvD,EAAAw1E,EAAA0B,0BAAAgC,GAEAl5E,IACA82E,EAAAzqG,KAAA8oG,QAAAzB,eAAAuF,EAAAj5E,EAAA41E,OAEA,CACA,GAAAxI,GAAA3+F,EAAAmoF,WACAiZ,EAAA2F,EAAAZ,kBAAAxH,EAAA4H,EAAA1C,iBACA,OAAAzC,GACAmF,EAAA1C,iBAAAZ,mBAAAtE,KACAyC,EAAAoJ,EAAAza,kBAAA4O,IAGA0J,EADA,MAAAjH,EACAxjG,KAAA8oG,QAAAtW,YAAAoa,EAAA7L,EAAAyC,EAAAphG,EAAAqoF,WAAA79E,EAAA28F,GAEAZ,EACA5C,gBACAT,UACAjT,SAAA0O,GAEA/gG,KAAA8oG,QAAAtW,YAAAoa,EAAA7L,EAAAne,GAAAC,WAAAzgF,EAAAqoF,WAAA79E,EAAA28F,GAGAqD,EAEAnC,EAAA5yC,WACA8wC,EAAA1C,iBAAAf,uBAEA1zF,EAAA23F,EAAA4B,uBAAApC,EAAAzC,yBACA10F,EAAA2xE,eACAsnB,EAAAzqG,KAAA8oG,QAAAzB,eAAAoD,EAAAj5F,EAAA+3F,KAOA,MAHA/3F,GACAm3F,EAAA1C,iBAAAf,sBACA,MAAAiE,EAAAqB,eAAAvgB,GAAAvV,OACAi0B,EAAAjD,gBAAA+E,EAAAj5F,EAAAxR,KAAA8oG,QAAAvB,iBAGAsB,KAyBAiE,GAAA,WAKA,QAAAA,GAAAC,GACA/sG,KAAA+sG,SAKA/sG,KAAAu7F,OAAAv7F,KAAA+sG,OAAAnQ,iBAAAC,WAuFA,MAvEAiQ,GAAApuG,UAAAsuG,yBAAA,SAAApE,EAAAqE,EAAAC,GACA,GAAA1jD,GAAAxpD,KACA85B,KACAqzE,IAYA,OAXAvE,GAAA/mG,QAAA,SAAA66B,GACAA,EAAAp9B,OAAA6mG,GAAAW,eACAt9C,EAAA+xC,OAAAvK,oBAAAt0D,EAAA0pE,QAAA1pE,EAAAogE,eACAqQ,EAAAxqG,KAAAwjG,GAAAY,iBAAArqE,EAAA01D,UAAA11D,EAAAogE,iBAGA98F,KAAAotG,uBAAAtzE,EAAAqsE,GAAAO,cAAAkC,EAAAsE,EAAAD,GACAjtG,KAAAotG,uBAAAtzE,EAAAqsE,GAAAK,YAAAoC,EAAAsE,EAAAD,GACAjtG,KAAAotG,uBAAAtzE,EAAAqsE,GAAAa,YAAAmG,EAAAD,EAAAD,GACAjtG,KAAAotG,uBAAAtzE,EAAAqsE,GAAAW,cAAA8B,EAAAsE,EAAAD,GACAjtG,KAAAotG,uBAAAtzE,EAAAqsE,GAAAG,MAAAsC,EAAAsE,EAAAD,GACAnzE,GAYAgzE,EAAApuG,UAAA0uG,uBAAA,SAAAtzE,EAAAm1D,EAAA2Z,EAAAyE,EAAAJ,GACA,GAAAzjD,GAAAxpD,KACAstG,EAAA1E,EAAA53F,OAAA,SAAA0rB,GAAgE,MAAAA,GAAAp9B,OAAA2vF,GAChEqe,GAAAjnF,KAAArmB,KAAAutG,gBAAAthG,KAAAjM,OACAstG,EAAAzrG,QAAA,SAAA66B,GACA,GAAA8wE,GAAAhkD,EAAAikD,yBAAA/wE,EAAAuwE,EACAI,GAAAxrG,QAAA,SAAA6rG,GACAA,EAAA/Q,WAAAjgE,EAAAp9B,OACAw6B,EAAAn3B,KAAA+qG,EAAAroE,YAAAmoE,EAAAhkD,EAAAujD,cAWAD,EAAApuG,UAAA+uG,yBAAA,SAAA/wE,EAAAuwE,GACA,gBAAAvwE,EAAAp9B,MAAA,kBAAAo9B,EAAAp9B,KACAo9B,GAGAA,EAAAu/D,SAAAgR,EAAA3a,wBAEA51D,EAAA01D,UAAA11D,EAAAogE,aAAA98F,KAAAu7F,QACA7+D,IASAowE,EAAApuG,UAAA6uG,gBAAA,SAAAv5F,EAAAU,GACA,SAAAV,EAAAo+E,WAAA,MAAA19E,EAAA09E,UACA,KAAAn2C,GAAAqX,eAAA,qCAEA,IAAAq6C,GAAA,GAAAjqB,IAAA1vE,EAAAo+E,UAAAp+E,EAAA8oF,cACA8Q,EAAA,GAAAlqB,IAAAhvE,EAAA09E,UAAA19E,EAAAooF,aACA,OAAA98F,MAAAu7F,OAAAxK,QAAA4c,EAAAC,IAEAd,KA4BAe,GAAA,WAMA,QAAAA,GAAAd,EAAAe,GACA9tG,KAAA+sG,SACA/sG,KAAA+tG,sBACA,IAAA5uF,GAAAnf,KAAA+sG,OAAAnQ,iBACAoR,EAAA,GAAA/G,IAAA9nF,EAAA09E,YACA7rF,EAAAmO,EAAA8uF,eAKAjuG,MAAAkuG,WAAA,GAAArF,IAAA73F,EACA,IAAAm9F,GAAAL,EAAA7H,iBACAmI,EAAAN,EAAA/H,gBAEAD,EAAAkI,EAAA3G,eAAAzkB,GAAAC,WAAAsrB,EAAA7I,UAAA,MACAK,EAAA30F,EAAAq2F,eAAAzkB,GAAAC,WAAAurB,EAAA9I,UAAA,MACAiG,EAAA,GAAAxG,IAAAe,EAAAqI,EAAAjJ,qBAAA8I,EAAAzG,gBACAkD,EAAA,GAAA1F,IAAAY,EAAAyI,EAAAlJ,qBAAAl0F,EAAAu2F,eAKAvnG,MAAAooG,WAAA,GAAA7C,IAAAkF,EAAAc,GAKAvrG,KAAAquG,gBAAA,GAAAvB,IAAA9sG,KAAA+sG,QAqIA,MAhIAc,GAAAnvG,UAAA4vG,SAAA,WACA,MAAAtuG,MAAA+sG,QAKAc,EAAAnvG,UAAAunG,eAAA,WACA,MAAAjmG,MAAAooG,WAAAnC,iBAAAX,WAMAuI,EAAAnvG,UAAA6vG,uBAAA,SAAAnsG,GACA,GAAAwR,GAAA5T,KAAAooG,WAAAlC,uBACA,OAAAtyF,KAGA5T,KAAA+sG,OAAAnQ,iBAAA4R,iBACApsG,EAAAy1D,YAAAjkD,EAAAu+E,kBAAA/vF,EAAAmoF,YAAA1yB,WACAjkD,EAAArR,SAAAH,GAGA,MAKAyrG,EAAAnvG,UAAAm5D,QAAA,WACA,WAAA73D,KAAA+tG,oBAAArpG,QAKAmpG,EAAAnvG,UAAA+vG,qBAAA,SAAAzS,GACAh8F,KAAA+tG,oBAAAprG,KAAAq5F,IAOA6R,EAAAnvG,UAAAgwG,wBAAA,SAAA1S,EAAA2S,GACA,GAAAC,KACA,IAAAD,EAAA,CACA1yD,EAAAkX,OAAA,MAAA6oC,EAAA,kDACA,IAAA6S,GAAA7uG,KAAA+sG,OAAA3qG,IACApC,MAAA+tG,oBAAAlsG,QAAA,SAAA6rG,GACAiB,EAA8CA,CAC9C,IAAAG,GAAApB,EAAAxQ,kBAAAyR,EAAAE,EACAC,IACAF,EAAAjsG,KAAAmsG,KAIA,GAAA9S,EAAA,CAEA,OADA/wB,MACAztE,EAAA,EAA2BA,EAAAwC,KAAA+tG,oBAAArpG,SAAqClH,EAAA,CAChE,GAAAgD,GAAAR,KAAA+tG,oBAAAvwG,EACA,IAAAgD,EAAAmxB,QAAAqqE,IAGA,GAAAA,EAAAmB,iBAAA,CAEAlyB,IAAArqE,OAAAZ,KAAA+tG,oBAAA/oG,MAAAxH,EAAA,GACA,YALAytE,GAAAtoE,KAAAnC,GAQAR,KAAA+tG,oBAAA9iC,MAGAjrE,MAAA+tG,sBAEA,OAAAa,IAUAf,EAAAnvG,UAAAsqG,eAAA,SAAAE,EAAAC,EAAAwD,GACAzD,EAAA5pG,OAAAo7F,GAAAoK,OACA,OAAAoE,EAAAt8F,OAAAw1F,UACAnmD,EAAAkX,OAAAnzD,KAAAooG,WAAAlC,wBAAA,6DACAjqD,EAAAkX,OAAAnzD,KAAAooG,WAAApC,uBAAA,2DAEA,IAAAiD,GAAAjpG,KAAAooG,WACAx/E,EAAA5oB,KAAAkuG,WAAAlF,eAAAC,EAAAC,EAAAC,EAAAwD,EAKA,OAJA3sG,MAAAkuG,WAAAnF,cAAAngF,EAAA+/E,WACA1sD,EAAAkX,OAAAvqC,EAAA+/E,UAAA1C,iBAAAf,uBACA+D,EAAAhD,iBAAAf,qBAAA,2DACAllG,KAAAooG,WAAAx/E,EAAA+/E,UACA3oG,KAAA+uG,0BAAAnmF,EAAAggF,QAAAhgF,EAAA+/E,UAAA5C,gBAAAT,UAAA,OAMAuI,EAAAnvG,UAAAswG,iBAAA,SAAAtB,GACA,GAAA/H,GAAA3lG,KAAAooG,WAAArC,gBACAkJ,IACA,KAAAtJ,EAAAL,UAAAniB,aAAA,CACAwiB,EAAAL,UACAz/F,aAAAk+E,GAAA,SAAAjiF,EAAAuwB,GACA48E,EAAAtsG,KAAAwjG,GAAAI,iBAAAzkG,EAAAuwB,MAMA,MAHAszE,GAAAT,sBACA+J,EAAAtsG,KAAAwjG,GAAAE,YAAAV,EAAAL,YAEAtlG,KAAA+uG,0BAAAE,EAAAtJ,EAAAL,UAAAoI,IASAG,EAAAnvG,UAAAqwG,0BAAA,SAAAnG,EAAAqE,EAAAjR,GACA,GAAAqR,GAAArR,GACAA,GACAh8F,KAAA+tG,mBACA,OAAA/tG,MAAAquG,gBAAArB,yBAAApE,EAAAqE,EAAAI,IAEAQ,KA6BAqB,GAAA,WACA,QAAAA,KAUAlvG,KAAAmvG,UAwMA,MAtMAlxG,QAAAC,eAAAgxG,EAAA,0BACA7wG,IAAA,WAEA,MADA49C,GAAAkX,OAAA6uC,GAAA,oCACAA,IAEA98F,IAAA,SAAAjD,GACAg6C,EAAAkX,QAAA6uC,GAAA,mDACAA,GAAA//F,GAEA7D,YAAA,EACAD,cAAA,IAKA+wG,EAAAxwG,UAAAm5D,QAAA,WACA,MAAA5b,GAAA4b,QAAA73D,KAAAmvG,SASAD,EAAAxwG,UAAAsqG,eAAA,SAAAE,EAAAC,EAAAiG,GACA,GAAAhN,GAAA8G,EAAAt8F,OAAAw1F,OACA,WAAAA,EAAA,CACA,GAAApkB,GAAA/hC,EAAAwb,QAAAz3D,KAAAmvG,OAAA/M,EAEA,OADAnmD,GAAAkX,OAAA,MAAA6qB,EAAA,gDACAA,EAAAgrB,eAAAE,EAAAC,EAAAiG,GAGA,GAAAC,KAIA,OAHApzD,GAAAp6C,QAAA7B,KAAAmvG,OAAA,SAAArtG,EAAAk8E,GACAqxB,IAAAzuG,OAAAo9E,EAAAgrB,eAAAE,EAAAC,EAAAiG,MAEAC,GAaAH,EAAAxwG,UAAA+vG,qBAAA,SAAAt7E,EAAA6oE,EAAAmN,EAAAuB,EAAA4E,GACA,GAAAlN,GAAAjvE,EAAAqtE,kBACAxiB,EAAA/hC,EAAAwb,QAAAz3D,KAAAmvG,OAAA/M,EACA,KAAApkB,EAAA,CAEA,GAAAivB,GAAA9D,EAAA4B,uBAAAuE,EAAA5E,EAAA,MACA6E,GAAA,CACAtC,GACAsC,GAAA,EAEA7E,YAAA9nB,KACAqqB,EAAA9D,EAAA0B,0BAAAH,GACA6E,GAAA,IAGAtC,EAAArqB,GAAAC,WACA0sB,GAAA,EAEA,IAAA5G,GAAA,GAAApD,IAAA,GAAAR,IAC6B,EAAAwK,GAAA,MAAAxK,IACA,EAAAuK,GAAA,GAC7BtxB,GAAA,GAAA6vB,IAAA16E,EAAAw1E,GACA3oG,KAAAmvG,OAAA/M,GAAApkB,EAIA,MADAA,GAAAywB,qBAAAzS,GACAhe,EAAAgxB,iBAAAhT,IAaAkT,EAAAxwG,UAAAgwG,wBAAA,SAAAv7E,EAAA6oE,EAAA2S,GACA,GAAAvM,GAAAjvE,EAAAqtE,kBACA19C,KACA8rD,KACAY,EAAAxvG,KAAAyvG,iBACA,gBAAArN,EAAA,CAEA,GAAAlB,GAAAlhG,IACAi8C,GAAAp6C,QAAA7B,KAAAmvG,OAAA,SAAAO,EAAA1xB,GACA4wB,IAAAhuG,OAAAo9E,EAAA0wB,wBAAA1S,EAAA2S,IACA3wB,EAAAnmB,kBACAqpC,GAAAiO,OAAAO,GAEA1xB,EACAswB,WACA1R,iBACA4R,gBACA1rD,EAAAngD,KAAAq7E,EAAAswB,mBAKA,CAEA,GAAAtwB,GAAA/hC,EAAAwb,QAAAz3D,KAAAmvG,OAAA/M,EACApkB,KACA4wB,IAAAhuG,OAAAo9E,EAAA0wB,wBAAA1S,EAAA2S,IACA3wB,EAAAnmB,kBACA73D,MAAAmvG,OAAA/M,GAEApkB,EACAswB,WACA1R,iBACA4R,gBACA1rD,EAAAngD,KAAAq7E,EAAAswB,cASA,MAJAkB,KAAAxvG,KAAAyvG,mBAEA3sD,EAAAngD,KAAA,GAAAusG,GAAAzU,uBAAAtnE,EAAAyqE,KAAAzqE,EAAA/wB,QAEgB0gD,UAAAhpB,OAAA80E,IAKhBM,EAAAxwG,UAAAixG,cAAA,WACA,GAAAnmD,GAAAxpD,IAEA,OADA/B,QAAA2D,KAAA5B,KAAAmvG,QAAAtnG,IAAA,SAAA/F,GAAkE,MAAA0nD,GAAA2lD,OAAArtG,KAClEkP,OAAA,SAAAgtE,GACA,OAAAA,EACAswB,WACA1R,iBACA4R,kBAQAU,EAAAxwG,UAAA6vG,uBAAA,SAAAnsG,GACA,GAAAsoG,GAAA,IAIA,OAHAzuD,GAAAp6C,QAAA7B,KAAAmvG,OAAA,SAAArtG,EAAAk8E,GACA0sB,KAAA1sB,EAAAuwB,uBAAAnsG,KAEAsoG,GAMAwE,EAAAxwG,UAAAkxG,aAAA,SAAAz8E,GAEA,GADAA,EAAAypE,iBACA4R,eACA,MAAAxuG,MAAA6vG,iBAGA,IAAAzN,GAAAjvE,EAAAqtE,iBACA,OAAAvkD,GAAAwb,QAAAz3D,KAAAmvG,OAAA/M,IAOA8M,EAAAxwG,UAAAoxG,mBAAA,SAAA38E,GACA,aAAAnzB,KAAA4vG,aAAAz8E,IAKA+7E,EAAAxwG,UAAA+wG,gBAAA,WACA,aAAAzvG,KAAA6vG,mBAKAX,EAAAxwG,UAAAmxG,gBAAA,WAOA,MANA5zD,GAAAmc,UAAAp4D,KAAAmvG,OAAA,SAAAnxB,GACA,MAAAA,GACAswB,WACA1R,iBACA4R,kBAEA,MAEAU,KA2BAa,GAAA,WACA,QAAAA,GAAAC,GACAhwG,KAAAgwG,aAkLA,MA3KAD,GAAArxG,UAAAuxG,SAAA,SAAA7tG,EAAA+d,GACA,GAAA/d,EAAAy1D,UACA,UAAAk4C,GAAA,GAAA/M,IAAA7iF,GAGA,IAAA+vF,GAAAlwG,KAAAgwG,WAAA1M,yBAAAlhG,EACA,UAAA8tG,EAAA,CACA,GAAAC,GAAAD,EAAA9tG,KACAuQ,EAAAu9F,EAAAv9F,MACAo4E,EAAAd,GAAAc,aAAAolB,EAAA/tG,EAEA,OADAuQ,KAAA6/E,YAAAzH,EAAA5qE,GACA,GAAA4vF,GAAA/vG,KAAAgwG,WAAA9qG,IAAAirG,EAAAx9F,IAGA,GAAAmwF,GAAA,GAAAE,IAAA7iF,EAEA,WAAA4vF,GADA/vG,KAAAgwG,WAAAvM,QAAArhG,EAAA0gG,KAUAiN,EAAArxG,UAAA0xG,UAAA,SAAAhuG,EAAAiuG,GACA,GAAAC,GAAAtwG,IAIA,OAHAi8C,GAAAp6C,QAAAwuG,EAAA,SAAAtP,EAAA5gF,GACAmwF,IAAAL,SAAA7tG,EAAA0D,MAAAi7F,GAAA5gF,KAEAmwF,GASAP,EAAArxG,UAAA6xG,YAAA,SAAAnuG,GACA,MAAAA,GAAAy1D,UACAk4C,EAAAr7B,MAIA,GAAAq7B,GADA/vG,KAAAgwG,WAAAvM,QAAArhG,EAAA4gG,GAAAtuB,SAWAq7B,EAAArxG,UAAA8xG,iBAAA,SAAApuG,GACA,aAAApC,KAAAywG,gBAAAruG,IASA2tG,EAAArxG,UAAA+xG,gBAAA,SAAAruG,GACA,GAAA8tG,GAAAlwG,KAAAgwG,WAAA1M,yBAAAlhG,EACA,cAAA8tG,EACAlwG,KAAAgwG,WACA3xG,IAAA6xG,EAAA9tG,MACAG,SAAA0nF,GAAAc,aAAAmlB,EAAA9tG,SAGA,MAQA2tG,EAAArxG,UAAAgyG,oBAAA,WACA,GAAA95F,MACAuJ,EAAAngB,KAAAgwG,WAAAr9F,KAgBA,OAfA,OAAAwN,EAEAA,EAAAgjE,cACAhjE,EAAAta,aAAAk+E,GAAA,SAAAqO,EAAA//D,GACAzb,EAAAjU,KAAA,GAAA+gF,IAAA0O,EAAA//D,MAKAryB,KAAAgwG,WAAAp5F,SAAA69E,iBAAA,SAAArC,EAAAkF,GACA,MAAAA,EAAA3kF,OACAiE,EAAAjU,KAAA,GAAA+gF,IAAA0O,EAAAkF,EAAA3kF,UAIAiE,GAMAm5F,EAAArxG,UAAAiyG,mBAAA,SAAAvuG,GACA,GAAAA,EAAAy1D,UACA,MAAA73D,KAGA,IAAA4wG,GAAA5wG,KAAAywG,gBAAAruG,EACA,OACA,IAAA2tG,GADA,MAAAa,EACA,GAAA5N,IAAA4N,GAGA5wG,KAAAgwG,WAAAlN,QAAA1gG,KAQA2tG,EAAArxG,UAAAm5D,QAAA,WACA,MAAA73D,MAAAgwG,WAAAn4C,WAQAk4C,EAAArxG,UAAAqN,MAAA,SAAAoU,GACA,MAAA4vF,GAAAc,mBAAA5mB,GAAAvV,MAAA10E,KAAAgwG,WAAA7vF,IAKA4vF,EAAAr7B,MAAA,GAAAq7B,GAAA,GAAA/M,IAAA,OAQA+M,EAAAc,mBAAA,SAAA9lB,EAAA+lB,EAAA3wF,GACA,SAAA2wF,EAAAn+F,MAEA,MAAAwN,GAAAqyE,YAAAzH,EAAA+lB,EAAAn+F,MAGA,IAAAo+F,GAAA,IAgBA,OAfAD,GAAAl6F,SAAA69E,iBAAA,SAAAsM,EAAAzJ,GACA,cAAAyJ,GAGA9kD,EAAAkX,OAAA,OAAAmkC,EAAA3kF,MAAA,6CACAo+F,EAAAzZ,EAAA3kF,OAGAwN,EAAA4vF,EAAAc,mBAAA9lB,EAAAjlF,MAAAi7F,GAAAzJ,EAAAn3E,KAIAA,EAAA5d,SAAAwoF,GAAAlzB,WAAA,OAAAk5C,IACA5wF,IAAAqyE,YAAAzH,EAAAjlF,MAAA,aAAAirG,IAEA5wF,GAGA4vF,KAyBAiB,GAAA,WACA,QAAAA,KAQAhxG,KAAAixG,eAAAlB,GAAAr7B,MASA10E,KAAAkxG,cACAlxG,KAAAmxG,cAAA,EAudA,MA/cAH,GAAAtyG,UAAA0yG,YAAA,SAAAhvG,GACA,UAAAivG,IAAAjvG,EAAApC,OAUAgxG,EAAAtyG,UAAA4yG,aAAA,SAAAlvG,EAAA64F,EAAAsW,EAAAC,GACAv1D,EAAAkX,OAAAo+C,EAAAvxG,KAAAmxG,aAAA,oDACA7+F,KAAAk/F,IACAA,GAAA,GAEAxxG,KAAAkxG,WAAAvuG,MACAP,OACA64F,OACAsW,UACAC,YAEAA,IACAxxG,KAAAixG,eAAAjxG,KAAAixG,eAAAhB,SAAA7tG,EAAA64F,IAEAj7F,KAAAmxG,aAAAI,GASAP,EAAAtyG,UAAA+yG,SAAA,SAAArvG,EAAAypG,EAAA0F,GACAt1D,EAAAkX,OAAAo+C,EAAAvxG,KAAAmxG,aAAA,gDACAnxG,KAAAkxG,WAAAvuG,MACAP,OACAwU,SAAAi1F,EACA0F,UACAC,SAAA,IAEAxxG,KAAAixG,eAAAjxG,KAAAixG,eAAAb,UAAAhuG,EAAAypG,GACA7rG,KAAAmxG,aAAAI,GAMAP,EAAAtyG,UAAAgzG,SAAA,SAAAH,GACA,OAAA/zG,GAAA,EAAuBA,EAAAwC,KAAAkxG,WAAAxsG,OAA4BlH,IAAA,CACnD,GAAAm0G,GAAA3xG,KAAAkxG,WAAA1zG,EACA,IAAAm0G,EAAAJ,YACA,MAAAI,GAGA,aAUAX,EAAAtyG,UAAA6xG,YAAA,SAAAgB,GAKA,GAAA/nD,GAAAxpD,KACAu5F,EAAAv5F,KAAAkxG,WAAA1gC,UAAA,SAAA3xE,GACA,MAAAA,GAAA0yG,aAEAt1D,GAAAkX,OAAAomC,GAAA,iDACA,IAAAqY,GAAA5xG,KAAAkxG,WAAA3X,EACAv5F,MAAAkxG,WAAAtuG,OAAA22F,EAAA,EAIA,KAHA,GAAAsY,GAAAD,EAAAJ,QACAM,GAAA,EACAt0G,EAAAwC,KAAAkxG,WAAAxsG,OAAA,EACAmtG,GAAAr0G,GAAA,IACA,GAAAu0G,GAAA/xG,KAAAkxG,WAAA1zG,EACAu0G,GAAAP,UACAh0G,GAAA+7F,GACAv5F,KAAAgyG,oBAAAD,EAAAH,EAAAxvG,MAEAyvG,GAAA,EAEAD,EAAAxvG,KAAAyrD,SAAAkkD,EAAA3vG,QAEA0vG,GAAA,IAGAt0G,IAEA,GAAAq0G,EAGA,IAAAC,EAGA,MADA9xG,MAAAiyG,cACA,CAIA,IAAAL,EAAA3W,KACAj7F,KAAAixG,eAAAjxG,KAAAixG,eAAAV,YAAAqB,EAAAxvG,UAEA,CACA,GAAAwU,GAAAg7F,EAAAh7F,QACAqlC,GAAAp6C,QAAA+U,EAAA,SAAAw7E,GACA5oC,EAAAynD,eAAAznD,EAAAynD,eAAAV,YAAAqB,EAAAxvG,KAAA0D,MAAAssF,MAGA,SAlBA,UA4BA4e,EAAAtyG,UAAAwzG,qBAAA,SAAA9vG,GACA,MAAApC,MAAAixG,eAAAR,gBAAAruG,IAYA4uG,EAAAtyG,UAAAqsG,uBAAA,SAAAoH,EAAAxF,EAAAyF,EAAAC,GACA,GAAAD,GAAAC,EAqBA,CACA,GAAA1I,GAAA3pG,KAAAixG,eAAAN,mBAAAwB,EACA,KAAAE,GAAA1I,EAAA9xC,UACA,MAAA80C,EAIA,IAAA0F,GACA,MAAA1F,GACAhD,EAAA6G,iBAAAvmB,GAAAvV,OAGA,CACA,GAAA1jE,GAAA,SAAA+jE,GACA,OAAAA,EAAAy8B,SAAAa,MACAD,KACAA,EAAA1vG,QAAAqyE,EAAAw8B,YACAx8B,EAAA3yE,KAAAyrD,SAAAskD,MAAAtkD,SAAAknB,EAAA3yE,QAEAkwG,EAAAtB,EAAAuB,WAAAvyG,KAAAkxG,WAAAlgG,EAAAmhG,GACAK,EAAA7F,GAAA/pB,GAAAC,UACA,OAAAyvB,GAAAvmG,MAAAymG,GAXA,YA9BA,GAAA5B,GAAA5wG,KAAAixG,eAAAR,gBAAA0B,EACA,UAAAvB,EACA,MAAAA,EAGA,IAAA6B,GAAAzyG,KAAAixG,eAAAN,mBAAAwB,EACA,IAAAM,EAAA56C,UACA,MAAA80C,EAEA,UAAAA,GACA8F,EAAAjC,iBAAAvmB,GAAAvV,OAIA,CACA,GAAA89B,GAAA7F,GAAA/pB,GAAAC,UACA,OAAA4vB,GAAA1mG,MAAAymG,GAJA,aA0CAxB,EAAAtyG,UAAAmsG,0BAAA,SAAAsH,EAAAO,GACA,GAAA/H,GAAA/nB,GAAAC,WACA8vB,EAAA3yG,KAAAixG,eAAAR,gBAAA0B,EACA,IAAAQ,EAOA,MANAA,GAAAxvB,cAEAwvB,EAAA9sG,aAAAk+E,GAAA,SAAAqO,EAAA8Q,GACAyH,IAAAvnB,qBAAAgP,EAAA8Q,KAGAyH,CAEA,IAAA+H,EAAA,CAGA,GAAAE,GAAA5yG,KAAAixG,eAAAN,mBAAAwB,EAWA,OAVAO,GAAA7sG,aAAAk+E,GAAA,SAAAqO,EAAA//D,GACA,GAAAlS,GAAAyyF,EACAjC,mBAAA,GAAA1mB,IAAAmI,IACArmF,MAAAsmB,EACAs4E,KAAAvnB,qBAAAgP,EAAAjyE,KAGAyyF,EAAAlC,sBAAA7uG,QAAA,SAAAgiF,GACA8mB,IAAAvnB,qBAAAS,EAAA/lF,KAAA+lF,EAAA1jE,QAEAwqF,EASA,MAJA3qG,MAAAixG,eAAAN,mBAAAwB,GACAzB,sBAAA7uG,QAAA,SAAAgiF,GACA8mB,IAAAvnB,qBAAAS,EAAA/lF,KAAA+lF,EAAA1jE,QAEAwqF,GAuBAqG,EAAAtyG,UAAAwsG,mCAAA,SAAAiH,EAAAxW,EAAAkX,EAAAC,GACA72D,EAAAkX,OAAA0/C,GAAAC,EAAA,4DACA,IAAA1wG,GAAA+vG,EAAArsG,MAAA61F,EACA,IAAA37F,KAAAixG,eAAAT,iBAAApuG,GAGA,WAIA,IAAA2wG,GAAA/yG,KAAAixG,eAAAN,mBAAAvuG,EACA,OAAA2wG,GAAAl7C,UAEAi7C,EAAAvwG,SAAAo5F,GASAoX,EAAAhnG,MAAA+mG,EAAAvwG,SAAAo5F,KAaAqV,EAAAtyG,UAAA6pG,kBAAA,SAAA4J,EAAApR,EAAA+R,GACA,GAAA1wG,GAAA+vG,EAAArsG,MAAAi7F,GACA6P,EAAA5wG,KAAAixG,eAAAR,gBAAAruG,EACA,UAAAwuG,EACA,MAAAA,EAGA,IAAAkC,EAAAzN,mBAAAtE,GAAA,CAEA,MADA/gG,MAAAixG,eAAAN,mBAAAvuG,GACA2J,MAAA+mG,EAAAxN,UAAAnT,kBAAA4O,IAGA,aAYAiQ,EAAAtyG,UAAA8rG,eAAA,SAAApoG,GACA,MAAApC,MAAAixG,eAAAR,gBAAAruG,IAcA4uG,EAAAtyG,UAAA+pG,iBAAA,SAAA0J,EAAA3J,EAAAzO,EAAAlnB,EAAAqW,EAAA55E,GACA,GAAA0jG,GACArJ,EAAA3pG,KAAAixG,eAAAN,mBAAAwB,GACAvB,EAAAjH,EAAA8G,gBAAAxmB,GAAAvV,MACA,UAAAk8B,EACAoC,EAAApC,MAEA,UAAApI,EAKA,QAJAwK,GAAArJ,EAAA59F,MAAAy8F,GAOA,GADAwK,IAAA1f,UAAAhkF,GACA0jG,EAAAn7C,WAAAm7C,EAAA7vB,aAgBA,QATA,KANA,GAAA75D,MACAiiE,EAAAj8E,EAAA00E,aACAoU,EAAAlP,EACA8pB,EAAA3c,uBAAA0D,EAAAzqF,GACA0jG,EAAA5c,gBAAA2D,EAAAzqF,GACA8rB,EAAAg9D,EAAAlE,UACA94D,GAAA9R,EAAA5kB,OAAAmuE,GACA,IAAA0Y,EAAAnwD,EAAA2+D,IACAzwE,EAAA3mB,KAAAy4B,GAEAA,EAAAg9D,EAAAlE,SAEA,OAAA5qE,IAYA0nF,EAAAtyG,UAAAszG,oBAAA,SAAAiB,EAAA7wG,GACA,MAAA6wG,GAAAhY,KACAgY,EAAA7wG,KAAAyrD,SAAAzrD,KAIA65C,EAAAic,QAAA+6C,EAAAr8F,SAAA,SAAAssF,EAAA9Q,GACA,MAAA6gB,GAAA7wG,KAAA0D,MAAAssF,GAAAvkC,SAAAzrD,MAQA4uG,EAAAtyG,UAAAuzG,WAAA,WACAjyG,KAAAixG,eAAAD,EAAAuB,WAAAvyG,KAAAkxG,WAAAF,EAAAkC,eAAAjpB,GAAAvV,OACA10E,KAAAkxG,WAAAxsG,OAAA,EACA1E,KAAAmxG,aAAAnxG,KAAAkxG,WAAAlxG,KAAAkxG,WAAAxsG,OAAA,GAAA6sG,QAGAvxG,KAAAmxG,cAAA,GAUAH,EAAAkC,eAAA,SAAAn+B,GACA,MAAAA,GAAAy8B,SAYAR,EAAAuB,WAAA,SAAAY,EAAAniG,EAAAoiG,GAEA,OADAC,GAAAtD,GAAAr7B,MACAl3E,EAAA,EAAuBA,EAAA21G,EAAAzuG,SAAmBlH,EAAA,CAC1C,GAAAu3E,GAAAo+B,EAAA31G,EAIA,IAAAwT,EAAA+jE,GAAA,CACA,GAAAg3B,GAAAh3B,EAAA3yE,KACA2oF,MAAA,EACA,IAAAhW,EAAAkmB,KACAmY,EAAAvlD,SAAAk+C,IACAhhB,EAAAd,GAAAc,aAAAqoB,EAAArH,GACAsH,IAAApD,SAAAllB,EAAAhW,EAAAkmB,OAEA8Q,EAAAl+C,SAAAulD,KACAroB,EAAAd,GAAAc,aAAAghB,EAAAqH,GACAC,IAAApD,SAAAhmB,GAAAvV,MAAAK,EAAAkmB,KAAA14F,SAAAwoF,SAMA,KAAAhW,EAAAn+D,SAwBA,KAAAqlC,GAAAqX,eAAA,6CAvBA,IAAA8/C,EAAAvlD,SAAAk+C,GACAhhB,EAAAd,GAAAc,aAAAqoB,EAAArH,GACAsH,IAAAjD,UAAArlB,EAAAhW,EAAAn+D,cAEA,IAAAm1F,EAAAl+C,SAAAulD,GAEA,GADAroB,EAAAd,GAAAc,aAAAghB,EAAAqH,GACAroB,EAAAlzB,UACAw7C,IAAAjD,UAAAnmB,GAAAvV,MAAAK,EAAAn+D,cAEA,CACA,GAAA9Q,GAAAm2C,EAAAwb,QAAAsd,EAAAn+D,SAAAm0E,EAAAR,WACA,IAAAzkF,EAAA,CAEA,GAAAwtG,GAAAxtG,EAAAvD,SAAAwoF,EAAAN,WACA4oB,KAAApD,SAAAhmB,GAAAvV,MAAA4+B,OAaA,MAAAD,IAEArC,KAQAK,GAAA,WAKA,QAAAA,GAAAjvG,EAAA0uG,GACA9wG,KAAAuzG,UAAAnxG,EACApC,KAAAgwG,WAAAc,EA4FA,MAhFAO,GAAA3yG,UAAAqsG,uBAAA,SAAA4B,EAAAyF,EAAAC,GACA,MAAAryG,MAAAgwG,WAAAjF,uBAAA/qG,KAAAuzG,UAAA5G,EAAAyF,EAAAC,IASAhB,EAAA3yG,UAAAmsG,0BAAA,SAAA6H,GACA,MAAA1yG,MAAAgwG,WAAAnF,0BAAA7qG,KAAAuzG,UAAAb,IAqBArB,EAAA3yG,UAAAwsG,mCAAA,SAAA9oG,EAAAywG,EAAAC,GACA,MAAA9yG,MAAAgwG,WAAA9E,mCAAAlrG,KAAAuzG,UAAAnxG,EAAAywG,EAAAC,IAUAzB,EAAA3yG,UAAA8rG,eAAA,SAAApoG,GACA,MAAApC,MAAAgwG,WAAAxF,eAAAxqG,KAAAuzG,UAAAztG,MAAA1D,KAaAivG,EAAA3yG,UAAA+pG,iBAAA,SAAAD,EAAAzO,EAAAlnB,EAAAqW,EAAA55E,GACA,MAAAtP,MAAAgwG,WAAAvH,iBAAAzoG,KAAAuzG,UAAA/K,EAAAzO,EAAAlnB,EAAAqW,EAAA55E,IAUA+hG,EAAA3yG,UAAA6pG,kBAAA,SAAAxH,EAAAyS,GACA,MAAAxzG,MAAAgwG,WAAAzH,kBAAAvoG,KAAAuzG,UAAAxS,EAAAyS,IAQAnC,EAAA3yG,UAAAoH,MAAA,SAAAssF,GACA,UAAAif,GAAArxG,KAAAuzG,UAAAztG,MAAAssF,GAAApyF,KAAAgwG,aAEAqB,KAwCAoC,GAAA,WAKA,QAAAA,GAAAC,GACA1zG,KAAA0zG,kBAMA1zG,KAAA2zG,eAAA3Q,GAAAtuB,MAMA10E,KAAA4zG,kBAAA,GAAA5C,IACAhxG,KAAA6zG,kBACA7zG,KAAA8zG,kBA0nBA,MA/mBAL,GAAA/0G,UAAAq1G,mBAAA,SAAA3xG,EAAA4xG,EAAAzC,EAAAC,GAGA,MADAxxG,MAAA4zG,kBAAAtC,aAAAlvG,EAAA4xG,EAAAzC,EAAAC,GACAA,EAIAxxG,KAAAi0G,4BAAA,GAAAtP,IAAA1C,GAAAK,KAAAlgG,EAAA4xG,QAWAP,EAAA/0G,UAAAw1G,eAAA,SAAA9xG,EAAAypG,EAAA0F,GAEAvxG,KAAA4zG,kBAAAnC,SAAArvG,EAAAypG,EAAA0F,EACA,IAAA4C,GAAAnR,GAAAC,WAAA4I,EACA,OAAA7rG,MAAAi0G,4BAAA,GAAApP,IAAA5C,GAAAK,KAAAlgG,EAAA+xG,KASAV,EAAA/0G,UAAAorG,aAAA,SAAAyH,EAAA5O,OACA,KAAAA,IAAgCA,GAAA,EAChC,IAAA5tB,GAAA/0E,KAAA4zG,kBAAAlC,SAAAH,EAEA,IADAvxG,KAAA4zG,kBAAArD,YAAAgB,GAIA,CACA,GAAA6C,GAAApR,GAAAtuB,KAUA,OATA,OAAAK,EAAAkmB,KAEAmZ,IAAAlvG,IAAA+kF,GAAAvV,OAAA,GAGAz4B,EAAAp6C,QAAAkzE,EAAAn+D,SAAA,SAAAirE,EAAA1hE,GACAi0F,IAAAlvG,IAAA,GAAA+kF,IAAApI,GAAA1hE,KAGAngB,KAAAi0G,4BAAA,GAAAxR,IAAA1tB,EAAA3yE,KAAAgyG,EAAAzR,IAbA,UAuBA8Q,EAAA/0G,UAAA21G,qBAAA,SAAAjyG,EAAA4xG,GACA,MAAAh0G,MAAAi0G,4BAAA,GAAAtP,IAAA1C,GAAAM,OAAAngG,EAAA4xG,KASAP,EAAA/0G,UAAA41G,iBAAA,SAAAlyG,EAAAypG,GACA,GAAAsI,GAAAnR,GAAAC,WAAA4I,EACA,OAAA7rG,MAAAi0G,4BAAA,GAAApP,IAAA5C,GAAAM,OAAAngG,EAAA+xG,KAQAV,EAAA/0G,UAAA61G,oBAAA,SAAAnyG,GACA,MAAApC,MAAAi0G,4BAAA,GAAAxP,IAAAxC,GAAAM,OAAAngG,KAUAqxG,EAAA/0G,UAAA81G,0BAAA,SAAApyG,EAAA64F,EAAAtkF,GACA,GAAA89F,GAAAz0G,KAAA00G,gBAAA/9F,EACA,UAAA89F,EAAA,CACA,GAAA74C,GAAA63C,EAAAkB,eAAAF,GACAG,EAAAh5C,EAAAx5D,KAAAggG,EAAAxmC,EAAAwmC,QACArX,EAAAd,GAAAc,aAAA6pB,EAAAxyG,GACA46D,EAAA,GAAA2nC,IAAA1C,GAAAO,qBAAAJ,GAAArX,EAAAkQ,EACA,OAAAj7F,MAAA60G,sBAAAD,EAAA53C,GAIA,UAWAy2C,EAAA/0G,UAAAo2G,sBAAA,SAAA1yG,EAAAypG,EAAAl1F,GACA,GAAA89F,GAAAz0G,KAAA00G,gBAAA/9F,EACA,IAAA89F,EAAA,CACA,GAAA74C,GAAA63C,EAAAkB,eAAAF,GACAG,EAAAh5C,EAAAx5D,KAAAggG,EAAAxmC,EAAAwmC,QACArX,EAAAd,GAAAc,aAAA6pB,EAAAxyG,GACA+xG,EAAAnR,GAAAC,WAAA4I,GACA7uC,EAAA,GAAA6nC,IAAA5C,GAAAO,qBAAAJ,GAAArX,EAAAopB,EACA,OAAAn0G,MAAA60G,sBAAAD,EAAA53C,GAIA,UAUAy2C,EAAA/0G,UAAAq2G,0BAAA,SAAA3yG,EAAAuU,GACA,GAAA89F,GAAAz0G,KAAA00G,gBAAA/9F,EACA,IAAA89F,EAAA,CACA,GAAA74C,GAAA63C,EAAAkB,eAAAF,GACAG,EAAAh5C,EAAAx5D,KAAAggG,EAAAxmC,EAAAwmC,QACArX,EAAAd,GAAAc,aAAA6pB,EAAAxyG,GACA46D,EAAA,GAAAynC,IAAAxC,GAAAO,qBAAAJ,GAAArX,EACA,OAAA/qF,MAAA60G,sBAAAD,EAAA53C,GAIA,UAUAy2C,EAAA/0G,UAAA+vG,qBAAA,SAAAt7E,EAAA6oE,GACA,GAAA55F,GAAA+wB,EAAA/wB,KACAsoG,EAAA,KACAsK,GAAA,CAGAh1G,MAAA2zG,eAAAxP,cAAA/hG,EAAA,SAAA6yG,EAAAC,GACA,GAAAnqB,GAAAd,GAAAc,aAAAkqB,EAAA7yG,EACAsoG,MAAAwK,EAAA3G,uBAAAxjB,GACAiqB,EACAA,GAAAE,EAAAzF,mBAEA,IAAA0F,GAAAn1G,KAAA2zG,eAAAt1G,IAAA+D,EACA+yG,IAKAH,EACAA,GAAAG,EAAA1F,kBACA/E,KAAAyK,EAAA5G,uBAAAtkB,GAAAvV,SANAygC,EAAA,GAAAjG,IACAlvG,KAAA2zG,eAAA3zG,KAAA2zG,eAAAzuG,IAAA9C,EAAA+yG,GAOA,IAAA7F,EACA,UAAA5E,EACA4E,GAAA,MAEA,CACAA,GAAA,EACA5E,EAAA9nB,GAAAC,UACA7iF,MAAA2zG,eAAA7Q,QAAA1gG,GACAoiG,aAAA,SAAApS,EAAAgjB,GACA,GAAAhM,GAAAgM,EAAA7G,uBAAAtkB,GAAAvV,MACA00B,KACAsB,IAAAtnB,qBAAAgP,EAAAgX,MAIA,GAAAiM,GAAAF,EAAArF,mBAAA38E,EACA,KAAAkiF,IAAAliF,EAAAypE,iBAAA4R,eAAA,CAEA,GAAAiG,GAAAhB,EAAA6B,cAAAniF,EACA8oB,GAAAkX,SAAAshD,IAAAz0G,MAAA8zG,gBAAA,yCACA,IAAAn9F,GAAA88F,EAAA8B,kBACAv1G,MAAA8zG,eAAAW,GAAA99F,EAEA3W,KAAA6zG,eAAA,IAAAl9F,GAAA89F,EAEA,GAAAtL,GAAAnpG,KAAA4zG,kBAAAxC,YAAAhvG,GACA03B,EAAAq7E,EAAA1G,qBAAAt7E,EAAA6oE,EAAAmN,EAAAuB,EAAA4E,EACA,KAAA+F,IAAAL,EAAA,CACA,GAAAh3B,GAAAm3B,EAAAvF,aAAAz8E,EACA2G,KAAAl5B,OAAAZ,KAAAw1G,eAAAriF,EAAA6qD,IAEA,MAAAlkD,IAaA25E,EAAA/0G,UAAAgwG,wBAAA,SAAAv7E,EAAA6oE,EAAA2S,GACA,GAAAnlD,GAAAxpD,KAEAoC,EAAA+wB,EAAA/wB,KACAqzG,EAAAz1G,KAAA2zG,eAAAt1G,IAAA+D,GACAwsG,IAIA,IAAA6G,IACA,YAAAtiF,EAAAqtE,mBACAiV,EAAA3F,mBAAA38E,IAAA,CAIA,GAAAuiF,GAAAD,EAAA/G,wBAAAv7E,EAAA6oE,EAAA2S,EACA8G,GAAA59C,YACA73D,KAAA2zG,eAAA3zG,KAAA2zG,eAAAplG,OAAAnM,GAEA,IAAA0gD,GAAA4yD,EAAA5yD,OACA8rD,GAAA8G,EAAA57E,MAOA,IAAA67E,IAAA,IACA7yD,EAAA0tB,UAAA,SAAAr9C,GACA,MAAAA,GAAAypE,iBAAA4R,iBAEAoH,EAAA51G,KAAA2zG,eAAA5P,WAAA3hG,EAAA,SAAA2oF,EAAA8qB,GACA,MAAAA,GAAApG,mBAEA,IAAAkG,IAAAC,EAAA,CACA,GAAA9S,GAAA9iG,KAAA2zG,eAAA7Q,QAAA1gG,EAGA,KAAA0gG,EAAAjrC,UAIA,OAFAi+C,GAAA91G,KAAA+1G,gCAAAjT,GAEAtlG,EAAA,EAAmCA,EAAAs4G,EAAApxG,SAAqBlH,EAAA,CACxD,GAAAwgF,GAAA83B,EAAAt4G,GAAAw4G,EAAAh4B,EAAAswB,WACA/9C,EAAAvwD,KAAAi2G,uBAAAj4B,EACAh+E,MAAA0zG,gBAAAwC,eAAAzC,EAAA0C,mBAAAH,GAAAh2G,KAAAo2G,aAAAJ,GAAAzlD,EAAA8lD,OAAA9lD,EAAAq/B,aAUA,IAAAgmB,GAAA9yD,EAAAp+C,OAAA,IAAAiqG,EAGA,GAAAgH,EAAA,CAGA31G,KAAA0zG,gBAAA4C,cAAA7C,EAAA0C,mBAAAhjF,GADA,UAIA2vB,GAAAjhD,QAAA,SAAA00G,GACA,GAAAC,GAAAhtD,EAAAsqD,eAAAL,EAAA6B,cAAAiB,GACA/sD,GAAAkqD,gBAAA4C,cAAA7C,EAAA0C,mBAAAI,GAAAC,IAKAx2G,MAAAy2G,YAAA3zD,GAKA,MAAA8rD,IAWA6E,EAAA/0G,UAAAqsG,uBAAA,SAAA3oG,EAAAgwG,GACA,GACAtB,GAAA9wG,KAAA4zG,kBACAlJ,EAAA1qG,KAAA2zG,eAAA5P,WAAA3hG,EAAA,SAAAyhG,EAAAsR,GACA,GAAApqB,GAAAd,GAAAc,aAAA8Y,EAAAzhG,GACAsoG,EAAAyK,EAAA5G,uBAAAxjB,EACA,IAAA2f,EACA,MAAAA,IAGA,OAAAoG,GAAA/F,uBAAA3oG,EAAAsoG,EAAA0H,GATA,IAmBAqB,EAAA/0G,UAAAq3G,gCAAA,SAAAjT,GACA,MAAAA,GAAAa,KAAA,SAAA5Y,EAAA2rB,EAAAC,GACA,GAAAD,KAAAjH,kBAAA,CAEA,OADAiH,EAAA7G,mBAKA,GAAA+G,KAOA,OANAF,KACAE,EAAAF,EAAA/G,iBAEA1zD,EAAAp6C,QAAA80G,EAAA,SAAA70G,EAAA+0G,GACAD,IAAAh2G,OAAAi2G,KAEAD,KAQAnD,EAAA/0G,UAAA+3G,YAAA,SAAAK,GACA,OAAAhpG,GAAA,EAAuBA,EAAAgpG,EAAApyG,SAAoBoJ,EAAA,CAC3C,GAAAipG,GAAAD,EAAAhpG,EACA,KAAAipG,EAAAna,iBAAA4R,eAAA,CAEA,GAAAwI,GAAAvD,EAAA6B,cAAAyB,GACAE,EAAAj3G,KAAA8zG,eAAAkD,SACAh3G,MAAA8zG,eAAAkD,SACAh3G,MAAA6zG,eAAA,IAAAoD,MAUAxD,EAAA0C,mBAAA,SAAAhjF,GACA,MAAAA,GAAAypE,iBAAA4R,iBACAr7E,EAAAypE,iBAAAsa,YAIqC/jF,EAAA2oE,SAGrC3oE,GAWAsgF,EAAA/0G,UAAA82G,eAAA,SAAAriF,EAAA6qD,GACA,GAAA57E,GAAA+wB,EAAA/wB,KACAuU,EAAA3W,KAAAo2G,aAAAjjF,GACAo9B,EAAAvwD,KAAAi2G,uBAAAj4B,GACAlkD,EAAA95B,KAAA0zG,gBAAAwC,eAAAzC,EAAA0C,mBAAAhjF,GAAAxc,EAAA45C,EAAA8lD,OAAA9lD,EAAAq/B,YACAkT,EAAA9iG,KAAA2zG,eAAA7Q,QAAA1gG,EAGA,IAAAuU,EACAslC,EAAAkX,QAAA2vC,EAAAnwF,MAAA88F,kBAAA,yDAsBA,QAlBA0H,GAAArU,EAAAa,KAAA,SAAA5Y,EAAA2rB,EAAAC,GACA,IAAA5rB,EAAAlzB,WACA6+C,GACAA,EAAAjH,kBACA,OAAAiH,EAAA7G,kBAAAvB,WAIA,IAAA8I,KAOA,OANAV,KACAU,IAAAx2G,OAAA81G,EAAA/G,gBAAA9nG,IAAA,SAAAm2E,GAA8G,MAAAA,GAAAswB,eAE9GryD,EAAAp6C,QAAA80G,EAAA,SAAA70G,EAAAu1G,GACAD,IAAAx2G,OAAAy2G,KAEAD,IAGA55G,EAAA,EAA2BA,EAAA25G,EAAAzyG,SAA0BlH,EAAA,CACrD,GAAA85G,GAAAH,EAAA35G,EACAwC,MAAA0zG,gBAAA4C,cAAA7C,EAAA0C,mBAAAmB,GAAAt3G,KAAAo2G,aAAAkB,IAGA,MAAAx9E,IAQA25E,EAAA/0G,UAAAu3G,uBAAA,SAAAj4B,GACA,GAAAx0B,GAAAxpD,KACAmzB,EAAA6qD,EAAAswB,WACA33F,EAAA3W,KAAAo2G,aAAAjjF,EACA,QACAkjF,OAAA,WAEA,OADAr4B,EAAAioB,kBAAArjB,GAAAC,YACAhjE,QAEA+vE,WAAA,SAAAxP,GACA,UAAAA,EACA,MAAAzpE,GACA6yC,EAAAurD,0BAAA5hF,EAAA/wB,KAAAuU,GAGA6yC,EAAA+qD,oBAAAphF,EAAA/wB,KAMA,IAAAm1G,GAAA7tB,EAAAtJ,EAAAjtD,EACA,OAAAq2B,GAAAklD,wBAAAv7E,EACA,KAAAokF,MAWA9D,EAAA6B,cAAA,SAAAniF,GACA,MAAAA,GAAA/wB,KAAAiL,WAAA,IAAA8lB,EAAAqtE,mBAQAiT,EAAAkB,eAAA,SAAAF,GACA,GAAA+C,GAAA/C,EAAA/xG,QAAA,IAEA,OADAu5C,GAAAkX,QAAA,IAAAqkD,KAAA/C,EAAA/vG,OAAA,oBAEA09F,QAAAqS,EAAAprB,OAAAmuB,EAAA,GACAp1G,KAAA,GAAA6nF,IAAAwqB,EAAAprB,OAAA,EAAAmuB,MASA/D,EAAA/0G,UAAAg2G,gBAAA,SAAA/9F,GACA,MAAA3W,MAAA6zG,eAAA,IAAAl9F,IAQA88F,EAAA/0G,UAAA03G,aAAA,SAAAjjF,GACA,GAAAshF,GAAAhB,EAAA6B,cAAAniF,EACA,OAAA8oB,GAAAwb,QAAAz3D,KAAA8zG,eAAAW,IAOAhB,EAAA8B,iBAAA,WACA,MAAA9B,GAAAgE,iBAUAhE,EAAA/0G,UAAAm2G,sBAAA,SAAAD,EAAA1L,GACA,GAAAiM,GAAAn1G,KAAA2zG,eAAAt1G,IAAAu2G,EACA34D,GAAAkX,OAAAgiD,EAAA,uDACA,IAAAhM,GAAAnpG,KAAA4zG,kBAAAxC,YAAAwD,EACA,OAAAO,GAAAnM,eAAAE,EAAAC,EACA,OAmBAsK,EAAA/0G,UAAAu1G,4BAAA,SAAA/K,GACA,MAAAlpG,MAAA03G,sBAAAxO,EAAAlpG,KAAA2zG,eACA,KAAA3zG,KAAA4zG,kBAAAxC,YAAAnnB,GAAAvV,SAYA++B,EAAA/0G,UAAAg5G,sBAAA,SAAAxO,EAAAyO,EAAAjN,EAAAvB,GACA,GAAAD,EAAA9mG,KAAAy1D,UACA,MAAA73D,MAAA43G,iCAAA1O,EAAAyO,EAAAjN,EAAAvB,EAGA,IAAAgM,GAAAwC,EAAAt5G,IAAA4rF,GAAAvV,MAEA,OAAAg2B,GAAA,MAAAyK,IACAzK,EAAAyK,EAAA5G,uBAAAtkB,GAAAvV,OAEA,IAAA56C,MACAs4D,EAAA8W,EAAA9mG,KAAAmoF,WACAstB,EAAA3O,EAAArG,kBAAAzQ,GACAkF,EAAAqgB,EAAA/gG,SAAAvY,IAAA+zF,EACA,IAAAkF,GAAAugB,EAAA,CACA,GAAAC,GAAApN,EACAA,EAAAvY,kBAAAC,GACA,KACA2lB,EAAA5O,EAAArjG,MAAAssF,EACAt4D,KAAAl5B,OAAAZ,KAAA03G,sBAAAG,EAAAvgB,EAAAwgB,EAAAC,IAKA,MAHA5C,KACAr7E,IAAAl5B,OAAAu0G,EAAAnM,eAAAE,EAAAC,EAAAuB,KAEA5wE,GAaA25E,EAAA/0G,UAAAk5G,iCAAA,SAAA1O,EAAAyO,EAAAjN,EAAAvB,GACA,GAAA3/C,GAAAxpD,KACAm1G,EAAAwC,EAAAt5G,IAAA4rF,GAAAvV,MAEA,OAAAg2B,GAAA,MAAAyK,IACAzK,EAAAyK,EAAA5G,uBAAAtkB,GAAAvV,OAEA,IAAA56C,KAcA,OAbA69E,GAAA/gG,SAAA69E,iBAAA,SAAArC,EAAAkF,GACA,GAAAwgB,GAAApN,EACAA,EAAAvY,kBAAAC,GACA,KACA2lB,EAAA5O,EAAArjG,MAAAssF,GACAylB,EAAA3O,EAAArG,kBAAAzQ,EACAylB,KACA/9E,IAAAl5B,OAAA4oD,EAAAouD,iCAAAC,EAAAvgB,EAAAwgB,EAAAC,OAGA5C,IACAr7E,IAAAl5B,OAAAu0G,EAAAnM,eAAAE,EAAAC,EAAAuB,KAEA5wE,GAOA25E,EAAAgE,cAAA,EACAhE,KAuBAuE,GAAA,WACA,QAAAA,KACAh4G,KAAAi4G,UAAAr1B,GAAAC,WAQA,MANAm1B,GAAAt5G,UAAA4mG,QAAA,SAAAljG,GACA,MAAApC,MAAAi4G,UAAA11G,SAAAH,IAEA41G,EAAAt5G,UAAAw5G,eAAA,SAAA91G,EAAA+1G,GACAn4G,KAAAi4G,UAAAj4G,KAAAi4G,UAAAzlB,YAAApwF,EAAA+1G,IAEAH,KAqBAI,GAAA,WAIA,QAAAA,GAAAC,GACAr4G,KAAAq4G,OAsDA,MAhDAD,GAAA15G,UAAA0xD,SAAA,SAAAkoD,GACA,MAAAt4G,MAAAq4G,KAAA,kBAAAC,GAAAp2G,KAAA,KAEA,SAAAq1G,GAGA,MAAAA,IAAA,+BAAAA,EAAAn7E,MACA40B,EAAA,kEACA,MAGAhqD,QAAA4a,OAAA21F,MAIAa,EAAA15G,UAAA65G,uBAAA,SAAAhoD,GAGAvwD,KAAAq4G,KAAA,8BAAA9nD,IAEA6nD,EAAA15G,UAAA85G,0BAAA,SAAAjoD,GACAvwD,KAAAq4G,KAAA,iCAAA9nD,IAEA6nD,EAAA15G,UAAA+5G,sBAAA,WACA,GAAAC,GAAA,0DACA14G,KAAAq4G,KAAAv6G,KACA,gFAEA,eAAAkC,MAAAq4G,KAAA74G,QACAk5G,GACA,uJAIA,kBAAA14G,MAAAq4G,KAAA74G,QACAk5G,GACA,2JAKAA,GACA,kKAIA/+E,EAAA++E,IAEAN,KAuBAO,GAAA,WACA,QAAAA,KACA34G,KAAA44G,aAWA,MATAD,GAAAj6G,UAAAm6G,iBAAA,SAAA/6G,EAAAg7G,OACA,KAAAA,IAAgCA,EAAA,GAChC78D,EAAA4R,SAAA7tD,KAAA44G,UAAA96G,KACAkC,KAAA44G,UAAA96G,GAAA,GACAkC,KAAA44G,UAAA96G,IAAAg7G,GAEAH,EAAAj6G,UAAAL,IAAA,WACA,MAAA49C,GAAAiU,SAAAlwD,KAAA44G,YAEAD,KAkBAI,GAAA,WACA,QAAAA,MAkBA,MAhBAA,GAAAC,cAAA,SAAAtrB,GACA,GAAAurB,GAAAvrB,EAAArgF,UAIA,OAHArN,MAAAk5G,aAAAD,KACAj5G,KAAAk5G,aAAAD,GAAA,GAAAN,KAEA34G,KAAAk5G,aAAAD,IAEAF,EAAAI,oBAAA,SAAAzrB,EAAA0rB,GACA,GAAAH,GAAAvrB,EAAArgF,UAIA,OAHArN,MAAAq5G,WAAAJ,KACAj5G,KAAAq5G,WAAAJ,GAAAG,KAEAp5G,KAAAq5G,WAAAJ,IAEAF,EAAAG,gBACAH,EAAAM,cACAN,KAwBAO,GAAA,WACA,QAAAA,GAAAC,GACAv5G,KAAAu5G,cACAv5G,KAAAw5G,MAAA,KAaA,MAXAF,GAAA56G,UAAAL,IAAA,WACA,GAAAo7G,GAAAz5G,KAAAu5G,YAAAl7G,MACAq7G,EAAAz9D,EAAA5uB,MAAAosF,EAOA,OANAz5G,MAAAw5G,OACAv9D,EAAAp6C,QAAA7B,KAAAw5G,MAAA,SAAA1lC,EAAAnhE,GACA+mG,EAAA5lC,GAAA4lC,EAAA5lC,GAAAnhE,IAGA3S,KAAAw5G,MAAAC,EACAC,GAEAJ,KAqBAK,GAAA,IACAC,GAAA,IAMAC,GAAA,WAKA,QAAAA,GAAAC,EAAAC,GACA/5G,KAAA+5G,UACA/5G,KAAAg6G,kBACAh6G,KAAAi6G,eAAA,GAAAX,IAAAQ,EACA,IAAA73F,GAAA03F,IACAC,GAAAD,IAAAzmG,KAAAqwD,QACAwmB,IAAA/pF,KAAAk6G,aAAAjuG,KAAAjM,MAAAkT,KAAAC,MAAA8O,IAsBA,MApBA43F,GAAAn7G,UAAAy7G,YAAA,SAAArmC,GACA9zE,KAAAg6G,eAAAlmC,IAAA,GAEA+lC,EAAAn7G,UAAAw7G,aAAA,WACA,GAAA1wD,GAAAxpD,KACAo6G,EAAAp6G,KAAAi6G,eAAA57G,MACAg8G,KACAC,GAAA,CACAr+D,GAAAp6C,QAAAu4G,EAAA,SAAAtmC,EAAAnhE,GACAA,EAAA,GAAAspC,EAAA4R,SAAArE,EAAAwwD,eAAAlmC,KACAumC,EAAAvmC,GAAAnhE,EACA2nG,GAAA,KAGAA,GACAt6G,KAAA+5G,QAAAQ,YAAAF,GAGAtwB,GAAA/pF,KAAAk6G,aAAAjuG,KAAAjM,MAAAkT,KAAAC,MAAA,EAAAD,KAAAqwD,SAnCA,OAqCAs2C,KAgCAW,GAAA,WACA,QAAAA,KAKAx6G,KAAAy6G,eAMAz6G,KAAA06G,gBAAA,EA+EA,MA1EAF,GAAA97G,UAAAi8G,YAAA,SAAAC,GAGA,OADAC,GAAA,KACAr9G,EAAA,EAAuBA,EAAAo9G,EAAAl2G,OAA0BlH,IAAA,CACjD,GAAAu/F,GAAA6d,EAAAp9G,GACAs9G,EAAA/d,EAAAb,SACA,QAAA2e,GAAAC,EAAAtvB,OAAAqvB,EAAA3e,aACAl8F,KAAAy6G,YAAA93G,KAAAk4G,GACAA,EAAA,MAEA,OAAAA,IACAA,EAAA,GAAAE,IAAAD,IAEAD,EAAAv6G,IAAAy8F,GAEA8d,GACA76G,KAAAy6G,YAAA93G,KAAAk4G,IAYAL,EAAA97G,UAAAs8G,kBAAA,SAAA54G,EAAAw4G,GACA56G,KAAA26G,YAAAC,GACA56G,KAAAi7G,oCAAA,SAAAH,GACA,MAAAA,GAAAtvB,OAAAppF,MAYAo4G,EAAA97G,UAAAw8G,0BAAA,SAAAC,EAAAP,GACA56G,KAAA26G,YAAAC,GACA56G,KAAAi7G,oCAAA,SAAAH,GACA,MAAAA,GAAAjtD,SAAAstD,MAAAttD,SAAAitD,MAOAN,EAAA97G,UAAAu8G,oCAAA,SAAA7X,GACApjG,KAAA06G,iBAEA,QADAU,IAAA,EACA59G,EAAA,EAAuBA,EAAAwC,KAAAy6G,YAAA/1G,OAA6BlH,IAAA,CACpD,GAAA69G,GAAAr7G,KAAAy6G,YAAAj9G,EACA,IAAA69G,EAAA,CAEAjY,EADAiY,EAAAnf,YAEAl8F,KAAAy6G,YAAAj9G,GAAA89G,QACAt7G,KAAAy6G,YAAAj9G,GAAA,MAGA49G,GAAA,GAIAA,IACAp7G,KAAAy6G,gBAEAz6G,KAAA06G,mBAEAF,KAMAO,GAAA,WACA,QAAAA,GAAAxsB,GACAvuF,KAAAuuF,QAKAvuF,KAAAu7G,WA8BA,MAzBAR,GAAAr8G,UAAA4B,IAAA,SAAAy8F,GACA/8F,KAAAu7G,QAAA54G,KAAAo6F,IAKAge,EAAAr8G,UAAA48G,MAAA,WACA,OAAA99G,GAAA,EAAuBA,EAAAwC,KAAAu7G,QAAA72G,OAAyBlH,IAAA,CAChD,GAAAu/F,GAAA/8F,KAAAu7G,QAAA/9G,EACA,WAAAu/F,EAAA,CACA/8F,KAAAu7G,QAAA/9G,GAAA,IACA,IAAAg+G,GAAAze,EAAAV,gBACAzV,IACA51B,EAAA,UAAA+rC,EAAA1vF,YAEAw8E,GAAA2xB,MAOAT,EAAAr8G,UAAAw9F,QAAA,WACA,MAAAl8F,MAAAuuF,OAEAwsB,KAsBAU,GAAA,WAIA,QAAAA,GAAAC,GACA17G,KAAA07G,iBACA17G,KAAA27G,cACA1/D,EAAAkX,OAAArrD,MAAAC,QAAA2zG,MAAAh3G,OAAA,gCA6CA,MAtCA+2G,GAAA/8G,UAAA0mC,QAAA,SAAA6pD,GAEA,OADAtI,MACA36D,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C26D,EAAA36D,EAAA,GAAAlgB,UAAAkgB,EAEA,IAAAlkB,MAAAC,QAAA/H,KAAA27G,WAAA1sB,IAGA,OADA1sE,GAAAviB,KAAA27G,WAAA1sB,GAAAjqF,QACAxH,EAAA,EAA2BA,EAAA+kB,EAAA7d,OAAsBlH,IACjD+kB,EAAA/kB,GAAA+wB,SAAAxiB,MAAAwW,EAAA/kB,GAAAuC,QAAA4mF,IAIA80B,EAAA/8G,UAAAyC,GAAA,SAAA8tF,EAAA1gE,EAAAxuB,GACAC,KAAA47G,mBAAA3sB,GACAjvF,KAAA27G,WAAA1sB,GAAAjvF,KAAA27G,WAAA1sB,OACAjvF,KAAA27G,WAAA1sB,GAAAtsF,MAAyC4rB,WAAAxuB,WACzC,IAAAg9F,GAAA/8F,KAAA67G,gBAAA5sB,EACA8N,IACAxuE,EAAAxiB,MAAAhM,EAAAg9F,IAGA0e,EAAA/8G,UAAAgqD,IAAA,SAAAumC,EAAA1gE,EAAAxuB,GACAC,KAAA47G,mBAAA3sB,EAEA,QADA1sE,GAAAviB,KAAA27G,WAAA1sB,OACAzxF,EAAA,EAAuBA,EAAA+kB,EAAA7d,OAAsBlH,IAC7C,GAAA+kB,EAAA/kB,GAAA+wB,gBACAxuB,OAAAwiB,EAAA/kB,GAAAuC,SAEA,WADAwiB,GAAA3f,OAAApF,EAAA,IAKAi+G,EAAA/8G,UAAAk9G,mBAAA,SAAA3sB,GACAhzC,EAAAkX,OAAAnzD,KAAA07G,eAAArrC,KAAA,SAAAyrC,GACA,MAAAA,KAAA7sB,IACS,kBAAAA,IAETwsB,KAqBAM,GAAA,SAAAjjD,GAEA,QAAAijD,KACA,GACAC,GACAC,EAFAzyD,EAAAsP,EAAAp7D,KAAAsC,MAAA,aAAAA,IAqCA,OAlCA,mBAAAmO,eACA,KAAAA,SAAAmpB,uBACA,KAAAnpB,SAAA,QAEA8tG,EAAA,mBACAD,EAAA,cAEA,KAAA7tG,SAAA,WACA8tG,EAAA,sBACAD,EAAA,iBAEA,KAAA7tG,SAAA,UACA8tG,EAAA,qBACAD,EAAA,gBAEA,KAAA7tG,SAAA,eACA8tG,EAAA,yBACAD,EAAA,iBAOAxyD,EAAA0yD,UAAA,EACAD,GACA9tG,SAAAmpB,iBAAA2kF,EAAA,WACA,GAAAzK,IAAArjG,SAAA6tG,EACAxK,KAAAhoD,EAAA0yD,WACA1yD,EAAA0yD,SAAA1K,EACAhoD,EAAApkB,QAAA,UAAAosE,MAEa,GAEbhoD,EAaA,MApDAuJ,GAAAuG,UAAAyiD,EAAAjjD,GAyCAijD,EAAAv3B,YAAA,WACA,UAAAu3B,IAMAA,EAAAr9G,UAAAm9G,gBAAA,SAAA5sB,GAEA,MADAhzC,GAAAkX,OAAA,YAAA87B,EAAA,uBAAAA,IACAjvF,KAAAk8G,WAEAH,GACCN,IA0BDU,GAAA,SAAArjD,GAEA,QAAAqjD,KACA,GAAA3yD,GAAAsP,EAAAp7D,KAAAsC,MAAA,YAAAA,IAsBA,OArBAwpD,GAAA4yD,SAAA,EAKA,mBAAApzG,aACA,KAAAA,OAAAsuB,kBACA2kB,EAAAsa,oBACAvtD,OAAAsuB,iBAAA,oBACAkyB,EAAA4yD,UACA5yD,EAAA4yD,SAAA,EACA5yD,EAAApkB,QAAA,gBAEa,GACbp8B,OAAAsuB,iBAAA,qBACAkyB,EAAA4yD,UACA5yD,EAAA4yD,SAAA,EACA5yD,EAAApkB,QAAA,gBAEa,IAEbokB,EAmBA,MA3CAuJ,GAAAuG,UAAA6iD,EAAArjD,GA0BAqjD,EAAA33B,YAAA,WACA,UAAA23B,IAMAA,EAAAz9G,UAAAm9G,gBAAA,SAAA5sB,GAEA,MADAhzC,GAAAkX,OAAA,WAAA87B,EAAA,uBAAAA,IACAjvF,KAAAo8G,UAKAD,EAAAz9G,UAAA29G,gBAAA,WACA,MAAAr8G,MAAAo8G,SAEAD,GACCV,IAsBDa,GAAA,WAIA,QAAAA,GAAAC,GACAv8G,KAAAu8G,aACAv8G,KAAAw8G,oBACAx8G,KAAAy8G,mBAAA,EACAz8G,KAAA08G,oBAAA,EACA18G,KAAA28G,QAAA,KAiDA,MA/CAL,GAAA59G,UAAAk+G,WAAA,SAAAC,EAAAtuF,GACAvuB,KAAA08G,mBAAAG,EACA78G,KAAA28G,QAAApuF,EACAvuB,KAAA08G,mBAAA18G,KAAAy8G,qBACAz8G,KAAA28G,UACA38G,KAAA28G,QAAA,OAUAL,EAAA59G,UAAAo+G,eAAA,SAAAC,EAAA/4G,GACA,GAAAwlD,GAAAxpD,IACAA,MAAAw8G,iBAAAO,GAAA/4G,CAwBA,KAvBA,GAsBAg5G,GAAAh9G,KACAA,KAAAw8G,iBAAAx8G,KAAAy8G,qBAAA,CAEA,aAzBA,WACA,GAAAQ,GAAAD,EAAAR,iBAAAQ,EAAAP,0BACAO,GAAAR,iBAAAQ,EAAAP,mBAQA,QAAAj/G,GAAA,EAA2BA,EAAAy/G,EAAAv4G,SAAsBlH,GAPjD,SAAAA,GACAy/G,EAAAz/G,IACAqsF,GAAA,WACArgC,EAAA+yD,WAAAU,EAAAz/G,OAKAA,EAEA,IAAAw/G,EAAAP,qBAAAO,EAAAN,mBAKA,MAJAM,GAAAL,UACAK,EAAAL,UACAK,EAAAL,QAAA,MAEA,OAEAK,GAAAP,wBAMA,QAGAH,KAqBAY,GAAA,aACAC,GAAA,UAoCAC,GAAA,WASA,QAAAA,GAAAC,EAAA3vB,EAAA4vB,EAAAC,GACAv9G,KAAAq9G,SACAr9G,KAAA0tF,WACA1tF,KAAAs9G,qBACAt9G,KAAAu9G,gBACAv9G,KAAAw9G,UAAA,EACAx9G,KAAAy9G,cAAA,EACAz9G,KAAA09G,gBAAA,EACA19G,KAAA29G,KAAAx2B,EAAAk2B,GACAr9G,KAAA49G,OAAA7E,GAAAC,cAAAtrB,GACA1tF,KAAA69G,MAAA,SAAA1+F,GACA,MAAAuuE,GAAAV,cAAAd,GAAA/sE,IAsOA,MA9NAi+F,GAAA1+G,UAAAilD,KAAA,SAAAm6D,EAAAC,GACA,GAAAv0D,GAAAxpD,IACAA,MAAAg+G,cAAA,EACAh+G,KAAAi+G,cAAAF,EACA/9G,KAAAk+G,gBAAA,GAAA5B,IAAAwB,GACA99G,KAAAm+G,WAAA,EACAn+G,KAAAo+G,qBAAAp8F,WAAA,WACAwnC,EAAAm0D,KAAA,gCAEAn0D,EAAA60D,YACA70D,EAAA40D,qBAAA,MACSlrG,KAAAC,MA9CT,MAgDAw0E,EAAA,WACA,IAAAn+B,EAAA20D,UAAA,CAGA30D,EAAA80D,gBAAA,GAAAC,IAAA,WAEA,OADAn4G,MACA4lB,EAAA,EAAgCA,EAAAlgB,UAAApH,OAAuBsnB,IACvD5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEA,IAAAwyF,GAAAp4G,EAAA,GAAAq4G,EAAAr4G,EAAA,GAAAs4G,EAAAt4G,EAAA,EAEA,IADAojD,EAAAm1D,wBAAAv4G,GACAojD,EAAA80D,gBAOA,GALA90D,EAAA40D,uBACA33D,aAAA+C,EAAA40D,sBACA50D,EAAA40D,qBAAA,MAEA50D,EAAAk0D,gBAAA,EAjGA,SAkGAc,EACAh1D,EAAAh8C,GAAAixG,EACAj1D,EAAAo1D,SAAAF,MAEA,IArGA,UAqGAF,EAiBA,SAAAruG,OAAA,kCAAAquG,EAfAC,IAGAj1D,EAAA80D,gBAAAO,cAAA,EAGAr1D,EAAA00D,gBAAAtB,WAAA6B,EAAA,WACAj1D,EAAA60D,eAIA70D,EAAA60D,cAMa,WAEb,OADAj4G,MACA4lB,EAAA,EAAgCA,EAAAlgB,UAAApH,OAAuBsnB,IACvD5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEA,IAAA8yF,GAAA14G,EAAA,GAAApC,EAAAoC,EAAA,EACAojD,GAAAm1D,wBAAAv4G,GACAojD,EAAA00D,gBAAApB,eAAAgC,EAAA96G,IACa,WACbwlD,EAAA60D,aACa70D,EAAAq0D,MAGb,IAAAkB,KACAA,GAAA,UACAA,EAAA,IAAA7rG,KAAAC,MAAA,IAAAD,KAAAqwD,UACA/Z,EAAA80D,gBAAAU,2BACAD,EAAA,GAAAv1D,EAAA80D,gBAAAU,0BACAD,EAAA,EAp6RA,IAq6RAv1D,EAAA8zD,qBACAyB,EAAA,EAAAv1D,EAAA8zD,oBAEA9zD,EAAA+zD,gBACAwB,EAAA,GAAAv1D,EAAA+zD,gBAEAthE,EAAAwa,aACA,mBAAAqqB,WACAA,SAAA3qC,OACA,IAAA2qC,SAAA3qC,KAAAzzC,QAz6RA,oBA06RAq8G,EAAA,EA36RA,IA66RA,IAAAE,GAAAz1D,EAAAq0D,MAAAkB,EACAv1D,GAAAm0D,KAAA,+BAAAsB,GACAz1D,EAAA80D,gBAAAY,OAAAD,EAAA,kBAQA7B,EAAA1+G,UAAA0V,MAAA,WACApU,KAAAs+G,gBAAAa,cAAAn/G,KAAAwN,GAAAxN,KAAA4+G,UACA5+G,KAAAo/G,uBAAAp/G,KAAAwN,GAAAxN,KAAA4+G,WAKAxB,EAAAiC,WAAA,WACAjC,EAAAkC,aAAA,GAKAlC,EAAAmC,cAAA,WACAnC,EAAAoC,gBAAA,GAGApC,EAAAqC,YAAA,WAGA,MAAArC,GAAAkC,cACAlC,EAAAoC,gBACA,mBAAArxG,WACA,MAAAA,SAAAC,gBACAk7E,MACAC,MACAttC,EAAAwa,aAKA2mD,EAAA1+G,UAAAghH,sBAAA,aAKAtC,EAAA1+G,UAAAihH,UAAA,WACA3/G,KAAAm+G,WAAA,EACAn+G,KAAAs+G,kBACAt+G,KAAAs+G,gBAAA16D,QACA5jD,KAAAs+G,gBAAA,MAGAt+G,KAAA4/G,iBACAzxG,SAAAi1C,KAAA15C,YAAA1J,KAAA4/G,gBACA5/G,KAAA4/G,eAAA,MAEA5/G,KAAAo+G,uBACA33D,aAAAzmD,KAAAo+G,sBACAp+G,KAAAo+G,qBAAA,OAOAhB,EAAA1+G,UAAA2/G,UAAA,WACAr+G,KAAAm+G,YACAn+G,KAAA29G,KAAA,8BACA39G,KAAA2/G,YACA3/G,KAAAi+G,gBACAj+G,KAAAi+G,cAAAj+G,KAAA09G,gBACA19G,KAAAi+G,cAAA,QAQAb,EAAA1+G,UAAAklD,MAAA,WACA5jD,KAAAm+G,YACAn+G,KAAA29G,KAAA,6BACA39G,KAAA2/G,cAQAvC,EAAA1+G,UAAA+iF,KAAA,SAAAz9E,GACA,GAAA67G,GAAA5jE,EAAA9uC,UAAAnJ,EACAhE,MAAAw9G,WAAAqC,EAAAn7G,OACA1E,KAAA49G,OAAA/E,iBAAA,aAAAgH,EAAAn7G,OAQA,QANAo7G,GAAA7jE,EAAA+Z,aAAA6pD,GAGAp3B,EAAAF,EAAAu3B,EAzOAC,MA4OAviH,EAAA,EAAuBA,EAAAirF,EAAA/jF,OAAqBlH,IAC5CwC,KAAAs+G,gBAAA0B,eAAAhgH,KAAAg+G,cAAAv1B,EAAA/jF,OAAA+jF,EAAAjrF,IACAwC,KAAAg+G,iBAUAZ,EAAA1+G,UAAA0gH,uBAAA,SAAA5xG,EAAAyyG,GACA,IAAAhkE,EAAAwa,YAAA,CAEAz2D,KAAA4/G,eAAAzxG,SAAAC,cAAA,SACA,IAAA2wG,KACAA,GAAA,WACAA,EAAA,GAAAvxG,EACAuxG,EAAA,GAAAkB,EACAjgH,KAAA4/G,eAAAjoG,IAAA3X,KAAA69G,MAAAkB,GACA/+G,KAAA4/G,eAAAxwF,MAAA2yB,QAAA,OACA5zC,SAAAi1C,KAAA90C,YAAAtO,KAAA4/G,kBAOAxC,EAAA1+G,UAAAigH,wBAAA,SAAAv4G,GAEA,GAAAq3G,GAAAxhE,EAAA9uC,UAAA/G,GAAA1B,MACA1E,MAAAy9G,iBACAz9G,KAAA49G,OAAA/E,iBAAA,iBAAA4E,IAEAL,KAMAmB,GAAA,WAOA,QAAAA,GAAA2B,EAAAC,EAAApC,EAAAF,GAoBA,GAnBA79G,KAAA+9G,eACA/9G,KAAA69G,QAMA79G,KAAAogH,oBAAA,GAAAvf,IAEA7gG,KAAAqgH,eAMArgH,KAAAsgH,cAAAptG,KAAAC,MAAA,IAAAD,KAAAqwD,UAGAvjE,KAAA6+G,cAAA,EACA5iE,EAAAwa,YAkCAz2D,KAAAkgH,YACAlgH,KAAAmgH,kBAnCA,CAKAngH,KAAAg/G,yBAAAz4B,IACAv9E,OAAAk0G,GAAAl9G,KAAAg/G,0BAAAkB,EACAl3G,OAAAm0G,GAAAn9G,KAAAg/G,0BAAAmB,EAEAngH,KAAAugH,SAAAhC,EAAAiC,eAEA,IAAA98C,GAAA,EAGA,IAAA1jE,KAAAugH,SAAA5oG,KACA,gBAAA3X,KAAAugH,SAAA5oG,IAAA0xE,OAAA,gBAAA3kF,QAAA,CAEAg/D,EAAA,4BADAv1D,SAAAq+E,OACA,eAEA,GAAAi0B,GAAA,eAAA/8C,EAAA,gBACA,KACA1jE,KAAAugH,SAAAv9C,IAAArf,OACA3jD,KAAAugH,SAAAv9C,IAAA+R,MAAA0rC,GACAzgH,KAAAugH,SAAAv9C,IAAApf,QAEA,MAAAvyC,GACA2/C,EAAA,2BACA3/C,EAAAy3B,OACAkoB,EAAA3/C,EAAAy3B,OAEAkoB,EAAA3/C,KAsPA,MAxOAktG,GAAAiC,cAAA,WACA,GAAA3rC,GAAA1mE,SAAAC,cAAA,SAGA,IAFAymE,EAAAzlD,MAAA2yB,QAAA,QAEA5zC,SAAAi1C,KAuBA,wGAtBAj1C,UAAAi1C,KAAA90C,YAAAumE,EACA,KAIAA,EAAAC,cAAA3mE,UAGA6iD,EAAA,iCAGA,MAAA3/C,GACA,GAAAm7E,GAAAr+E,SAAAq+E,MACA3X,GAAAl9D,IACA,gEACA60E,EACA,2BAkBA,MATA3X,GAAA6rC,gBACA7rC,EAAA7R,IAAA6R,EAAA6rC,gBAEA7rC,EAAAC,cACAD,EAAA7R,IAAA6R,EAAAC,cAAA3mE,SAEA0mE,EAAA1mE,WACA0mE,EAAA7R,IAAA6R,EAAA1mE,UAEA0mE,GAKA0pC,EAAA7/G,UAAAklD,MAAA,WACA,GAAA4F,GAAAxpD,IAeA,IAbAA,KAAA2gH,OAAA,EACA3gH,KAAAugH,WAIAvgH,KAAAugH,SAAAv9C,IAAA5f,KAAA/M,UAAA,GACAr0B,WAAA,WACA,OAAAwnC,EAAA+2D,WACApyG,SAAAi1C,KAAA15C,YAAA8/C,EAAA+2D,UACA/2D,EAAA+2D,SAAA,OAEartG,KAAAC,MAAA,KAEb8oC,EAAAwa,aAAAz2D,KAAA4gH,KAAA,CACA,GAAA7B,KACAA,GAAA,YACAA,EAAA,GAAA/+G,KAAA4gH,KACA7B,EAAA,GAAA/+G,KAAA6gH,IACA,IAAAC,GAAA9gH,KAAA69G,MAAAkB,EACAR,GAAAwC,gBAAAD,GAGA,GAAA/C,GAAA/9G,KAAA+9G,YACAA,KACA/9G,KAAA+9G,aAAA,KACAA,MAQAQ,EAAA7/G,UAAAygH,cAAA,SAAA3xG,EAAAyyG,GAKA,IAJAjgH,KAAA4gH,KAAApzG,EACAxN,KAAA6gH,KAAAZ,EACAjgH,KAAA2gH,OAAA,EAEA3gH,KAAAghH,kBASAzC,EAAA7/G,UAAAsiH,YAAA,WAIA,GAAAhhH,KAAA2gH,OACA3gH,KAAA6+G,cACA7+G,KAAAogH,oBAAAvtC,SAAA7yE,KAAAqgH,YAAA37G,OAAA,QAEA1E,KAAAsgH,eACA,IAAAvB,KACAA,GAAA,GAAA/+G,KAAA4gH,KACA7B,EAAA,GAAA/+G,KAAA6gH,KACA9B,EAAA,IAAA/+G,KAAAsgH,aAKA,KAJA,GAAAQ,GAAA9gH,KAAA69G,MAAAkB,GAEAkC,EAAA,GACAzjH,EAAA,EACAwC,KAAAqgH,YAAA37G,OAAA,IAGA,KADA1E,KAAAqgH,YAAA,GACAxiH,EAAA6G,OA/cA,GA+cAu8G,EAAAv8G,QAhdA,MAweA,KArBA,IAAAw8G,GAAAlhH,KAAAqgH,YAAA9/F,OACA0gG,GACAA,EACA,OAEAzjH,EACA,IACA0jH,EAAAC,IACA,MAEA3jH,EACA,IACA0jH,EAAAE,GACA,KAEA5jH,EACA,IACA0jH,EAAArjH,EACAL,IAQA,MAFAsjH,IAAAG,EACAjhH,KAAAqhH,gBAAAP,EAAA9gH,KAAAsgH,gBACA,EAGA,UASA/B,EAAA7/G,UAAAshH,eAAA,SAAAsB,EAAAC,EAAAv9G,GAEAhE,KAAAqgH,YAAA19G,MAA+Bw+G,IAAAG,EAAAF,GAAAG,EAAA1jH,EAAAmG,IAG/BhE,KAAA2gH,OACA3gH,KAAAghH,eASAzC,EAAA7/G,UAAA2iH,gBAAA,SAAA3hC,EAAA8hC,GACA,GAAAh4D,GAAAxpD,IAEAA,MAAAogH,oBAAA9/G,IAAAkhH,EAAA,EACA,IAAAC,GAAA,WACAj4D,EAAA42D,oBAAA7xG,OAAAizG,GACAh4D,EAAAw3D,eAIAU,EAAA1/F,WAAAy/F,EAAAvuG,KAAAC,MAxgBA,OAygBAwuG,EAAA,WAEAl7D,aAAAi7D,GAEAD,IAEAzhH,MAAAk/G,OAAAx/B,EAAAiiC,IAOApD,EAAA7/G,UAAAwgH,OAAA,SAAAx/B,EAAAkiC,GACA,GAAAp4D,GAAAxpD,IACAi8C,GAAAwa,YACAz2D,KAAA6hH,eAAAniC,EAAAkiC,GAGA5/F,WAAA,WACA,IAEA,IAAAwnC,EAAAq1D,aACA,MACA,IAAAiD,GAAAt4D,EAAA+2D,SAAAv9C,IAAA50D,cAAA,SACA0zG,GAAAxiH,KAAA,kBACAwiH,EAAA3vD,OAAA,EACA2vD,EAAAnqG,IAAA+nE,EACAoiC,EAAAvkC,OAAAukC,EAAAn+C,mBAAA,WACA,GAAAo+C,GAAAD,EAAAl6B,UACAm6B,IAAA,WAAAA,GAAA,aAAAA,IACAD,EAAAvkC,OAAAukC,EAAAn+C,mBAAA,KACAm+C,EAAAlzG,YACAkzG,EAAAlzG,WAAAlF,YAAAo4G,GAEAF,MAGAE,EAAAtkC,QAAA,WACAxsB,EAAA,oCAAA0uB,GACAl2B,EAAAq1D,cAAA,EACAr1D,EAAA5F,SAEA4F,EAAA+2D,SAAAv9C,IAAA5f,KAAA90C,YAAAwzG,GAEA,MAAAzwG,MAGa6B,KAAAC,MAAA,KAGborG,KAoBAyD,GAAA,IACA,oBAAAC,cACAD,GAAAC,aAEA,mBAAAC,aACAF,GAAAE,UAOA,IAAAC,IAAA,WAQA,QAAAA,GAAA9E,EAAA3vB,EAAA4vB,EAAAC,GACAv9G,KAAAq9G,SACAr9G,KAAAoiH,eAAA,KACApiH,KAAAqiH,OAAA,KACAriH,KAAAsiH,YAAA,EACAtiH,KAAAw9G,UAAA,EACAx9G,KAAAy9G,cAAA,EACAz9G,KAAA29G,KAAAx2B,EAAAnnF,KAAAq9G,QACAr9G,KAAA49G,OAAA7E,GAAAC,cAAAtrB,GACA1tF,KAAAitF,QAAAk1B,EAAAI,eAAA70B,EAAA4vB,EAAAC,GA6RA,MAnRA4E,GAAAI,eAAA,SAAA70B,EAAA4vB,EAAAC,GACA,GAAAwB,KAcA,OAbAA,GAAA,EA56SA,KA66SA9iE,EAAAwa,aACA,mBAAAqqB,WACAA,SAAA3qC,OACA,IAAA2qC,SAAA3qC,KAAAzzC,QA36SA,oBA46SAq8G,EAAA,EA76SA,KA+6SAzB,IACAyB,EAAA,EAAAzB,GAEAC,IACAwB,EAAA,GAAAxB,GAEA7vB,EAAAV,cAl7SA,YAk7SA+xB,IAOAoD,EAAAzjH,UAAAilD,KAAA,SAAAm6D,EAAAC,GACA,GAAAv0D,GAAAxpD,IACAA,MAAA+9G,eACA/9G,KAAA89G,YACA99G,KAAA29G,KAAA,2BAAA39G,KAAAitF,SACAjtF,KAAA09G,gBAAA,EAEAv3B,EAAAjhF,IAAA,gCACA,KACA,GAAA+2C,EAAAwa,YAAA,CACA,GAAA+rD,GAAAvmE,EAAA+W,UAAAE,WAAA,mBAEA1zD,GACAy9E,SACAwlC,aAAA,cAAAjxD,EAAApC,YAAA,IAAAhH,EAAA3Q,SAAA,IAAA+qE,IAIAzqE,EAAA95C,QAAA0oE,SAAA,eACA9/C,EAAA,GAAA7mB,KAAAitF,QAAAvqF,QAAA,UACAq1C,EAAA,aAAAA,EAAA,YACAA,EAAA,YAAAA,EAAA,UACAlxB,KACArnB,EAAA,OAAwCkjH,OAAA77F,IAExC7mB,KAAA2iH,OAAA,GAAAX,IAAAhiH,KAAAitF,WAAAztF,OAGAQ,MAAA2iH,OAAA,GAAAX,IAAAhiH,KAAAitF,SAGA,MAAA57E,GACArR,KAAA29G,KAAA,iCACA,IAAApG,GAAAlmG,EAAAgiD,SAAAhiD,EAAArN,IAKA,OAJAuzG,IACAv3G,KAAA29G,KAAApG,OAEAv3G,MAAAq+G,YAGAr+G,KAAA2iH,OAAAC,OAAA,WACAp5D,EAAAm0D,KAAA,wBACAn0D,EAAAk0D,gBAAA,GAEA19G,KAAA2iH,OAAAE,QAAA,WACAr5D,EAAAm0D,KAAA,0CACAn0D,EAAAm5D,OAAA,KACAn5D,EAAA60D,aAEAr+G,KAAA2iH,OAAAtpE,UAAA,SAAA17C,GACA6rD,EAAAs5D,oBAAAnlH,IAEAqC,KAAA2iH,OAAAnlC,QAAA,SAAAnsE,GACAm4C,EAAAm0D,KAAA,wCACA,IAAApG,GAAAlmG,EAAAgiD,SAAAhiD,EAAArN,IACAuzG,IACA/tD,EAAAm0D,KAAApG,GAEA/tD,EAAA60D,cAMA8D,EAAAzjH,UAAA0V,MAAA,aACA+tG,EAAA5C,cAAA,WACA4C,EAAA3C,gBAAA,GAEA2C,EAAA1C,YAAA,WACA,GAAAsD,IAAA,CACA,uBAAAzyG,sBAAAE,UAAA,CACA,GAAAwyG,GAAA,iCACAC,EAAA3yG,UAAAE,UAAA4L,MAAA4mG,EACAC,MAAAv+G,OAAA,GACAsO,WAAAiwG,EAAA,UACAF,GAAA,GAIA,OAAAA,GACA,OAAAf,KACAG,EAAA3C,gBAMA2C,EAAAe,iBAAA,WAGA,MAAA/8B,GAAAJ,oBACA,IAAAI,EAAA9nF,IAAA,+BAEA8jH,EAAAzjH,UAAAghH,sBAAA,WACAv5B,EAAA53E,OAAA,+BAEA4zG,EAAAzjH,UAAAykH,aAAA,SAAAn/G,GAEA,GADAhE,KAAAqiH,OAAA1/G,KAAAqB,GACAhE,KAAAqiH,OAAA39G,QAAA1E,KAAAsiH,YAAA,CACA,GAAAc,GAAApjH,KAAAqiH,OAAAv1G,KAAA,GACA9M,MAAAqiH,OAAA,IACA,IAAAgB,GAAApnE,EAAA8V,SAAAqxD,EAEApjH,MAAA89G,UAAAuF,KAOAlB,EAAAzjH,UAAA4kH,qBAAA,SAAAC,GACAvjH,KAAAsiH,YAAAiB,EACAvjH,KAAAqiH,WAQAF,EAAAzjH,UAAA8kH,mBAAA,SAAAx/G,GAIA,GAHAi4C,EAAAkX,OAAA,OAAAnzD,KAAAqiH,OAAA,kCAGAr+G,EAAAU,QAAA,GACA,GAAA6+G,GAAA76G,OAAA1E,EACA,KAAAsP,MAAAiwG,GAEA,MADAvjH,MAAAsjH,qBAAAC,GACA,KAIA,MADAvjH,MAAAsjH,qBAAA,GACAt/G,GAMAm+G,EAAAzjH,UAAAokH,oBAAA,SAAAW,GACA,UAAAzjH,KAAA2iH,OAAA,CAEA,GAAA3+G,GAAAy/G,EAAA,IAIA,IAHAzjH,KAAAy9G,eAAAz5G,EAAAU,OACA1E,KAAA49G,OAAA/E,iBAAA,iBAAA70G,EAAAU,QACA1E,KAAA0jH,iBACA,OAAA1jH,KAAAqiH,OAEAriH,KAAAmjH,aAAAn/G,OAEA,CAEA,GAAA2/G,GAAA3jH,KAAAwjH,mBAAAx/G,EACA,QAAA2/G,GACA3jH,KAAAmjH,aAAAQ,MAQAxB,EAAAzjH,UAAA+iF,KAAA,SAAAz9E,GACAhE,KAAA0jH,gBACA,IAAA7D,GAAA5jE,EAAA9uC,UAAAnJ,EACAhE,MAAAw9G,WAAAqC,EAAAn7G,OACA1E,KAAA49G,OAAA/E,iBAAA,aAAAgH,EAAAn7G,OAGA,IAAA+jF,GAAAF,EAAAs3B,EAvOA,MAyOAp3B,GAAA/jF,OAAA,GACA1E,KAAA4jH,YAAA3wG,OAAAw1E,EAAA/jF,QAGA,QAAAlH,GAAA,EAAuBA,EAAAirF,EAAA/jF,OAAqBlH,IAC5CwC,KAAA4jH,YAAAn7B,EAAAjrF,KAGA2kH,EAAAzjH,UAAAihH,UAAA,WACA3/G,KAAAm+G,WAAA,EACAn+G,KAAAoiH,iBACAz7D,cAAA3mD,KAAAoiH,gBACApiH,KAAAoiH,eAAA,MAEApiH,KAAA2iH,SACA3iH,KAAA2iH,OAAA/+D,QACA5jD,KAAA2iH,OAAA,OAGAR,EAAAzjH,UAAA2/G,UAAA,WACAr+G,KAAAm+G,YACAn+G,KAAA29G,KAAA,+BACA39G,KAAA2/G,YAEA3/G,KAAA+9G,eACA/9G,KAAA+9G,aAAA/9G,KAAA09G,gBACA19G,KAAA+9G,aAAA,QAQAoE,EAAAzjH,UAAAklD,MAAA,WACA5jD,KAAAm+G,YACAn+G,KAAA29G,KAAA,6BACA39G,KAAA2/G,cAOAwC,EAAAzjH,UAAAglH,eAAA,WACA,GAAAl6D,GAAAxpD,IACA2mD,eAAA3mD,KAAAoiH,gBACApiH,KAAAoiH,eAAA17D,YAAA,WAEA8C,EAAAm5D,QACAn5D,EAAAo6D,YAAA,KAEAp6D,EAAAk6D,kBACSxwG,KAAAC,MA7RT,QAqSAgvG,EAAAzjH,UAAAklH,YAAA,SAAA9xG,GAIA,IACA9R,KAAA2iH,OAAAlhC,KAAA3vE,GAEA,MAAAT,GACArR,KAAA29G,KAAA,0CAAAtsG,EAAAgiD,SAAAhiD,EAAArN,KAAA,uBACAge,WAAAhiB,KAAAq+G,UAAApyG,KAAAjM,MAAA,KAOAmiH,EAAA0B,6BAAA,EAKA1B,EAAA2B,eAAA,IACA3B,KA0BA4B,GAAA,WAIA,QAAAA,GAAAr2B,GACA1tF,KAAAgkH,gBAAAt2B,GA6DA,MA3DAzvF,QAAAC,eAAA6lH,EAAA,kBAKA1lH,IAAA,WACA,OAAA++G,GAAA+E,KAEA/jH,YAAA,EACAD,cAAA,IAMA4lH,EAAArlH,UAAAslH,gBAAA,SAAAt2B,GACA,GAAAu2B,GAAA9B,OAAA,cACA+B,EAAAD,IAAA9B,GAAAe,kBAMA,IALAx1B,EAAApB,gBACA23B,GACAtqF,EAAA,mFACAuqF,GAAA,GAEAA,EACAlkH,KAAAmkH,aAAAhC,QAEA,CACA,GAAAiC,GAAApkH,KAAAmkH,cACAz7B,GAAAq7B,EAAAM,eAAA,SAAA7mH,EAAA8mH,GACAA,KAAA,eACAF,EAAAzhH,KAAA2hH,OASAP,EAAArlH,UAAA6lH,iBAAA,WACA,GAAAvkH,KAAAmkH,YAAAz/G,OAAA,EACA,MAAA1E,MAAAmkH,YAAA,EAGA,UAAAh0G,OAAA,4BAOA4zG,EAAArlH,UAAA8lH,iBAAA,WACA,MAAAxkH,MAAAmkH,YAAAz/G,OAAA,EACA1E,KAAAmkH,YAAA,GAGA,MAGAJ,KA4CAU,GAAA,WAUA,QAAAA,GAAAj3G,EAAAk3G,EAAAnI,EAAAoI,EAAA1G,EAAA2G,EAAArH,GACAv9G,KAAAwN,KACAxN,KAAA0kH,YACA1kH,KAAAu8G,aACAv8G,KAAA2kH,WACA3kH,KAAAi+G,gBACAj+G,KAAA4kH,UACA5kH,KAAAu9G,gBACAv9G,KAAA6kH,gBAAA,EACA7kH,KAAA8kH,uBACA9kH,KAAA+kH,OAAA,EACA/kH,KAAA29G,KAAAx2B,EAAA,KAAAnnF,KAAAwN,GAAA,KACAxN,KAAAglH,kBAAA,GAAAjB,IAAAW,GACA1kH,KAAA29G,KAAA,sBACA39G,KAAAilH,SAiaA,MA3ZAR,GAAA/lH,UAAAumH,OAAA,WACA,GAAAz7D,GAAAxpD,KACAklH,EAAAllH,KAAAglH,kBAAAT,kBACAvkH,MAAAmlH,MAAA,GAAAD,GAAAllH,KAAAolH,mBAAAplH,KAAA0kH,cAAApyG,GAAAtS,KAAAu9G,eAGAv9G,KAAAqlH,0BAAAH,EAAA,+BACA,IAAAI,GAAAtlH,KAAAulH,cAAAvlH,KAAAmlH,OACAK,EAAAxlH,KAAAylH,iBAAAzlH,KAAAmlH,MACAnlH,MAAA0lH,IAAA1lH,KAAAmlH,MACAnlH,KAAA2lH,IAAA3lH,KAAAmlH,MACAnlH,KAAA4lH,eAAA,KACA5lH,KAAA6lH,YAAA,EAOA7jG,WAAA,WAEAwnC,EAAA27D,OAAA37D,EAAA27D,MAAAxhE,KAAA2hE,EAAAE,IACStyG,KAAAC,MAAA,GACT,IAAA2yG,GAAAZ,EAAA,iBACAY,GAAA,IACA9lH,KAAA+lH,gBAAAh8B,GAAA,WACAvgC,EAAAu8D,gBAAA,KACAv8D,EAAAq8D,aACAr8D,EAAA27D,OACA37D,EAAA27D,MAAA1H,cA5EA,QA6EAj0D,EAAAm0D,KAAA,wDACAn0D,EAAA27D,MAAA1H,cACA,wCACAj0D,EAAAq8D,YAAA,EACAr8D,EAAA27D,MAAAzF,yBAEAl2D,EAAA27D,OACA37D,EAAA27D,MAAA3H,UArFA,MAsFAh0D,EAAAm0D,KAAA,oDACAn0D,EAAA27D,MAAA3H,UACA,uCAKAh0D,EAAAm0D,KAAA,+CACAn0D,EAAA5F,WAGa1wC,KAAAC,MAAA2yG,MAObrB,EAAA/lH,UAAA0mH,iBAAA,WACA,WAAAplH,KAAAwN,GAAA,IAAAxN,KAAA6kH,mBAEAJ,EAAA/lH,UAAA+mH,iBAAA,SAAAP,GACA,GAAA17D,GAAAxpD,IACA,iBAAAgmH,GACAd,IAAA17D,EAAA27D,MACA37D,EAAAy8D,kBAAAD,GAEAd,IAAA17D,EAAAo8D,gBACAp8D,EAAAm0D,KAAA,8BACAn0D,EAAA08D,8BAGA18D,EAAAm0D,KAAA,+BAIA8G,EAAA/lH,UAAA6mH,cAAA,SAAAL,GACA,GAAA17D,GAAAxpD,IACA,iBAAAqzD,GACA,GAAA7J,EAAAu7D,SACAG,IAAA17D,EAAAm8D,IACAn8D,EAAA28D,0BAAA9yD,GAEA6xD,IAAA17D,EAAAo8D,eACAp8D,EAAA48D,4BAAA/yD,GAGA7J,EAAAm0D,KAAA,gCASA8G,EAAA/lH,UAAA2nH,YAAA,SAAAC,GAEA,GAAAxtF,IAAmB6gC,EAAA,IAAA97D,EAAAyoH,EACnBtmH,MAAAumH,UAAAztF,IAEA2rF,EAAA/lH,UAAA8nH,qBAAA,WACAxmH,KAAA0lH,MAAA1lH,KAAA4lH,gBAAA5lH,KAAA2lH,MAAA3lH,KAAA4lH,iBACA5lH,KAAA29G,KAAA,2CAAA39G,KAAA4lH,eAAAvI,QACAr9G,KAAAmlH,MAAAnlH,KAAA4lH,eACA5lH,KAAA4lH,eAAA,OAIAnB,EAAA/lH,UAAA+nH,oBAAA,SAAAC,GACA,GA1JA,KA0JAA,GAAA,CACA,GAAAC,GAAAD,EAAA,CArJA,OAsJAC,EACA3mH,KAAA4mH,6BA1JA,MA4JAD,GAEA3mH,KAAA29G,KAAA,wCACA39G,KAAA4lH,eAAAhiE,QAEA5jD,KAAA0lH,MAAA1lH,KAAA4lH,gBACA5lH,KAAA2lH,MAAA3lH,KAAA4lH,gBACA5lH,KAAA4jD,SAjKA,MAoKA+iE,IACA3mH,KAAA29G,KAAA,0BACA39G,KAAA6mH,8BACA7mH,KAAA4mH,gCAIAnC,EAAA/lH,UAAA0nH,4BAAA,SAAAU,GACA,GAAAC,GAAA1+B,EAAA,IAAAy+B,GACA9iH,EAAAqkF,EAAA,IAAAy+B,EACA,SAAAC,EACA/mH,KAAAymH,oBAAAziH,OAEA,SAAA+iH,EAKA,SAAA52G,OAAA,2BAAA42G,EAHA/mH,MAAA8kH,oBAAAniH,KAAAqB,KAMAygH,EAAA/lH,UAAAkoH,2BAAA,WACA5mH,KAAA6mH,6BAAA,GACA7mH,KAAA29G,KAAA,oCACA39G,KAAA6lH,YAAA,EACA7lH,KAAA4lH,eAAAlG,wBACA1/G,KAAAgnH,wBAIAhnH,KAAA29G,KAAA,8BACA39G,KAAA4lH,eAAAnkC,MAAsC9nB,EAAA,IAAA97D,GAAa87D,EAhMnD,IAgMmD97D,UAGnD4mH,EAAA/lH,UAAAsoH,oBAAA,WAEAhnH,KAAA4lH,eAAAxxG,QAEApU,KAAA29G,KAAA,mCACA39G,KAAA4lH,eAAAnkC,MAAkC9nB,EAAA,IAAA97D,GAAa87D,EA1M/C,IA0M+C97D,QAG/CmC,KAAA29G,KAAA,kCACA39G,KAAAmlH,MAAA1jC,MAAyB9nB,EAAA,IAAA97D,GAAa87D,EA7MtC,IA6MsC97D,QACtCmC,KAAA0lH,IAAA1lH,KAAA4lH,eACA5lH,KAAAwmH,wBAEA/B,EAAA/lH,UAAAynH,0BAAA,SAAAW,GAEA,GAAAC,GAAA1+B,EAAA,IAAAy+B,GACA9iH,EAAAqkF,EAAA,IAAAy+B,EACA,MAAAC,EACA/mH,KAAAinH,WAAAjjH,GAEA,KAAA+iH,GACA/mH,KAAAknH,eAAAljH,IAGAygH,EAAA/lH,UAAAwoH,eAAA,SAAA7zD,GACArzD,KAAAmnH,qBAEAnnH,KAAAu8G,WAAAlpD,IAEAoxD,EAAA/lH,UAAAyoH,mBAAA,WACAnnH,KAAA6lH,cACA7lH,KAAAqlH,2BACA,IACArlH,KAAA29G,KAAA,kCACA39G,KAAA6lH,YAAA,EACA7lH,KAAAmlH,MAAAzF,0BAIA+E,EAAA/lH,UAAAuoH,WAAA,SAAAP,GACA,GAAAC,GAAAt+B,EAnPA,IAmPAq+B,EACA,IAnPA,KAmPAA,GAAA,CACA,GAAApgH,GAAAogH,EAAA,CACA,IA7OA,MA6OAC,EACA3mH,KAAAonH,aAAA9gH,OAEA,IAlPA,MAkPAqgH,EAAA,CACA3mH,KAAA29G,KAAA,qCACA39G,KAAA2lH,IAAA3lH,KAAA4lH,cACA,QAAApoH,GAAA,EAA+BA,EAAAwC,KAAA8kH,oBAAApgH,SAAqClH,EACpEwC,KAAAknH,eAAAlnH,KAAA8kH,oBAAAtnH,GAEAwC,MAAA8kH,uBACA9kH,KAAAwmH,2BA9PA,MAgQAG,EAGA3mH,KAAAqnH,sBAAA/gH,GAlQA,MAoQAqgH,EAEA3mH,KAAAsnH,SAAAhhH,GArQA,MAuQAqgH,EACAvpG,EAAA,iBAAA9W,GAvQA,MAyQAqgH,GACA3mH,KAAA29G,KAAA,wBACA39G,KAAAmnH,qBACAnnH,KAAAunH,iCAGAnqG,EAAA,mCAAAupG,KASAlC,EAAA/lH,UAAA0oH,aAAA,SAAAI,GACA,GAAAC,GAAAD,EAAApG,GACAz4G,EAAA6+G,EAAA38G,EACAuhF,EAAAo7B,EAAA7mH,CACAX,MAAA0nH,UAAAF,EAAA3oH,EACAmB,KAAA0kH,UAAA53B,WAAAV,GAEA,GAAApsF,KAAA+kH,SACA/kH,KAAAmlH,MAAA/wG,QACApU,KAAA2nH,yBAAA3nH,KAAAmlH,MAAAsC,GA3lUA,MA4lUA9+G,GACAgxB,EAAA,sCAGA35B,KAAA4nH,qBAGAnD,EAAA/lH,UAAAkpH,iBAAA,WACA,GAAA1C,GAAAllH,KAAAglH,kBAAAR,kBACAU,IACAllH,KAAA6nH,cAAA3C,IAGAT,EAAA/lH,UAAAmpH,cAAA,SAAA3C,GACA,GAAA17D,GAAAxpD,IACAA,MAAA4lH,eAAA,GAAAV,GAAAllH,KAAAolH,mBAAAplH,KAAA0kH,UAAA1kH,KAAA0nH,WAGA1nH,KAAA6mH,4BACA3B,EAAA,+BACA,IAAApH,GAAA99G,KAAAulH,cAAAvlH,KAAA4lH,gBACA7H,EAAA/9G,KAAAylH,iBAAAzlH,KAAA4lH,eACA5lH,MAAA4lH,eAAAjiE,KAAAm6D,EAAAC,GAEAh0B,GAAA,WACAvgC,EAAAo8D,iBACAp8D,EAAAm0D,KAAA,gCACAn0D,EAAAo8D,eAAAhiE,UAES1wC,KAAAC,MA7UT,OA+UAsxG,EAAA/lH,UAAA4oH,SAAA,SAAAl7B,GACApsF,KAAA29G,KAAA,qCAAAvxB,GACApsF,KAAA0kH,UAAA53B,WAAAV,GAGA,IAAApsF,KAAA+kH,OACA/kH,KAAA4jD,SAIA5jD,KAAA8nH,oBACA9nH,KAAAilH,WAGAR,EAAA/lH,UAAAipH,yBAAA,SAAAzC,EAAAuC,GACA,GAAAj+D,GAAAxpD,IACAA,MAAA29G,KAAA,oCACA39G,KAAAmlH,MAAAD,EACAllH,KAAA+kH,OAAA,EACA/kH,KAAA2kH,WACA3kH,KAAA2kH,SAAA8C,EAAAznH,KAAA0nH,WACA1nH,KAAA2kH,SAAA,MAIA,IAAA3kH,KAAAqlH,2BACArlH,KAAA29G,KAAA,kCACA39G,KAAA6lH,YAAA,GAGA97B,GAAA,WACAvgC,EAAA+9D,iCACar0G,KAAAC,MA5Wb,OA+WAsxG,EAAA/lH,UAAA6oH,8BAAA,WAEAvnH,KAAA6lH,YAAA,IAAA7lH,KAAA+kH,SACA/kH,KAAA29G,KAAA,4BACA39G,KAAAumH,WAA4B5sD,EAAA,IAAA97D,GAAa87D,EArWzC,IAqWyC97D,UAGzC4mH,EAAA/lH,UAAAwnH,2BAAA,WACA,GAAAhB,GAAAllH,KAAA4lH,cACA5lH,MAAA4lH,eAAA,KACA5lH,KAAA0lH,MAAAR,GAAAllH,KAAA2lH,MAAAT,GAEAllH,KAAA4jD,SASA6gE,EAAA/lH,UAAAunH,kBAAA,SAAAD,GACAhmH,KAAAmlH,MAAA,KAGAa,GAAA,IAAAhmH,KAAA+kH,OASA,IAAA/kH,KAAA+kH,QACA/kH,KAAA29G,KAAA,8BATA39G,KAAA29G,KAAA,+BAEA39G,KAAA0kH,UAAA93B,oBACAzG,EAAA53E,OAAA,QAAAvO,KAAA0kH,UAAAt4B,MAEApsF,KAAA0kH,UAAAj4B,aAAAzsF,KAAA0kH,UAAAt4B,OAMApsF,KAAA4jD,SAOA6gE,EAAA/lH,UAAA2oH,sBAAA,SAAAxlG,GACA7hB,KAAA29G,KAAA,0DACA39G,KAAA4kH,UACA5kH,KAAA4kH,QAAA/iG,GACA7hB,KAAA4kH,QAAA,MAIA5kH,KAAAi+G,cAAA,KACAj+G,KAAA4jD,SAEA6gE,EAAA/lH,UAAA6nH,UAAA,SAAAviH,GACA,OAAAhE,KAAA+kH,OACA,kCAGA/kH,MAAA0lH,IAAAjkC,KAAAz9E,IAMAygH,EAAA/lH,UAAAklD,MAAA,WACA,IAAA5jD,KAAA+kH,SACA/kH,KAAA29G,KAAA,gCACA39G,KAAA+kH,OAAA,EACA/kH,KAAA8nH,oBACA9nH,KAAAi+G,gBACAj+G,KAAAi+G,gBACAj+G,KAAAi+G,cAAA,QAQAwG,EAAA/lH,UAAAopH,kBAAA,WACA9nH,KAAA29G,KAAA,iCACA39G,KAAAmlH,QACAnlH,KAAAmlH,MAAAvhE,QACA5jD,KAAAmlH,MAAA,MAEAnlH,KAAA4lH,iBACA5lH,KAAA4lH,eAAAhiE,QACA5jD,KAAA4lH,eAAA,MAEA5lH,KAAA+lH,kBACAt/D,aAAAzmD,KAAA+lH,iBACA/lH,KAAA+lH,gBAAA,OAGAtB,KAwBAsD,GAAA,WACA,QAAAA,MA0CA,MAlCAA,GAAArpH,UAAAspH,IAAA,SAAAnmC,EAAA79E,EAAA4rF,EAAA/vE,KAOAkoG,EAAArpH,UAAAirG,MAAA,SAAA9nB,EAAA79E,EAAA4rF,EAAA/vE,KAKAkoG,EAAArpH,UAAAupH,iBAAA,SAAApxD,KAMAkxD,EAAArpH,UAAAwpH,gBAAA,SAAArmC,EAAA79E,EAAA4rF,KAMAm4B,EAAArpH,UAAAypH,kBAAA,SAAAtmC,EAAA79E,EAAA4rF,KAKAm4B,EAAArpH,UAAAmxF,mBAAA,SAAAhO,EAAA+N,KAIAm4B,EAAArpH,UAAA67G,YAAA,SAAAH,KACA2N,KAkBAK,GAAA,IACAC,GAAA,IAaAC,GAAA,SAAAxvD,GAWA,QAAAwvD,GAAA5D,EAAA6D,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAn/D,GAAAsP,EAAAp7D,KAAAsC,WAwCA,IAvCAwpD,EAAAk7D,YACAl7D,EAAA++D,gBACA/+D,EAAAg/D,mBACAh/D,EAAAi/D,sBACAj/D,EAAAk/D,qBACAl/D,EAAAm/D,gBAEAn/D,EAAAh8C,GAAA86G,EAAAM,8BACAp/D,EAAAm0D,KAAAx2B,EAAA,KAAA39B,EAAAh8C,GAAA,KAEAg8C,EAAAq/D,qBACAr/D,EAAAs/D,YACAt/D,EAAAu/D,oBACAv/D,EAAAw/D,qBAAA,EACAx/D,EAAAy/D,6BACAz/D,EAAA0/D,YAAA,EACA1/D,EAAA2/D,gBAAAf,GACA5+D,EAAA4/D,mBAAAf,GACA7+D,EAAA6/D,uBAAA,KACA7/D,EAAA+zD,cAAA,KAEA/zD,EAAA8/D,0BAAA,KAEA9/D,EAAA0yD,UAAA,EAEA1yD,EAAA+/D,kBACA//D,EAAAggE,eAAA,EAKAhgE,EAAAigE,UAAA,KAEAjgE,EAAAkgE,WAAA,KACAlgE,EAAAmgE,oBAAA,EACAngE,EAAAogE,uBAAA,EACApgE,EAAAqgE,kBAAA,EACArgE,EAAAsgE,2BAAA,KACAtgE,EAAAugE,+BAAA,KACApB,IAAA1sE,EAAAwa,YACA,SAAAtmD,OAAA,iFAOA,OALAq5C,GAAAwgE,iBAAA,GACAjO,GAAAv3B,cAAArjF,GAAA,UAAAqoD,EAAAygE,WAAAzgE,IACA,IAAAk7D,EAAAt4B,KAAA1pF,QAAA,YACAy5G,GAAA33B,cAAArjF,GAAA,SAAAqoD,EAAA0gE,UAAA1gE,GAEAA,EAkrBA,MA7uBAuJ,GAAAuG,UAAAgvD,EAAAxvD,GAmEAwvD,EAAA5pH,UAAA2nH,YAAA,SAAA7gH,EAAA49C,EAAA+mE,GACA,GAAAC,KAAApqH,KAAAwpH,eACA1wF,GAAmB8iC,EAAAwuD,EAAAp2G,EAAAxO,EAAAkP,EAAA0uC,EACnBpjD,MAAA29G,KAAA1hE,EAAA9uC,UAAA2rB,IACAmjB,EAAAkX,OAAAnzD,KAAAkpH,WAAA,0DACAlpH,KAAAypH,UAAApD,YAAAvtF,GACAqxF,IACAnqH,KAAAupH,eAAAa,GAAAD,IAMA7B,EAAA5pH,UAAA2rH,OAAA,SAAAl3F,EAAAm3F,EAAA3zG,EAAAi5E,GACA,GAAAwS,GAAAjvE,EAAAqtE,kBACA3e,EAAA1uD,EAAA/wB,KAAAiL,UACArN,MAAA29G,KAAA,qBAAA97B,EAAA,IAAAugB,GACApiG,KAAA8oH,SAAAjnC,GAAA7hF,KAAA8oH,SAAAjnC,OACA5lC,EAAAkX,OAAAhgC,EAAAypE,iBAAAsa,cACA/jF,EAAAypE,iBAAA4R,eAAA,sDACAvyD,EAAAkX,QAAAnzD,KAAA8oH,SAAAjnC,GAAAugB,GAAA,+CACA,IAAAmoB,IACA36B,aACAymB,OAAAiU,EACAn3F,QACAxc,MAEA3W,MAAA8oH,SAAAjnC,GAAAugB,GAAAmoB,EACAvqH,KAAAkpH,YACAlpH,KAAAwqH,YAAAD,IAUAjC,EAAA5pH,UAAA8rH,YAAA,SAAAD,GACA,GAAA/gE,GAAAxpD,KACAmzB,EAAAo3F,EAAAp3F,MACA0uD,EAAA1uD,EAAA/wB,KAAAiL,WACA+0F,EAAAjvE,EAAAqtE,iBACAxgG,MAAA29G,KAAA,aAAA97B,EAAA,QAAAugB,EACA,IAAAqoB,IAAmB7rH,EAAAijF,EAGnB0oC,GAAA5zG,MACA8zG,EAAA,EAAAt3F,EAAAmtE,cACAmqB,EAAA,EAAAF,EAAA5zG,KAEA8zG,EAAA,EAAAF,EAAAlU,SACAr2G,KAAAqmH,YAPA,IAOAoE,EAAA,SAAAp3D,GACA,GAAA/sD,GAAA+sD,EAAA,EACA+sB,EAAA/sB,EAAA,CAEAi1D,GAAAoC,sBAAApkH,EAAA6sB,IACAq2B,EAAAs/D,SAAAjnC,IAAAr4B,EAAAs/D,SAAAjnC,GAAAugB,MAEAmoB,IACA/gE,EAAAm0D,KAAA,kBAAAtqD,GACA,OAAA+sB,GACA52B,EAAAmhE,cAAA9oC,EAAAugB,GAEAmoB,EAAA36B,YACA26B,EAAA36B,WAAAxP,EAAA95E,OAUAgiH,EAAAoC,sBAAA,SAAApkH,EAAA6sB,GACA,GAAA7sB,GAAA,gBAAAA,IAAA21C,EAAA4R,SAAAvnD,EAAA,MACA,GAAAskH,GAAA3uE,EAAAwb,QAAAnxD,EAAA,IACA,IAAAwB,MAAAC,QAAA6iH,OAAAloH,QAAA,aACA,GAAAmoH,GAAA,gBACA13F,EACAypE,iBACAC,WACAxvF,WACA,IACAy9G,EAAA33F,EAAA/wB,KAAAiL,UACAssB,GAAA,wGACAkxF,EAAA,OACAC,EAAA,sDAOAxC,EAAA5pH,UAAAupH,iBAAA,SAAApxD,GACA72D,KAAA0pH,WAAA7yD,EACA72D,KAAA29G,KAAA,wBACA39G,KAAA0pH,WACA1pH,KAAA+qH,UAKA/qH,KAAAkpH,YACAlpH,KAAAqmH,YAAA,YAA6C,cAG7CrmH,KAAAgrH,uCAAAn0D,IAMAyxD,EAAA5pH,UAAAssH,uCAAA,SAAAC,IAGAA,GAAA,KAAAA,EAAAvmH,QACAu3C,EAAAub,QAAAyzD,MACAjrH,KAAA29G,KAAA,iEACA39G,KAAAopH,mBAzMA,MAgNAd,EAAA5pH,UAAAqsH,QAAA,WACA,GAAAvhE,GAAAxpD,IACA,IAAAA,KAAAkpH,YAAAlpH,KAAA0pH,WAAA,CACA,GAAAwB,GAAAlrH,KAAA0pH,WACAyB,EAAAlvE,EAAAqb,cAAA4zD,GAAA,eACAE,GAA+BC,KAAAH,EAC/B,QAAAlrH,KAAA2oH,cACAyC,EAAA,UAEA,gBAAAprH,MAAA2oH,gBACAyC,EAAA,QAAAprH,KAAA2oH,eAEA3oH,KAAAqmH,YAAA8E,EAAAC,EAAA,SAAAtkH,GACA,GAAAs5E,GAAAt5E,EAAA,EACA9C,EAAA8C,EAAA,UACA0iD,GAAAkgE,aAAAwB,IACA,OAAA9qC,EACA52B,EAAAogE,uBAAA,EAIApgE,EAAA8hE,eAAAlrC,EAAAp8E,QASAskH,EAAA5pH,UAAA6sH,SAAA,SAAAp4F,EAAAxc,GACA,GAAAkrE,GAAA1uD,EAAA/wB,KAAAiL,WACA+0F,EAAAjvE,EAAAqtE,iBACAxgG,MAAA29G,KAAA,uBAAA97B,EAAA,IAAAugB,GACAnmD,EAAAkX,OAAAhgC,EAAAypE,iBAAAsa,cACA/jF,EAAAypE,iBAAA4R,eAAA,wDACAxuG,KAAA2qH,cAAA9oC,EAAAugB,IACApiG,KAAAkpH,YACAlpH,KAAAwrH,cAAA3pC,EAAAugB,EAAAjvE,EAAAmtE,cAAA3pF,IAGA2xG,EAAA5pH,UAAA8sH,cAAA,SAAA3pC,EAAAugB,EAAAqpB,EAAA90G,GACA3W,KAAA29G,KAAA,eAAA97B,EAAA,QAAAugB,EACA,IAAAqoB,IAAmB7rH,EAAAijF,EAGnBlrE,KACA8zG,EAAA,EAAAgB,EACAhB,EAAA,EAAA9zG,GAEA3W,KAAAqmH,YANA,IAMAoE,IAKAnC,EAAA5pH,UAAAwpH,gBAAA,SAAArmC,EAAA79E,EAAA4rF,GACA5vF,KAAAkpH,WACAlpH,KAAA0rH,kBAAA,IAAA7pC,EAAA79E,EAAA4rF,GAGA5vF,KAAAipH,0BAAAtmH,MACAk/E,aACAr8E,OAAA,IACAxB,OACA4rF,gBAOA04B,EAAA5pH,UAAAypH,kBAAA,SAAAtmC,EAAA79E,EAAA4rF,GACA5vF,KAAAkpH,WACAlpH,KAAA0rH,kBAAA,KAAA7pC,EAAA79E,EAAA4rF,GAGA5vF,KAAAipH,0BAAAtmH,MACAk/E,aACAr8E,OAAA,KACAxB,OACA4rF,gBAOA04B,EAAA5pH,UAAAmxF,mBAAA,SAAAhO,EAAA+N,GACA5vF,KAAAkpH,WACAlpH,KAAA0rH,kBAAA,KAAA7pC,EAAA,KAAA+N,GAGA5vF,KAAAipH,0BAAAtmH,MACAk/E,aACAr8E,OAAA,KACAxB,KAAA,KACA4rF,gBAIA04B,EAAA5pH,UAAAgtH,kBAAA,SAAAlmH,EAAAq8E,EAAA79E,EAAA4rF,GACA,GAAA7O,IAAuBniF,EAAAijF,EAAAhkF,EAAAmG,EACvBhE,MAAA29G,KAAA,gBAAAn4G,EAAAu7E,GACA/gF,KAAAqmH,YAAA7gH,EAAAu7E,EAAA,SAAAJ,GACAiP,GACA5tE,WAAA,WACA4tE,EAAAjP,EAAA,EAAAA,EAAA,IACiBztE,KAAAC,MAAA,OAOjBm1G,EAAA5pH,UAAAspH,IAAA,SAAAnmC,EAAA79E,EAAA4rF,EAAA/vE,GACA7f,KAAA2rH,YAAA,IAAA9pC,EAAA79E,EAAA4rF,EAAA/vE,IAKAyoG,EAAA5pH,UAAAirG,MAAA,SAAA9nB,EAAA79E,EAAA4rF,EAAA/vE,GACA7f,KAAA2rH,YAAA,IAAA9pC,EAAA79E,EAAA4rF,EAAA/vE,IAEAyoG,EAAA5pH,UAAAitH,YAAA,SAAAnmH,EAAAq8E,EAAA79E,EAAA4rF,EAAA/vE,GACA,GAAAkhE,IACAniF,EAAAijF,EACAhkF,EAAAmG,OAEAsO,KAAAuN,IACAkhE,EAAA,EAAAlhE,GAEA7f,KAAA+oH,iBAAApmH,MACA6C,SACAu7E,UACA6O,eAEA5vF,KAAAgpH,sBACA,IAAA15G,GAAAtP,KAAA+oH,iBAAArkH,OAAA,CACA1E,MAAAkpH,WACAlpH,KAAA4rH,SAAAt8G,GAGAtP,KAAA29G,KAAA,kBAAA97B,IAGAymC,EAAA5pH,UAAAktH,SAAA,SAAAt8G,GACA,GAAAk6C,GAAAxpD,KACAwF,EAAAxF,KAAA+oH,iBAAAz5G,GAAA9J,OACAu7E,EAAA/gF,KAAA+oH,iBAAAz5G,GAAAyxE,QACA6O,EAAA5vF,KAAA+oH,iBAAAz5G,GAAAsgF,UACA5vF,MAAA+oH,iBAAAz5G,GAAAu8G,OAAA7rH,KAAAkpH,WACAlpH,KAAAqmH,YAAA7gH,EAAAu7E,EAAA,SAAA1tB,GACA7J,EAAAm0D,KAAAn4G,EAAA,YAAA6tD,SACA7J,GAAAu/D,iBAAAz5G,GACAk6C,EAAAw/D,uBAEA,IAAAx/D,EAAAw/D,uBACAx/D,EAAAu/D,qBAEAn5B,GACAA,EAAAv8B,EAAA,EAAAA,EAAA,MAMAi1D,EAAA5pH,UAAA67G,YAAA,SAAAH,GACA,GAAA5wD,GAAAxpD,IAEA,IAAAA,KAAAkpH,WAAA,CACA,GAAAnoC,IAA2BnjF,EAAAw8G,EAC3Bp6G,MAAA29G,KAAA,cAAA58B,GACA/gF,KAAAqmH,YAAA,IAAAtlC,EAAA,SAAAn4D,GAEA,UADAA,EAAA,EACA,CACA,GAAAkjG,GAAAljG,EAAA,CACA4gC,GAAAm0D,KAAA,sCAAAmO,QASAxD,EAAA5pH,UAAAwoH,eAAA,SAAA7zD,GACA,QAAAA,GAAA,CAEArzD,KAAA29G,KAAA,gBAAA1hE,EAAA9uC,UAAAkmD,GACA,IAAA04D,GAAA14D,EAAA,EACA82D,EAAAnqH,KAAAupH,eAAAwC,EACA5B,WACAnqH,MAAAupH,eAAAwC,GACA5B,EAAA92D,EAAA,QAGA,aAAAA,GACA,0CAAAA,EAAA,KAEA,MAAAA,IAEArzD,KAAAgsH,YAAA34D,EAAA,EAAAA,EAAA,KAGAi1D,EAAA5pH,UAAAstH,YAAA,SAAAxmH,EAAA49C,GACApjD,KAAA29G,KAAA,sBAAAn4G,EAAA49C,GACA,MAAA59C,EACAxF,KAAAuoH,cAAAnlE,EAAA,EAAAA,EAAA,GACA,EAAAA,EAAA,GACA,MAAA59C,EACAxF,KAAAuoH,cAAAnlE,EAAA,EAAAA,EAAA,GACA,EAAAA,EAAA,GACA,MAAA59C,EACAxF,KAAAisH,iBAAA7oE,EAAA,EAAAA,EAAA,GACA,OAAA59C,EACAxF,KAAAsrH,eAAAloE,EAAA,EAAAA,EAAA,GACA,OAAA59C,EACAxF,KAAAksH,uBAAA9oE,GAEAhmC,EAAA,6CACA6+B,EAAA9uC,UAAA3H,GACA,uCAEA8iH,EAAA5pH,UAAAimH,SAAA,SAAA8C,EAAAC,GACA1nH,KAAA29G,KAAA,oBACA39G,KAAAkpH,YAAA,EACAlpH,KAAA+pH,gCAAA,GAAAt4D,OAAAE,UACA3xD,KAAAmsH,iBAAA1E,GACAznH,KAAAu9G,cAAAmK,EACA1nH,KAAA6pH,kBACA7pH,KAAAosH,oBAEApsH,KAAAqsH,gBACArsH,KAAA6pH,kBAAA,EACA7pH,KAAAwoH,kBAAA,IAEAF,EAAA5pH,UAAAsrH,iBAAA,SAAA/nG,GACA,GAAAunC,GAAAxpD,IACAi8C,GAAAkX,QAAAnzD,KAAAypH,UAAA,0DACAzpH,KAAAspH,2BACA7iE,aAAAzmD,KAAAspH,2BAIAtpH,KAAAspH,0BAAAtnG,WAAA,WACAwnC,EAAA8/D,0BAAA,KACA9/D,EAAA8iE,wBACSp5G,KAAAC,MAAA8O,KAMTqmG,EAAA5pH,UAAAurH,WAAA,SAAAzY,GAEAA,IACAxxG,KAAAk8G,UACAl8G,KAAAmpH,kBAAAnpH,KAAAopH,qBACAppH,KAAA29G,KAAA,2CACA39G,KAAAmpH,gBAAAf,GACApoH,KAAAypH,WACAzpH,KAAAgqH,iBAAA,IAGAhqH,KAAAk8G,SAAA1K,GAEA8W,EAAA5pH,UAAAwrH,UAAA,SAAAqC,GACAA,GACAvsH,KAAA29G,KAAA,wBACA39G,KAAAmpH,gBAAAf,GACApoH,KAAAypH,WACAzpH,KAAAgqH,iBAAA,KAIAhqH,KAAA29G,KAAA,8CACA39G,KAAAypH,WACAzpH,KAAAypH,UAAA7lE,UAIA0kE,EAAA5pH,UAAA8tH,sBAAA,WAQA,GAPAxsH,KAAA29G,KAAA,4BACA39G,KAAAkpH,YAAA,EACAlpH,KAAAypH,UAAA,KAEAzpH,KAAAysH,0BAEAzsH,KAAAupH,kBACAvpH,KAAA0sH,mBAAA,CACA,GAAA1sH,KAAAk8G,UAKA,GAAAl8G,KAAA+pH,+BAAA,CAEA,GAAA4C,IAAA,GAAAl7D,OAAAE,UAAA3xD,KAAA+pH,8BACA4C,GAxfA,MAyfA3sH,KAAAmpH,gBAAAf,IACApoH,KAAA+pH,+BAAA,UATA/pH,MAAA29G,KAAA,8CACA39G,KAAAmpH,gBAAAnpH,KAAAopH,mBACAppH,KAAA8pH,4BAAA,GAAAr4D,OAAAE,SASA,IAAAi7D,IAAA,GAAAn7D,OAAAE,UAAA3xD,KAAA8pH,2BACA+C,EAAA35G,KAAAgG,IAAA,EAAAlZ,KAAAmpH,gBAAAyD,EACAC,GAAA35G,KAAAqwD,SAAAspD,EACA7sH,KAAA29G,KAAA,0BAAAkP,EAAA,MACA7sH,KAAAgqH,iBAAA6C,GAEA7sH,KAAAmpH,gBAAAj2G,KAAAy7D,IAAA3uE,KAAAopH,mBAngBA,IAmgBAppH,KAAAmpH,iBAEAnpH,KAAAwoH,kBAAA,IAEAF,EAAA5pH,UAAA4tH,qBAAA,WACA,GAAAtsH,KAAA0sH,mBAAA,CACA1sH,KAAA29G,KAAA,+BACA39G,KAAA8pH,4BAAA,GAAAr4D,OAAAE,UACA3xD,KAAA+pH,+BAAA,IACA,IAAA+C,GAAA9sH,KAAAknH,eAAAj7G,KAAAjM,MACA+sH,EAAA/sH,KAAA2kH,SAAA14G,KAAAjM,MACAgtH,EAAAhtH,KAAAwsH,sBAAAvgH,KAAAjM,MACAitH,EAAAjtH,KAAAwN,GAAA,IAAA86G,EAAA4E,oBACAhsB,EAAAlhG,KACAmtH,EAAAntH,KAAAu9G,cACA6P,GAAA,EACAC,EAAA,KACAC,EAAA,WACAD,EACAA,EAAAzpE,SAGAwpE,GAAA,EACAJ,MAGAO,EAAA,SAAAz0F,GACAmjB,EAAAkX,OAAAk6D,EAAA,0DACAA,EAAAhH,YAAAvtF,GAEA94B,MAAAypH,WACA7lE,MAAA0pE,EACAjH,YAAAkH,EAEA,IAAAjV,GAAAt4G,KAAA2pH,kBACA3pH,MAAA2pH,oBAAA,EAEA3pH,KAAA0oH,mBACAt4D,SAAAkoD,GACAp2G,KAAA,SAAA0mB,GACAwkG,EAUAp8D,EAAA,0CATAA,EAAA,8CACAkwC,EAAAwoB,WAAA9gG,KAAA4kG,YACAH,EAAA,GAAA5I,IAAAwI,EAAA/rB,EAAAwjB,UAAAoI,EAAAC,EAAAC,EACA,SAAAnrG,GACA8X,EAAA9X,EAAA,KAAAq/E,EAAAwjB,UAAAr3G,WAAA,KACA6zF,EAAAusB,UA/iBA,gBAgjBqBN,MAMrBjrH,KAAA,cAAAq1G,GACArW,EAAAyc,KAAA,wBAAApG,GACA6V,IACAnxE,EAAA+W,UAAAE,YAIAv5B,EAAA49E,GAEA+V,SAQAhF,EAAA5pH,UAAA+uH,UAAA,SAAA5rG,GACAmvC,EAAA,uCAAAnvC,GACA7hB,KAAA6oH,kBAAAhnG,IAAA,EACA7hB,KAAAypH,UACAzpH,KAAAypH,UAAA7lE,SAGA5jD,KAAAspH,4BACA7iE,aAAAzmD,KAAAspH,2BACAtpH,KAAAspH,0BAAA,MAEAtpH,KAAAkpH,YACAlpH,KAAAwsH,0BAOAlE,EAAA5pH,UAAAw/D,OAAA,SAAAr8C,GACAmvC,EAAA,mCAAAnvC,SACA7hB,MAAA6oH,kBAAAhnG,GACAo6B,EAAA4b,QAAA73D,KAAA6oH,qBACA7oH,KAAAmpH,gBAAAf,GACApoH,KAAAypH,WACAzpH,KAAAgqH,iBAAA,KAIA1B,EAAA5pH,UAAAytH,iBAAA,SAAA1E,GACA,GAAA/N,GAAA+N,GAAA,GAAAh2D,OAAAE,SACA3xD,MAAAyoH,qBAAkCiF,iBAAAhU,KAElC4O,EAAA5pH,UAAA+tH,wBAAA,WACA,OAAAjvH,GAAA,EAAuBA,EAAAwC,KAAA+oH,iBAAArkH,OAAkClH,IAAA,CACzD,GAAAwqH,GAAAhoH,KAAA+oH,iBAAAvrH,EACAwqH,IAAA,KAAAA,GAAAjnC,SAAAinC,EAAA6D,SACA7D,EAAAp4B,YACAo4B,EAAAp4B,WAAA,oBACA5vF,MAAA+oH,iBAAAvrH,GACAwC,KAAAgpH,wBAIA,IAAAhpH,KAAAgpH,uBACAhpH,KAAA+oH,sBAOAT,EAAA5pH,UAAAutH,iBAAA,SAAApqC,EAAA1uD,GAEA,GAAAivE,EAKAA,GAJAjvE,EAIAA,EAAAtrB,IAAA,SAAAo2D,GAA8C,MAAAqqB,GAAArqB,KAA+BnxD,KAAA,KAH7E,SAKA,IAAAu9G,GAAArqH,KAAA2qH,cAAA9oC,EAAAugB,EACAioB,MAAAz6B,YACAy6B,EAAAz6B,WAAA,sBAQA04B,EAAA5pH,UAAAisH,cAAA,SAAA9oC,EAAAugB,GACA,GACAioB,GADAsD,EAAA,GAAA1jC,IAAApI,GAAAx0E,UAaA,YAXAiF,KAAAtS,KAAA8oH,SAAA6E,IACAtD,EAAArqH,KAAA8oH,SAAA6E,GAAAvrB,SACApiG,MAAA8oH,SAAA6E,GAAAvrB,GACA,IAAAnmD,EAAA6b,SAAA93D,KAAA8oH,SAAA6E,WACA3tH,MAAA8oH,SAAA6E,IAKAtD,MAAA/3G,GAEA+3G,GAEA/B,EAAA5pH,UAAA4sH,eAAA,SAAAsC,EAAAC,GACA78D,EAAA,uBAAA48D,EAAA,IAAAC,GACA7tH,KAAA0pH,WAAA,KACA1pH,KAAA2pH,oBAAA,EACA3pH,KAAAypH,UAAA7lE,QACA,kBAAAgqE,GAAA,sBAAAA,KAIA5tH,KAAA4pH,wBArqBA,IAwqBA5pH,KAAAmpH,gBA7qBA,IAgrBAnpH,KAAA0oH,mBAAAjQ,0BAIA6P,EAAA5pH,UAAAwtH,uBAAA,SAAA9oE,GACApjD,KAAAqpH,uBACArpH,KAAAqpH,uBAAAjmE,GAGA,OAAAA,IACAjmC,QAAA6zC,IAAA,aAAA5N,EAAA,IAAAjkB,QAAA,uBAIAmpF,EAAA5pH,UAAA2tH,cAAA,WACA,GAAA7iE,GAAAxpD,IAEAA,MAAA+qH,UAGA9uE,EAAAp6C,QAAA7B,KAAA8oH,SAAA,SAAAjnC,EAAAi1B,GACA76D,EAAAp6C,QAAAi1G,EAAA,SAAAh1G,EAAAyoH,GACA/gE,EAAAghE,YAAAD,MAGA,QAAA/sH,GAAA,EAAuBA,EAAAwC,KAAA+oH,iBAAArkH,OAAkClH,IACzDwC,KAAA+oH,iBAAAvrH,IACAwC,KAAA4rH,SAAApuH,EAEA,MAAAwC,KAAAipH,0BAAAvkH,QAAA,CACA,GAAAq8E,GAAA/gF,KAAAipH,0BAAA1oG,OACAvgB,MAAA0rH,kBAAA3qC,EAAAv7E,OAAAu7E,EAAAc,WAAAd,EAAA/8E,KAAA+8E,EAAA6O,cAOA04B,EAAA5pH,UAAA0tH,kBAAA,WACA,GAAAhS,MACA0T,EAAA,IACA7xE,GAAA+W,UAAAE,WACA46D,EAAA,aAEA7xE,EAAA+W,UAAAC,cACA66D,EAAA,QAEA1T,EAAA,OAAA0T,EAAA,IAAAt8D,EAAApC,YAAAjwB,QAAA,cACA8c,EAAAsa,kBACA6jD,EAAA,uBAEAn+D,EAAAua,kBACA4jD,EAAA,4BAEAp6G,KAAAu6G,YAAAH,IAMAkO,EAAA5pH,UAAAguH,iBAAA,WACA,GAAAH,GAAApQ,GAAA33B,cAAA63B,iBACA,OAAApgE,GAAA4b,QAAA73D,KAAA6oH,oBAAA0D,GAKAjE,EAAAM,4BAAA,EAMAN,EAAA4E,kBAAA,EACA5E,GACCP,IAsBDgG,GAAA,SAAAj1D,GAQA,QAAAi1D,GAAArJ,EAAA6D,EAAAG,GACA,GAAAl/D,GAAAsP,EAAAp7D,KAAAsC,WAaA,OAZAwpD,GAAAk7D,YACAl7D,EAAA++D,gBACA/+D,EAAAk/D,qBAEAl/D,EAAAm0D,KAAAx2B,EAAA,WAOA39B,EAAAs/D,YACAt/D,EA6HA,MAlJAuJ,GAAAuG,UAAAy0D,EAAAj1D,GAuBAi1D,EAAArvH,UAAA67G,YAAA,SAAAH,GACA,SAAAjqG,OAAA,4BAQA49G,EAAAC,aAAA,SAAA76F,EAAAxc,GACA,WAAArE,KAAAqE,EACA,OAAAA,GAGAslC,EAAAkX,OAAAhgC,EAAAypE,iBAAAsa,YAAA,kDACA/jF,EAAA/wB,KAAAiL,aAIA0gH,EAAArvH,UAAA2rH,OAAA,SAAAl3F,EAAAm3F,EAAA3zG,EAAAi5E,GACA,GAAApmC,GAAAxpD,KACA6hF,EAAA1uD,EAAA/wB,KAAAiL,UACArN,MAAA29G,KAAA,qBAAA97B,EAAA,IAAA1uD,EAAAqtE,kBAEA,IAAAytB,GAAAF,EAAAC,aAAA76F,EAAAxc,GACAu3G,IACAluH,MAAA8oH,SAAAmF,GAAAC,CACA,IAAAC,GAAAh7F,EACAypE,iBACAwxB,6BACApuH,MAAAquH,aAAAxsC,EAAA,QAAAssC,EAAA,SAAA5W,EAAA3uF,GACA,GAAA5kB,GAAA4kB,CAQA,IAPA,MAAA2uF,IACAvzG,EAAA,KACAuzG,EAAA,MAEA,OAAAA,GACA/tD,EAAA++D,cAAA1mC,EAAA79E,GAAA,EAAA2S,GAEAslC,EAAAwb,QAAAjO,EAAAs/D,SAAAmF,KAAAC,EAAA,CACA,GAAAI,EAKAA,GAJA/W,EAGA,KAAAA,EACA,oBAGA,cAAAA,EANA,KAQA3nB,EAAA0+B,EAAA,UAKAP,EAAArvH,UAAA6sH,SAAA,SAAAp4F,EAAAxc,GACA,GAAAs3G,GAAAF,EAAAC,aAAA76F,EAAAxc,SACA3W,MAAA8oH,SAAAmF,IAGAF,EAAArvH,UAAAupH,iBAAA,SAAApxD,KAYAk3D,EAAArvH,UAAA2vH,aAAA,SAAAxsC,EAAA0sC,EAAAhgG,GACA,GAAAi7B,GAAAxpD,SACA,KAAAuuH,IAA+CA,MAC/CA,EAAA,gBACAvuH,KAAA0oH,mBACAt4D,UAAA,GACAluD,KAAA,SAAAssH,GACA,GAAAC,GAAAD,KAAAhB,WACAiB,KACAF,EAAA,KAAAE,EAEA,IAAA/uC,IAAAl2B,EAAAk7D,UAAAr4B,OAAA,sBACA7iC,EAAAk7D,UAAAt4B,KACAvK,EACA,IACA5lC,EAAAsc,YAAAg2D,EACA/kE,GAAAm0D,KAAA,4BAAAj+B,EACA,IAAAsB,GAAA,GAAAC,eACAD,GAAArd,mBAAA,WACA,GAAAp1C,GAAA,IAAAyyD,EAAA4G,WAAA,CACAp+B,EAAAm0D,KAAA,qBAAAj+B,EAAA,qBAAAsB,EAAAZ,OAAA,YAAAY,EAAAI,aACA,IAAAt6E,GAAA,IACA,IAAAk6E,EAAAZ,QAAA,KAAAY,EAAAZ,OAAA,KACA,IACAt5E,EAAAm1C,EAAA8V,SAAAivB,EAAAI,cAEA,MAAA/vE,GACAsoB,EAAA,qCACA+lD,EACA,KACAsB,EAAAI,cAEA7yD,EAAA,KAAAznB,OAIA,OAAAk6E,EAAAZ,QAAA,MAAAY,EAAAZ,QACAzmD,EAAA,sCACA+lD,EACA,YACAsB,EAAAZ,QAEA7xD,EAAAyyD,EAAAZ,OAEA7xD,GAAA,OAGAyyD,EAAAr9B,KAAA,MAAA+7B,GAAA,GACAsB,EAAAS,UAGAssC,GACChG,IAqBD2G,GAAA,WAMA,QAAAA,GAAAhK,EAAAiK,EAAAhhE,GACA,GAAAnE,GAAAxpD,IACAA,MAAA0kH,YACA1kH,KAAA2tD,MACA3tD,KAAA4uH,gBAAA,EACA5uH,KAAAi6G,eAAA,KACAj6G,KAAA6uH,YAAA,GAAArU,IACAx6G,KAAA8uH,aAAA,EACA9uH,KAAA+uH,6BAAA,KAEA/uH,KAAAi+G,cAAA,GAAAnd,IAKA9gG,KAAAgvH,sBAAA,IAEA,IAAAC,GAAA,GAAA7W,IAAAzqD,EAEA,IADA3tD,KAAA49G,OAAA7E,GAAAC,cAAA0L,GACAiK,GAAA7kC,KACA9pF,KAAA+5G,QAAA,GAAAgU,IAAA/tH,KAAA0kH,UAAA1kH,KAAAuoH,cAAAt8G,KAAAjM,MAAAivH,GAEAjtG,WAAAhiB,KAAAwoH,iBAAAv8G,KAAAjM,MAAA,UAEA,CACA,GAAAkvH,GAAAvhE,EAAAnuD,QAAA,4BAEA,aAAA0vH,GAAA,OAAAA,EAAA,CACA,mBAAAA,GACA,SAAA/+G,OAAA,qEAEA,KACA8rC,EAAA9uC,UAAA+hH,GAEA,MAAA79G,GACA,SAAAlB,OAAA,kCAAAkB,IAGArR,KAAAgvH,sBAAA,GAAA1G,IAAAtoH,KAAA0kH,UAAA1kH,KAAAuoH,cAAAt8G,KAAAjM,WAAAwoH,iBAAAv8G,KAAAjM,WAAAyoH,oBAAAx8G,KAAAjM,MAAAivH,EAAAC,GACAlvH,KAAA+5G,QAAA/5G,KAAAgvH,sBAEAC,EAAA1W,uBAAA,SAAA1hD,GACArN,EAAAuwD,QAAAkO,iBAAApxD,KAIA72D,KAAAmvH,eAAApW,GAAAI,oBAAAuL,EAAA,WAAuF,UAAA7K,IAAArwD,EAAAo0D,OAAAp0D,EAAAuwD,WACvF/5G,KAAAovH,qBAEApvH,KAAAqvH,UAAA,GAAArX,IACAh4G,KAAAsvH,cAAA,GAAA7b,KACAyC,eAAA,SAAA/iF,EAAAxc,EAAA2zG,EAAA16B,GACA,GAAA2/B,MACApvG,EAAAqpC,EAAA6lE,UAAA/pB,QAAAnyE,EAAA/wB,KASA,OANA+d,GAAA03C,YACA03D,EAAA/lE,EAAA8lE,cAAAjb,qBAAAlhF,EAAA/wB,KAAA+d,GACA6B,WAAA,WACA4tE,EAAA,OACqB,IAErB2/B,GAEAjZ,cAAA,eAEAt2G,KAAAwvH,YAAA,gBACAxvH,KAAAyvH,gBAAA,GAAAhc,KACAyC,eAAA,SAAA/iF,EAAAxc,EAAA2zG,EAAA16B,GAMA,MALApmC,GAAAuwD,QAAAsQ,OAAAl3F,EAAAm3F,EAAA3zG,EAAA,SAAAypE,EAAAp8E,GACA,GAAA81B,GAAA81D,EAAAxP,EAAAp8E,EACAwlD,GAAAqlE,YAAA3T,0BAAA/nF,EAAA/wB,KAAA03B,SAKAw8E,cAAA,SAAAnjF,EAAAxc,GACA6yC,EAAAuwD,QAAAwR,SAAAp4F,EAAAxc,MAkZA,MA3YA+3G,GAAAhwH,UAAA2O,SAAA,WACA,OAAArN,KAAA0kH,UAAAr4B,OAAA,sBAAArsF,KAAA0kH,UAAAt4B,MAKAsiC,EAAAhwH,UAAAZ,KAAA,WACA,MAAAkC,MAAA0kH,UAAA//G,WAKA+pH,EAAAhwH,UAAAgxH,WAAA,WACA,GAAAC,GAAA3vH,KAAAqvH,UAAA/pB,QAAA,GAAArb,IAAA,2BACA2lC,EAAAD,EAAA1tH,OAAA,CACA,WAAAwvD,OAAAE,UAAAi+D,GAMAlB,EAAAhwH,UAAAmxH,qBAAA,WACA,MAAAvuB,KACAmmB,UAAAznH,KAAA0vH,gBAYAhB,EAAAhwH,UAAA6pH,cAAA,SAAA1mC,EAAA79E,EAAA8rH,EAAAn5G,GAEA3W,KAAA4uH,iBACA,IAAAxsH,GAAA,GAAA6nF,IAAApI,EACA79E,GAAAhE,KAAA+uH,6BACA/uH,KAAA+uH,6BAAAltC,EAAA79E,GACAA,CACA,IAAA81B,KACA,IAAAnjB,EACA,GAAAm5G,EAAA,CACA,GAAAC,GAAA9zE,EAAAp0C,IAAA7D,EAAA,SAAAs0C,GACA,MAAAoqC,GAAApqC,IAEAxe,GAAA95B,KAAAyvH,gBAAA3a,sBAAA1yG,EAAA2tH,EAAAp5G,OAEA,CACA,GAAAq5G,GAAAttC,EAAA1+E,EACA81B,GAAA95B,KAAAyvH,gBAAAjb,0BAAApyG,EAAA4tH,EAAAr5G,OAGA,IAAAm5G,EAAA,CACA,GAAAjkB,GAAA5vD,EAAAp0C,IAAA7D,EAAA,SAAAs0C,GACA,MAAAoqC,GAAApqC,IAEAxe,GAAA95B,KAAAyvH,gBAAAnb,iBAAAlyG,EAAAypG,OAEA,CACA,GAAA5Q,GAAAvY,EAAA1+E,EACA81B,GAAA95B,KAAAyvH,gBAAApb,qBAAAjyG,EAAA64F,GAEA,GAAAiM,GAAA9kG,CACA03B,GAAAp1B,OAAA,IAGAwiG,EAAAlnG,KAAAiwH,mBAAA7tH,IAEApC,KAAA6uH,YAAA3T,0BAAAhU,EAAAptE,IAOA40F,EAAAhwH,UAAAwxH,qBAAA,SAAA3hG,GACAvuB,KAAA+uH,6BAAAxgG,GAMAmgG,EAAAhwH,UAAA8pH,iBAAA,SAAA2H,GACAnwH,KAAAwvH,YAAA,YAAAW,IACA,IAAAA,GACAnwH,KAAAowH,0BAOA1B,EAAAhwH,UAAA+pH,oBAAA,SAAApY,GACA,GAAA7mD,GAAAxpD,IACA0oF,GAAA2nB,EAAA,SAAA19F,EAAA7Q,GACA0nD,EAAAgmE,YAAA1tH,EAAA6Q,MASA+7G,EAAAhwH,UAAA8wH,YAAA,SAAA3tC,EAAAlvE,GACA,GAAAvQ,GAAA,GAAA6nF,IAAA,UAAApI,GACAluD,EAAA+uD,EAAA/vE,EACA3S,MAAAqvH,UAAAnX,eAAA91G,EAAAuxB,EACA,IAAAmG,GAAA95B,KAAAsvH,cAAAjb,qBAAAjyG,EAAAuxB,EACA3zB,MAAA6uH,YAAA3T,0BAAA94G,EAAA03B,IAMA40F,EAAAhwH,UAAA2xH,gBAAA,WACA,MAAArwH,MAAA8uH,gBAQAJ,EAAAhwH,UAAAqxF,gBAAA,SAAA3tF,EAAA4W,EAAAigF,EAAArJ,GACA,GAAApmC,GAAAxpD,IACAA,MAAA29G,KAAA,OACAv7G,OAAAiL,WACAsF,MAAAqG,EACA2pE,SAAAsW,GAIA,IAAAuI,GAAAxhG,KAAA6vH,uBACAS,EAAA5tC,EAAA1pE,EAAAigF,GACAtlE,EAAAguE,GAAA2uB,EAAA9uB,GACA+P,EAAAvxG,KAAAqwH,kBACAv2F,EAAA95B,KAAAyvH,gBAAA1b,mBAAA3xG,EAAAuxB,EAAA49E,GAAA,EACAvxG,MAAA6uH,YAAAlU,YAAA7gF,GACA95B,KAAA+5G,QAAAiO,IAAA5lH,EAAAiL,WAAAijH,EAAAruH,KAAA,YAAAm+E,EAAA0rC,GACA,GAAAyE,GAAA,OAAAnwC,CACAmwC,IACA52F,EAAA,UAAAv3B,EAAA,YAAAg+E,EAEA,IAAAowC,GAAAhnE,EAAAimE,gBAAA3lB,aAAAyH,GAAAgf,EACA/mE,GAAAqlE,YAAA3T,0BAAA94G,EAAAouH,GACAhnE,EAAAinE,uBAAA7gC,EAAAxP,EAAA0rC,IAEA,IAAA5kB,GAAAlnG,KAAA0wH,mBAAAtuH,EACApC,MAAAiwH,mBAAA/oB,GAEAlnG,KAAA6uH,YAAA3T,0BAAAhU,OAOAwnB,EAAAhwH,UAAAyD,OAAA,SAAAC,EAAAuuH,EAAA/gC,GACA,GAAApmC,GAAAxpD,IACAA,MAAA29G,KAAA,UAA6Bv7G,OAAAiL,WAAAsF,MAAAg+G,GAE7B,IAAAC,IAAA,EACApvB,EAAAxhG,KAAA6vH,uBACAhkB,IAMA,IALA5vD,EAAAp6C,QAAA8uH,EAAA,SAAAE,EAAAC,GACAF,GAAA,CACA,IAAAN,GAAA5tC,EAAAouC,EACAjlB,GAAAglB,GAAAlvB,GAAA2uB,EAAA9uB,KAEAovB,EAsBA5/D,EAAA,wDACAhxD,KAAAywH,uBAAA7gC,EAAA,UAvBA,CACA,GAAAmhC,GAAA/wH,KAAAqwH,kBACAv2F,EAAA95B,KAAAyvH,gBAAAvb,eAAA9xG,EAAAypG,EAAAklB,EACA/wH,MAAA6uH,YAAAlU,YAAA7gF,GACA95B,KAAA+5G,QAAApQ,MAAAvnG,EAAAiL,WAAAsjH,EAAA,SAAAvwC,EAAA0rC,GACA,GAAAyE,GAAA,OAAAnwC,CACAmwC,IACA52F,EAAA,aAAAv3B,EAAA,YAAAg+E,EAEA,IAAAowC,GAAAhnE,EAAAimE,gBAAA3lB,aAAAinB,GAAAR,GACArpB,EAAAspB,EAAA9rH,OAAA,EAAA8kD,EAAAymE,mBAAA7tH,IACAonD,GAAAqlE,YAAA3T,0BAAAhU,EAAAspB,GACAhnE,EAAAinE,uBAAA7gC,EAAAxP,EAAA0rC,KAEA7vE,EAAAp6C,QAAA8uH,EAAA,SAAAxV,GACA,GAAAjU,GAAA19C,EAAAknE,mBAAAtuH,EAAA0D,MAAAq1G,GACA3xD,GAAAymE,mBAAA/oB,KAGAlnG,KAAA6uH,YAAA3T,0BAAA94G,QAWAssH,EAAAhwH,UAAA0xH,uBAAA,WACA,GAAA5mE,GAAAxpD,IACAA,MAAA29G,KAAA,qBACA,IAAAnc,GAAAxhG,KAAA6vH,uBACAmB,EAAAvvB,GAAAzhG,KAAAi+G,cAAAzc,GACA1nE,IACAk3F,GAAA7vB,YAAAlX,GAAAvV,MAAA,SAAAtyE,EAAA64F,GACAnhE,IAAAl5B,OAAA4oD,EAAAimE,gBAAApb,qBAAAjyG,EAAA64F,GACA,IAAAiM,GAAA19C,EAAAknE,mBAAAtuH,EACAonD,GAAAymE,mBAAA/oB,KAEAlnG,KAAAi+G,cAAA,GAAAnd,IACA9gG,KAAA6uH,YAAA3T,0BAAAjxB,GAAAvV,MAAA56C,IAMA40F,EAAAhwH,UAAAmxF,mBAAA,SAAAztF,EAAAwtF,GACA,GAAApmC,GAAAxpD,IACAA,MAAA+5G,QAAAlqB,mBAAAztF,EAAAiL,WAAA,SAAA+yE,EAAA0rC,GACA,OAAA1rC,GACA52B,EAAAy0D,cAAAhd,OAAA7+F,GAEAonD,EAAAinE,uBAAA7gC,EAAAxP,EAAA0rC,MAQA4C,EAAAhwH,UAAAoxF,gBAAA,SAAA1tF,EAAAuQ,EAAAi9E,GACA,GAAApmC,GAAAxpD,KACA2zB,EAAA+uD,EAAA/vE,EACA3S,MAAA+5G,QAAAmO,gBAAA9lH,EAAAiL,WAAAsmB,EAAA1xB,KAAA,YAAAm+E,EAAA0rC,GACA,OAAA1rC,GACA52B,EAAAy0D,cAAAjd,SAAA5+F,EAAAuxB,GAEA61B,EAAAinE,uBAAA7gC,EAAAxP,EAAA0rC,MASA4C,EAAAhwH,UAAAsxF,4BAAA,SAAA5tF,EAAAuQ,EAAAgwE,EAAAiN,GACA,GAAApmC,GAAAxpD,KACA2zB,EAAA+uD,EAAA/vE,EAAAgwE,EACA3iF,MAAA+5G,QAAAmO,gBAAA9lH,EAAAiL,WAAAsmB,EAAA1xB,KAAA,YAAAm+E,EAAA0rC,GACA,OAAA1rC,GACA52B,EAAAy0D,cAAAjd,SAAA5+F,EAAAuxB,GAEA61B,EAAAinE,uBAAA7gC,EAAAxP,EAAA0rC,MAQA4C,EAAAhwH,UAAAyxF,mBAAA,SAAA/tF,EAAAuuH,EAAA/gC,GACA,GAAApmC,GAAAxpD,IACA,IAAAi8C,EAAA4b,QAAA84D,GAGA,MAFA3/D,GAAA,2EACAhxD,MAAAywH,uBAAA7gC,EAAA,KAGA5vF,MAAA+5G,QAAAoO,kBAAA/lH,EAAAiL,WAAAsjH,EAAA,SAAAvwC,EAAA0rC,GACA,OAAA1rC,GACAnkC,EAAAp6C,QAAA8uH,EAAA,SAAAv+B,EAAA//D,GACA,GAAAkgE,GAAA7P,EAAArwD,EACAm3B,GAAAy0D,cAAAjd,SAAA5+F,EAAA0D,MAAAssF,GAAAG,KAGA/oC,EAAAinE,uBAAA7gC,EAAAxP,EAAA0rC,MAOA4C,EAAAhwH,UAAAygG,yBAAA,SAAAhsE,EAAA6oE,GACA,GAAAliE,EAEAA,GADA,UAAA3G,EAAA/wB,KAAAmoF,WACAvqF,KAAAsvH,cAAA7gB,qBAAAt7E,EAAA6oE,GAGAh8F,KAAAyvH,gBAAAhhB,qBAAAt7E,EAAA6oE,GAEAh8F,KAAA6uH,YAAA7T,kBAAA7nF,EAAA/wB,KAAA03B,IAMA40F,EAAAhwH,UAAA0gG,4BAAA,SAAAjsE,EAAA6oE,GAGA,GAAAliE,EAEAA,GADA,UAAA3G,EAAA/wB,KAAAmoF,WACAvqF,KAAAsvH,cAAA5gB,wBAAAv7E,EAAA6oE,GAGAh8F,KAAAyvH,gBAAA/gB,wBAAAv7E,EAAA6oE,GAEAh8F,KAAA6uH,YAAA7T,kBAAA7nF,EAAA/wB,KAAA03B,IAEA40F,EAAAhwH,UAAA+uH,UAAA,WACAztH,KAAAgvH,uBACAhvH,KAAAgvH,sBAAAvB,UAzZA,mBA4ZAiB,EAAAhwH,UAAAw/D,OAAA,WACAl+D,KAAAgvH,uBACAhvH,KAAAgvH,sBAAA9wD,OA9ZA,mBAiaAwwD,EAAAhwH,UAAA07G,MAAA,SAAA6W,GAEA,OADA,KAAAA,IAAmCA,GAAA,GACnC,mBAAA9zG,SAAA,CAEA,GAAAi9F,EACA6W,IACAjxH,KAAAi6G,iBACAj6G,KAAAi6G,eAAA,GAAAX,IAAAt5G,KAAA49G,SACAxD,EAAAp6G,KAAAi6G,eAAA57G,OAGA+7G,EAAAp6G,KAAA49G,OAAAv/G,KAEA,IAAA6yH,GAAAjzH,OAAA2D,KAAAw4G,GAAA5yG,OAAA,SAAA2pH,EAAAC,GACA,MAAAl+G,MAAAgG,IAAAk4G,EAAA1sH,OAAAysH,IACS,EACTl1E,GAAAp6C,QAAAu4G,EAAA,SAAAtmC,EAAAnhE,GAEA,OAAAnV,GAAAs2E,EAAApvE,OAAqClH,EAAA0zH,EAAA,EAAqB1zH,IAC1Ds2E,GAAA,GACA32D,SAAA6zC,IAAA8iB,EAAAnhE,OAGA+7G,EAAAhwH,UAAA2yH,sBAAA,SAAAC,GACAtxH,KAAA49G,OAAA/E,iBAAAyY,GACAtxH,KAAAmvH,eAAAhV,YAAAmX,IAMA5C,EAAAhwH,UAAAi/G,KAAA,WAEA,OADAh3B,MACA36D,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C26D,EAAA36D,GAAAlgB,UAAAkgB,EAEA,IAAAo7D,GAAA,EACApnF,MAAAgvH,wBACA5nC,EAAApnF,KAAAgvH,sBAAAxhH,GAAA,KAEAwjD,EAAAjlD,UAAA,IAAAq7E,GAAAxmF,OAAA+lF,KAOA+nC,EAAAhwH,UAAA+xH,uBAAA,SAAAliG,EAAA6xD,EAAA0rC,GACAv9F,GACAs7D,GAAA,WACA,SAAAzJ,EACA7xD,EAAA,UAEA,CACA,GAAA6N,IAAAgkD,GAAA,SAAAxpC,cACAyc,EAAAj3B,CACA0vF,KACAz4D,GAAA,KAAAy4D,EACA,IAAAvU,GAAA,GAAApnG,OAAAkjD,EACAkkD,GAAAn7E,OACA7N,EAAAgpF,OAKAt5G,OAAAC,eAAAwwH,EAAAhwH,UAAA,YACAL,IAAA,WACA,MAAA2B,MAAAuxH,aAAAvxH,KAAAuxH,WAAA,GAAA3sC,IAAA5kF,QAEA5B,YAAA,EACAD,cAAA,IAEAuwH,KAwBA8C,GAAA,WAIA,QAAAA,GAAAryG,GACAnf,KAAAyxH,eAAA,GAAAxqB,IAAA9nF,EAAA09E,YACA78F,KAAAu7F,OAAAp8E,EAAA09E,WACA78F,KAAA0xH,WAAAF,EAAAG,cAAAxyG,GACAnf,KAAA4xH,SAAAJ,EAAAK,YAAA1yG,GAuGA,MAlGAqyG,GAAA9yH,UAAAozH,aAAA,WACA,MAAA9xH,MAAA0xH,YAKAF,EAAA9yH,UAAAqzH,WAAA,WACA,MAAA/xH,MAAA4xH,UAMAJ,EAAA9yH,UAAAizB,QAAA,SAAAxR,GACA,MAAAngB,MAAAu7F,OAAAxK,QAAA/wF,KAAA8xH,eAAA3xG,IAAA,GACAngB,KAAAu7F,OAAAxK,QAAA5wE,EAAAngB,KAAA+xH,eAAA,GAKAP,EAAA9yH,UAAA8zF,YAAA,SAAAyI,EAAAn5F,EAAA0hG,EAAA0D,EAAAt6F,EAAAu6F,GAIA,MAHAnnG,MAAA2xB,QAAA,GAAA+xD,IAAA5hF,EAAA0hG,MACAA,EAAA5gB,GAAAC,YAEA7iF,KAAAyxH,eAAAj/B,YAAAyI,EAAAn5F,EAAA0hG,EAAA0D,EAAAt6F,EAAAu6F,IAKAqqB,EAAA9yH,UAAA2oG,eAAA,SAAAjB,EAAAkB,EAAAH,GACAG,EAAAnkB,eAEAmkB,EAAA1kB,GAAAC,WAEA,IAAA+iB,GAAA0B,EAAAhU,UAAAtzF,KAAAu7F,OAEAqK,KAAAviB,eAAAT,GAAAC,WACA,IAAAx9B,GAAArlD,IAMA,OALAsnG,GAAAzhG,aAAAk+E,GAAA,SAAAjiF,EAAAuwB,GACAgzB,EAAA1zB,QAAA,GAAA+xD,IAAA5hF,EAAAuwB,MACAuzE,IAAAxiB,qBAAAthF,EAAA8gF,GAAAC,eAGA7iF,KAAAyxH,eAAApqB,eAAAjB,EAAAR,EAAAuB,IAKAqqB,EAAA9yH,UAAA2kF,eAAA,SAAA+iB,EAAAnN,GAEA,MAAAmN,IAKAorB,EAAA9yH,UAAA6oG,aAAA,WACA,UAKAiqB,EAAA9yH,UAAA8oG,iBAAA,WACA,MAAAxnG,MAAAyxH,gBAKAD,EAAA9yH,UAAAm+F,SAAA,WACA,MAAA78F,MAAAu7F,QAOAi2B,EAAAG,cAAA,SAAAxyG,GACA,GAAAA,EAAA++E,WAAA,CACA,GAAA8zB,GAAA7yG,EAAAq/E,mBACA,OAAAr/E,GAAA09E,WAAApL,SAAAtyE,EAAAg/E,qBAAA6zB,GAGA,MAAA7yG,GAAA09E,WAAAzL,WAQAogC,EAAAK,YAAA,SAAA1yG,GACA,GAAAA,EAAAi/E,SAAA,CACA,GAAA6zB,GAAA9yG,EAAAs/E,iBACA,OAAAt/E,GAAA09E,WAAApL,SAAAtyE,EAAAk/E,mBAAA4zB,GAGA,MAAA9yG,GAAA09E,WAAArL,WAGAggC,KAwBAU,GAAA,WAIA,QAAAA,GAAA/yG,GACAnf,KAAAmyH,cAAA,GAAAX,IAAAryG,GACAnf,KAAAu7F,OAAAp8E,EAAA09E,WACA78F,KAAAoyH,OAAAjzG,EAAAkzG,WACAryH,KAAAsyH,UAAAnzG,EAAAozG,iBA0NA,MArNAL,GAAAxzH,UAAA8zF,YAAA,SAAAyI,EAAAn5F,EAAA0hG,EAAA0D,EAAAt6F,EAAAu6F,GAIA,MAHAnnG,MAAAmyH,cAAAxgG,QAAA,GAAA+xD,IAAA5hF,EAAA0hG,MACAA,EAAA5gB,GAAAC,YAEAoY,EAAA9I,kBAAArwF,GAAA0pF,OAAAgY,GAEAvI,EAEAA,EAAAvI,cAAA1yF,KAAAoyH,OACApyH,KAAAmyH,cACA3qB,mBACAhV,YAAAyI,EAAAn5F,EAAA0hG,EAAA0D,EAAAt6F,EAAAu6F,GAGAnnG,KAAAwyH,sBAAAv3B,EAAAn5F,EAAA0hG,EAAA52F,EAAAu6F,IAMA+qB,EAAAxzH,UAAA2oG,eAAA,SAAAjB,EAAAkB,EAAAH,GACA,GAAAvB,EACA,IAAA0B,EAAAnkB,cAAAmkB,EAAAzvC,UAEA+tC,EAAAhjB,GAAAC,WAAAyQ,UAAAtzF,KAAAu7F,YAGA,MAAAv7F,KAAAoyH,OAAA9qB,EAAA5U,eACA4U,EAAA/T,UAAAvzF,KAAAu7F,QAAA,CAEAqK,EAAAhjB,GAAAC,WAAAyQ,UAAAtzF,KAAAu7F,OAEA,IAAA99B,OAAA,EAEAA,GADAz9D,KAAAsyH,SACAhrB,EAAAjR,uBAAAr2F,KAAAmyH,cAAAJ,aAAA/xH,KAAAu7F,QAGA+L,EAAAlR,gBAAAp2F,KAAAmyH,cAAAL,eAAA9xH,KAAAu7F,OAGA,KADA,GAAA1oB,GAAA,EACApV,EAAA02B,WAAAthB,EAAA7yE,KAAAoyH,QAAA,CACA,GAAAh3F,GAAAqiC,EAAAy2B,UACAu+B,MAAA,EASA,MAPAA,EADAzyH,KAAAsyH,SAEAtyH,KAAAu7F,OAAAxK,QAAA/wF,KAAAmyH,cAAAL,eAAA12F,IAAA,EAIAp7B,KAAAu7F,OAAAxK,QAAA31D,EAAAp7B,KAAAmyH,cAAAJ,eAAA,GAQA,KALAnsB,KAAAxiB,qBAAAhoD,EAAAt9B,KAAAs9B,EAAAjb,MACA0yD,SAQA,CAEA+yB,EAAA0B,EAAAhU,UAAAtzF,KAAAu7F,QAEAqK,IAAAviB,eAAAT,GAAAC,WACA,IAAAkX,OAAA,GACAC,MAAA,GACAzO,MAAA,GACA9tB,MAAA,EACA,IAAAz9D,KAAAsyH,SAAA,CACA70D,EAAAmoC,EAAAtP,mBAAAt2F,KAAAu7F,QACAxB,EAAA/5F,KAAAmyH,cAAAJ,aACA/3B,EAAAh6F,KAAAmyH,cAAAL,cACA,IAAAY,GAAA1yH,KAAAu7F,OAAAvX,YACAuH,GAAA,SAAAv3E,EAAAU,GAA2C,MAAAg+G,GAAAh+G,EAAAV,QAG3CypD,GAAAmoC,EAAA1P,YAAAl2F,KAAAu7F,QACAxB,EAAA/5F,KAAAmyH,cAAAL,eACA93B,EAAAh6F,KAAAmyH,cAAAJ,aACAxmC,EAAAvrF,KAAAu7F,OAAAvX,YAIA,KAFA,GAAAnR,GAAA,EACA8/C,GAAA,EACAl1D,EAAA02B,WAAA,CACA,GAAA/4D,GAAAqiC,EAAAy2B,WACAy+B,GAAApnC,EAAAwO,EAAA3+D,IAAA,IAEAu3F,GAAA,EAEA,IAAAF,GAAAE,GAAA9/C,EAAA7yE,KAAAoyH,QAAA7mC,EAAAnwD,EAAA4+D,IAAA,CACAy4B,GACA5/C,IAGA+yB,IAAAxiB,qBAAAhoD,EAAAt9B,KAAA8kF,GAAAC,aAKA,MAAA7iF,MAAAmyH,cACA3qB,mBACAH,eAAAjB,EAAAR,EAAAuB,IAKA+qB,EAAAxzH,UAAA2kF,eAAA,SAAA+iB,EAAAnN,GAEA,MAAAmN,IAKA8rB,EAAAxzH,UAAA6oG,aAAA,WACA,UAKA2qB,EAAAxzH,UAAA8oG,iBAAA,WACA,MAAAxnG,MAAAmyH,cAAA3qB,oBAKA0qB,EAAAxzH,UAAAm+F,SAAA,WACA,MAAA78F,MAAAu7F,QAWA22B,EAAAxzH,UAAA8zH,sBAAA,SAAAv3B,EAAA8F,EAAAmC,EAAAt2F,EAAAgmH,GAEA,GAAArnC,EACA,IAAAvrF,KAAAsyH,SAAA,CACA,GAAAO,GAAA7yH,KAAAu7F,OAAAvX,YACAuH,GAAA,SAAAv3E,EAAAU,GAAmC,MAAAm+G,GAAAn+G,EAAAV,QAGnCu3E,GAAAvrF,KAAAu7F,OAAAvX,YAEA,IAAA4oB,GAAA3R,CACAh/C,GAAAkX,OAAAy5C,EAAAla,eAAA1yF,KAAAoyH,OAAA,GACA,IAAAU,GAAA,GAAApvC,IAAAqd,EAAAmC,GACA6vB,EAAA/yH,KAAAsyH,SACA1lB,EAAAjT,cAAA35F,KAAAu7F,QACAqR,EAAA/S,aAAA75F,KAAAu7F,QACAk3B,EAAAzyH,KAAAmyH,cAAAxgG,QAAAmhG,EACA,IAAAlmB,EAAAva,SAAA0O,GAAA,CAGA,IAFA,GAAAiyB,GAAApmB,EAAAza,kBAAA4O,GACAmD,EAAAt3F,EAAAo7F,mBAAAhoG,KAAAu7F,OAAAw3B,EAAA/yH,KAAAsyH,UACA,MAAApuB,IACAA,EAAApmG,MAAAijG,GAAA6L,EAAAva,SAAA6R,EAAApmG,QAIAomG,EAAAt3F,EAAAo7F,mBAAAhoG,KAAAu7F,OAAA2I,EAAAlkG,KAAAsyH,SAEA,IAAAW,GAAA,MAAA/uB,EAAA,EAAA3Y,EAAA2Y,EAAA4uB,EAEA,IADAL,IAAAvvB,EAAArrC,WAAAo7D,GAAA,EAKA,MAHA,OAAAL,GACAA,EAAAxrB,iBAAAjB,GAAAQ,mBAAA5F,EAAAmC,EAAA8vB,IAEApmB,EAAAxpB,qBAAA2d,EAAAmC,EAGA,OAAA0vB,GACAA,EAAAxrB,iBAAAjB,GAAAM,mBAAA1F,EAAAiyB,GAEA,IAAAvoB,GAAAmC,EAAAxpB,qBAAA2d,EAAAne,GAAAC,WAEA,OADA,OAAAqhB,GAAAlkG,KAAAmyH,cAAAxgG,QAAAuyE,IAEA,MAAA0uB,GACAA,EAAAxrB,iBAAAjB,GAAAI,iBAAArC,EAAApmG,KAAAomG,EAAA/jF,OAEAsqF,EAAArnB,qBAAA8gB,EAAApmG,KAAAomG,EAAA/jF,OAGAsqF,EAIA,MAAAvH,GAAArrC,UAEAojC,EAEAw3B,GACAlnC,EAAAwnC,EAAAD,IAAA,GACA,MAAAF,IACAA,EAAAxrB,iBAAAjB,GAAAM,mBAAAssB,EAAAj1H,KAAAi1H,EAAA5yG,OACAyyG,EAAAxrB,iBAAAjB,GAAAI,iBAAAxF,EAAAmC,KAEA0J,EACAxpB,qBAAA2d,EAAAmC,GACA9f,qBAAA2vC,EAAAj1H,KAAA8kF,GAAAC,aAOAoY,GAGAi3B,KAwBAgB,GAAA,WACA,QAAAA,KACAlzH,KAAAmzH,WAAA,EACAnzH,KAAAozH,WAAA,EACApzH,KAAAqzH,eAAA,EACArzH,KAAAszH,SAAA,EACAtzH,KAAAuzH,aAAA,EACAvzH,KAAAoyH,OAAA,EACApyH,KAAAwzH,UAAA,GACAxzH,KAAAyzH,iBAAA,KACAzzH,KAAA0zH,gBAAA,GACA1zH,KAAA2zH,eAAA,KACA3zH,KAAA4zH,cAAA,GACA5zH,KAAAu7F,OAAAxX,GAmWA,MA9VAmvC,GAAAx0H,UAAAw/F,SAAA,WACA,MAAAl+F,MAAAozH,WAKAF,EAAAx0H,UAAA6zH,eAAA,WACA,WAAAvyH,KAAAwzH,UAKAxzH,KAAAozH,UAGApzH,KAAAwzH,YAAAN,EAAAW,yBAAAC,gBAOAZ,EAAAx0H,UAAAy/F,mBAAA,WAEA,MADAliD,GAAAkX,OAAAnzD,KAAAozH,UAAA,oCACApzH,KAAAyzH,kBAOAP,EAAAx0H,UAAA8/F,kBAAA,WAEA,MADAviD,GAAAkX,OAAAnzD,KAAAozH,UAAA,oCACApzH,KAAAqzH,cACArzH,KAAA0zH,gBAGA3rC,GAMAmrC,EAAAx0H,UAAA0/F,OAAA,WACA,MAAAp+F,MAAAszH,SAMAJ,EAAAx0H,UAAA2/F,iBAAA,WAEA,MADApiD,GAAAkX,OAAAnzD,KAAAszH,QAAA,kCACAtzH,KAAA2zH,gBAOAT,EAAAx0H,UAAA+/F,gBAAA,WAEA,MADAxiD,GAAAkX,OAAAnzD,KAAAszH,QAAA,kCACAtzH,KAAAuzH,YACAvzH,KAAA4zH,cAGA5rC,GAMAkrC,EAAAx0H,UAAAigG,SAAA,WACA,MAAA3+F,MAAAmzH,WAKAD,EAAAx0H,UAAAkgG,iBAAA,WACA,MAAA5+F,MAAAmzH,WAAA,KAAAnzH,KAAAwzH,WAMAN,EAAAx0H,UAAA2zH,SAAA,WAEA,MADAp2E,GAAAkX,OAAAnzD,KAAAmzH,UAAA,oCACAnzH,KAAAoyH,QAKAc,EAAAx0H,UAAAm+F,SAAA,WACA,MAAA78F,MAAAu7F,QAMA23B,EAAAx0H,UAAAq1H,MAAA,WACA,GAAAv/B,GAAA,GAAA0+B,EAaA,OAZA1+B,GAAA2+B,UAAAnzH,KAAAmzH,UACA3+B,EAAA49B,OAAApyH,KAAAoyH,OACA59B,EAAA4+B,UAAApzH,KAAAozH,UACA5+B,EAAAi/B,iBAAAzzH,KAAAyzH,iBACAj/B,EAAA6+B,cAAArzH,KAAAqzH,cACA7+B,EAAAk/B,gBAAA1zH,KAAA0zH,gBACAl/B,EAAA8+B,QAAAtzH,KAAAszH,QACA9+B,EAAAm/B,eAAA3zH,KAAA2zH,eACAn/B,EAAA++B,YAAAvzH,KAAAuzH,YACA/+B,EAAAo/B,cAAA5zH,KAAA4zH,cACAp/B,EAAA+G,OAAAv7F,KAAAu7F,OACA/G,EAAAg/B,UAAAxzH,KAAAwzH,UACAh/B,GAMA0+B,EAAAx0H,UAAAghG,MAAA,SAAAs0B,GACA,GAAAl0B,GAAA9/F,KAAA+zH,OAIA,OAHAj0B,GAAAqzB,WAAA,EACArzB,EAAAsyB,OAAA4B,EACAl0B,EAAA0zB,UAAA,GACA1zB,GAMAozB,EAAAx0H,UAAA+gG,aAAA,SAAAu0B,GACA,GAAAl0B,GAAA9/F,KAAA+zH,OAIA,OAHAj0B,GAAAqzB,WAAA,EACArzB,EAAAsyB,OAAA4B,EACAl0B,EAAA0zB,UAAAN,EAAAW,yBAAAC,eACAh0B,GAMAozB,EAAAx0H,UAAAihG,YAAA,SAAAq0B,GACA,GAAAl0B,GAAA9/F,KAAA+zH,OAIA,OAHAj0B,GAAAqzB,WAAA,EACArzB,EAAAsyB,OAAA4B,EACAl0B,EAAA0zB,UAAAN,EAAAW,yBAAAI,gBACAn0B,GAOAozB,EAAAx0H,UAAAyhG,QAAA,SAAAzO,EAAA5vF,GACA,GAAAg+F,GAAA9/F,KAAA+zH,OAcA,OAbAj0B,GAAAszB,WAAA,MACA9gH,KAAAo/E,IACAA,EAAA,MAEAoO,EAAA2zB,iBAAA/hC,EACA,MAAA5vF,GACAg+F,EAAAuzB,eAAA,EACAvzB,EAAA4zB,gBAAA5xH,IAGAg+F,EAAAuzB,eAAA,EACAvzB,EAAA4zB,gBAAA,IAEA5zB,GAOAozB,EAAAx0H,UAAA0hG,MAAA,SAAA1O,EAAA5vF,GACA,GAAAg+F,GAAA9/F,KAAA+zH,OAcA,OAbAj0B,GAAAwzB,SAAA,MACAhhH,KAAAo/E,IACAA,EAAA,MAEAoO,EAAA6zB,eAAAjiC,MACAp/E,KAAAxQ,GACAg+F,EAAAyzB,aAAA,EACAzzB,EAAA8zB,cAAA9xH,IAGAg+F,EAAAyzB,aAAA,EACAzzB,EAAA8zB,cAAA,IAEA9zB,GAMAozB,EAAAx0H,UAAAqhG,QAAA,SAAAzwF,GACA,GAAAwwF,GAAA9/F,KAAA+zH,OAEA,OADAj0B,GAAAvE,OAAAjsF,EACAwwF,GAKAozB,EAAAx0H,UAAA6hG,eAAA,WACA,GAAA2zB,GAAAhB,EAAAW,yBACAnyH,IAaA,IAZA1B,KAAAozH,YACA1xH,EAAAwyH,EAAAC,mBAAAn0H,KAAAyzH,iBACAzzH,KAAAqzH,gBACA3xH,EAAAwyH,EAAAE,kBAAAp0H,KAAA0zH,kBAGA1zH,KAAAszH,UACA5xH,EAAAwyH,EAAAG,iBAAAr0H,KAAA2zH,eACA3zH,KAAAuzH,cACA7xH,EAAAwyH,EAAAI,gBAAAt0H,KAAA4zH,gBAGA5zH,KAAAmzH,UAAA,CACAzxH,EAAAwyH,EAAAK,OAAAv0H,KAAAoyH,MACA,IAAAoC,GAAAx0H,KAAAwzH,SACA,MAAAgB,IAEAA,EADAx0H,KAAAuyH,iBACA2B,EAAAJ,eAGAI,EAAAD,iBAGAvyH,EAAAwyH,EAAAO,WAAAD,EAMA,MAHAx0H,MAAAu7F,SAAAxX,KACAriF,EAAAwyH,EAAAQ,OAAA10H,KAAAu7F,OAAAluF,YAEA3L,GAKAwxH,EAAAx0H,UAAA8vG,aAAA,WACA,QAAAxuG,KAAAozH,WAAApzH,KAAAszH,SAAAtzH,KAAAmzH,YAKAD,EAAAx0H,UAAAw4G,UAAA,WACA,MAAAl3G,MAAAwuG,gBAAAxuG,KAAAu7F,QAAAxX,IAKAmvC,EAAAx0H,UAAAuvG,cAAA,WACA,MAAAjuG,MAAAwuG,eACA,GAAAvH,IAAAjnG,KAAA68F,YAEA78F,KAAA2+F,WACA,GAAAuzB,IAAAlyH,MAGA,GAAAwxH,IAAAxxH,OAQAkzH,EAAAx0H,UAAA0vH,4BAAA,WACA,GAAAuG,GAAAzB,EAAA0B,sBACAC,IACA,IAAA70H,KAAAk3G,YACA,MAAA2d,EAEA,IAAA90B,EAmCA,OAlCA//F,MAAAu7F,SAAAxX,GACAgc,EAAA40B,EAAA5wC,eAEA/jF,KAAAu7F,SAAAV,GACAkF,EAAA40B,EAAA95B,YAEA76F,KAAAu7F,SAAA5J,GACAoO,EAAA40B,EAAAhjC,WAGA11C,EAAAkX,OAAAnzD,KAAAu7F,iBAAAT,IAAA,4BACAiF,EAAA//F,KAAAu7F,OAAAluF,YAEAwnH,EAAAF,EAAAG,UAAA74E,EAAA9uC,UAAA4yF,GACA//F,KAAAozH,YACAyB,EAAAF,EAAAI,UAAA94E,EAAA9uC,UAAAnN,KAAAyzH,kBACAzzH,KAAAqzH,gBACAwB,EAAAF,EAAAI,WAAA,IAAA94E,EAAA9uC,UAAAnN,KAAA0zH,mBAGA1zH,KAAAszH,UACAuB,EAAAF,EAAAK,QAAA/4E,EAAA9uC,UAAAnN,KAAA2zH,gBACA3zH,KAAAuzH,cACAsB,EAAAF,EAAAK,SAAA,IAAA/4E,EAAA9uC,UAAAnN,KAAA4zH,iBAGA5zH,KAAAmzH,YACAnzH,KAAAuyH,iBACAsC,EAAAF,EAAAM,gBAAAj1H,KAAAoyH,OAGAyC,EAAAF,EAAAO,eAAAl1H,KAAAoyH,QAGAyC,GAQA3B,EAAAW,0BACAM,kBAAA,KACAC,iBAAA,KACAC,gBAAA,KACAC,eAAA,KACAC,MAAA,IACAE,UAAA,KACAX,eAAA,IACAG,gBAAA,IACAS,MAAA,KAQAxB,EAAA0B,uBACAE,SAAA,UACA/wC,eAAA,YACA8W,YAAA,SACAlJ,UAAA,OACAojC,SAAA,UACAC,OAAA,QACAC,eAAA,eACAC,cAAA,eAOAhC,EAAAh6C,QAAA,GAAAg6C,GACAA,KAkBAxuC,GAAA,SAAA5rB,GAaA,QAAA4rB,GAAAkZ,EAAAx7F,GAEA,KAAAw7F,YAAA8wB,KACA,SAAAv+G,OAAA,4DAIA,OADA2oD,GAAAp7D,KAAAsC,KAAA49F,EAAAx7F,EAAA8wH,GAAAh6C,SAAA,IAAAl5E,KA6OA,MA/PA+yD,GAAAuG,UAAAorB,EAAA5rB,GAsBA4rB,EAAAhmF,UAAAm9F,OAAA,WAEA,MADA5/C,GAAA4e,iBAAA,oBAAA/uD,UAAApH,QACA1E,KAAAoC,KAAAy1D,UACA,KAEA73D,KAAAoC,KAAAsoF,WAMAhG,EAAAhmF,UAAAoH,MAAA,SAAA+7E,GAWA,MAVA5lC,GAAA4e,iBAAA,sBAAA/uD,UAAApH,QACA,gBAAAm9E,GACAA,EAAA5uE,OAAA4uE,GAEAA,YAAAoI,MACA,OAAAjqF,KAAAoC,KAAAmoF,WACA6E,GAAA,oBAAAvN,GAAA,GAEAsN,GAAA,oBAAAtN,GAAA,IAEA,GAAA6C,GAAA1kF,KAAA49F,KAAA59F,KAAAoC,KAAA0D,MAAA+7E,KAGA6C,EAAAhmF,UAAAy9F,UAAA,WACAlgD,EAAA4e,iBAAA,uBAAA/uD,UAAApH,OACA,IAAAywH,GAAAn1H,KAAAoC,KAAAjC,QACA,eAAAg1H,EAAA,QAAAzwC,GAAA1kF,KAAA49F,KAAAu3B,IAGAzwC,EAAAhmF,UAAA02H,QAAA,WACAn5E,EAAA4e,iBAAA,qBAAA/uD,UAAApH,OAEA,KADA,GAAA+F,GAAAzK,KACA,OAAAyK,EAAA0xF,aACA1xF,IAAA0xF,WAEA,OAAA1xF,IAGAi6E,EAAAhmF,UAAA22H,aAAA,WACA,MAAAr1H,MAAA49F,KAAA5zB,UAOA0a,EAAAhmF,UAAAwG,IAAA,SAAA8T,EAAA42E,GACA3zC,EAAA4e,iBAAA,oBAAA/uD,UAAApH,QACA2qF,GAAA,gBAAArvF,KAAAoC,MACAisF,GAAA,kBAAAr1E,EAAAhZ,KAAAoC,MAAA,GACA65C,EAAA4W,iBAAA,kBAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAGA,OAFAn2D,MAAA49F,KAAA7N,gBAAA/vF,KAAAoC,KAAA4W,EACA,KAAAsxD,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAOAsuB,EAAAhmF,UAAAyD,OAAA,SAAA8tF,EAAAL,GAGA,GAFA3zC,EAAA4e,iBAAA,uBAAA/uD,UAAApH,QACA2qF,GAAA,mBAAArvF,KAAAoC,MACA0F,MAAAC,QAAAkoF,GAAA,CAEA,OADAC,MACA1yF,EAAA,EAA2BA,EAAAyyF,EAAAvrF,SAA0BlH,EACrD0yF,EAAA,GAAA1yF,GAAAyyF,EAAAzyF,EAEAyyF,GAAAC,EACAv2D,EAAA,wMAKAm1D,GAAA,qBAAAmB,EAAAjwF,KAAAoC,MAAA,GACA65C,EAAA4W,iBAAA,qBAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA49F,KAAAz7F,OAAAnC,KAAAoC,KAAA6tF,EAAA3lB,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAQAsuB,EAAAhmF,UAAAqxF,gBAAA,SAAA/2E,EAAAigF,EAAArJ,GAMA,GALA3zC,EAAA4e,iBAAA,gCAAA/uD,UAAApH,QACA2qF,GAAA,4BAAArvF,KAAAoC,MACAisF,GAAA,8BAAAr1E,EAAAhZ,KAAAoC,MAAA,GACA2sF,GAAA,8BAAAkK,GAAA,GACAh9C,EAAA4W,iBAAA,8BAAA+8B,GAAA,GACA,YAAA5vF,KAAA67F,UAAA,UAAA77F,KAAA67F,SACA,0CACA77F,KAAA67F,SACA,yBACA,IAAAvxB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA49F,KAAA7N,gBAAA/vF,KAAAoC,KAAA4W,EAAAigF,EAAA3uB,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAMAsuB,EAAAhmF,UAAA6P,OAAA,SAAAqhF,GAIA,MAHA3zC,GAAA4e,iBAAA,uBAAA/uD,UAAApH,QACA2qF,GAAA,mBAAArvF,KAAAoC,MACA65C,EAAA4W,iBAAA,qBAAA+8B,GAAA,GACA5vF,KAAAkF,IAAA,KAAA0qF,IAQAlL,EAAAhmF,UAAA42H,YAAA,SAAAC,EAAA3lC,EAAA4lC,GAQA,GAPAv5E,EAAA4e,iBAAA,4BAAA/uD,UAAApH,QACA2qF,GAAA,wBAAArvF,KAAAoC,MACA65C,EAAA4W,iBAAA,0BAAA0iE,GAAA,GACAt5E,EAAA4W,iBAAA,0BAAA+8B,GAAA,GAGAL,GAAA,0BAAAimC,GAAA,GACA,YAAAx1H,KAAA67F,UAAA,UAAA77F,KAAA67F,SACA,sCACA77F,KAAA67F,SACA,8BACAvpF,KAAAkjH,IACAA,GAAA,EACA,IAAAlrD,GAAA,GAAAruB,GAAAka,QACA,mBAAAy5B,IACAtlB,EAAAlU,QAAAlvD,MAAA,aAEA,IAAAuuH,GAAA,SAAAle,EAAAlnB,EAAA9mB,GACAguC,EACAjtC,EAAA1oD,OAAA21F,GAGAjtC,EAAArjE,QAAA,GAAAmpF,IAAAC,EAAA9mB,IAEA,kBAAAqmB,IACAA,EAAA2nB,EAAAlnB,EAAA9mB,GAIA,OADAvpE,MAAA49F,KAAA83B,iBAAA11H,KAAAoC,KAAAmzH,EAAAE,EAAAD,GACAlrD,EAAAlU,SAOAsuB,EAAAhmF,UAAAi3H,YAAA,SAAAhzC,EAAAiN,GACA3zC,EAAA4e,iBAAA,4BAAA/uD,UAAApH,QACA2qF,GAAA,wBAAArvF,KAAAoC,MACA2sF,GAAA,0BAAApM,GAAA,GACA1mC,EAAA4W,iBAAA,0BAAA+8B,GAAA,EACA,IAAAtlB,GAAA,GAAAruB,GAAAka,QAEA,OADAn2D,MAAA49F,KAAA7N,gBAAA/vF,KAAAoC,KAAA0D,MAAA,aAAA68E,EAAA,KAAArY,EAAAjU,aAAAu5B,IACAtlB,EAAAlU,SAOAsuB,EAAAhmF,UAAAiE,KAAA,SAAAgQ,EAAAi9E,GACA3zC,EAAA4e,iBAAA,qBAAA/uD,UAAApH,QACA2qF,GAAA,iBAAArvF,KAAAoC,MACAisF,GAAA,mBAAA17E,EAAA3S,KAAAoC,MAAA,GACA65C,EAAA4W,iBAAA,mBAAA+8B,GAAA,EACA,IASAx5B,GATAgB,EAAAp3D,KAAA49F,KAAA8xB,aACA5xH,EAAAyyF,GAAAn5B,GAMAw+D,EAAA51H,KAAA8F,MAAAhI,GACA+3H,EAAA71H,KAAA8F,MAAAhI,EAaA,OAVAs4D,GADA,MAAAzjD,EACAijH,EAAA1wH,IAAAyN,EAAAi9E,GAAA1tF,KAAA,WAAgF,MAAA2zH,KAGhF7uH,QAAAC,QAAA4uH,GAEAD,EAAA1zH,KAAAk0D,EAAAl0D,KAAA+J,KAAAmqD,GACAw/D,EAAA1uH,MAAAkvD,EAAAl0D,KAAA+J,KAAAmqD,MAAA9jD,IACA,kBAAAs9E,IACAx5B,EAAAlvD,MAAA,cAEA0uH,GAKAlxC,EAAAhmF,UAAAq/G,aAAA,WAEA,MADA1uB,IAAA,yBAAArvF,KAAAoC,MACA,GAAAqtF,IAAAzvF,KAAA49F,KAAA59F,KAAAoC,OAEAnE,OAAAC,eAAAwmF,EAAAhmF,UAAA,YACAL,IAAA,WACA,MAAA2B,MAAAq1H,gBAEAj3H,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAwmF,EAAAhmF,UAAA,OACAL,IAAA,WACA,MAAA2B,MAAA67F,UAEAz9F,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAwmF,EAAAhmF,UAAA,UACAL,IAAA,WACA,MAAA2B,MAAAm8F,aAEA/9F,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAwmF,EAAAhmF,UAAA,QACAL,IAAA,WACA,MAAA2B,MAAAo1H,WAEAh3H,YAAA,EACAD,cAAA,IAEAumF,GACCC,GAODA,IAAA8V,uBAAA/V,GACAwqB,GAAAzU,uBAAA/V,EAoBA,IA+NAoxC,IA/NAC,GAAA,WACA,QAAAA,KAGA/1H,KAAA4W,YACA5W,KAAAg2H,WAAA,EACAh2H,KAAA2S,MAAA,KAEA,MAAAojH,MAOAE,GAAA,WAOA,QAAAA,GAAAnmE,EAAAomE,EAAA76B,OACA,KAAAvrC,IAA+BA,EAAA,QAC/B,KAAAomE,IAAiCA,EAAA,UACjC,KAAA76B,IAA+BA,EAAA,GAAA06B,KAC/B/1H,KAAA8vD,QACA9vD,KAAAk2H,UACAl2H,KAAAq7F,QA0KA,MAlKA46B,GAAAv3H,UAAAy3H,QAAA,SAAAC,GAIA,IAFA,GACAh7F,GADAh5B,EAAAg0H,YAAAnsC,IAAAmsC,EAAA,GAAAnsC,IAAAmsC,GACAtwH,EAAA9F,KACA,QAAAo7B,EAAAh5B,EAAAmoF,aAAA,CAEAzkF,EAAA,GAAAmwH,GAAA76F,EAAAt1B,EADAm2C,EAAAwb,QAAA3xD,EAAAu1F,MAAAzkF,SAAAwkB,IAAA,GAAA26F,KAEA3zH,IAAAqoF,WAEA,MAAA3kF,IAOAmwH,EAAAv3H,UAAAqmC,SAAA,WACA,MAAA/kC,MAAAq7F,MAAA1oF,OAOAsjH,EAAAv3H,UAAA23H,SAAA,SAAA1jH,GACAspC,EAAAkX,WAAA,KAAAxgD,EAAA,iCACA3S,KAAAq7F,MAAA1oF,QACA3S,KAAAs2H,kBAKAL,EAAAv3H,UAAAwf,MAAA,WACAle,KAAAq7F,MAAA1oF,MAAA,KACA3S,KAAAq7F,MAAAzkF,YACA5W,KAAAq7F,MAAA26B,WAAA,EACAh2H,KAAAs2H,kBAKAL,EAAAv3H,UAAAkmB,YAAA,WACA,MAAA5kB,MAAAq7F,MAAA26B,WAAA,GAKAC,EAAAv3H,UAAAm5D,QAAA,WACA,cAAA73D,KAAA+kC,aAAA/kC,KAAA4kB,eAOAqxG,EAAAv3H,UAAAmH,aAAA,SAAAL,GACA,GAAAgkD,GAAAxpD,IACAi8C,GAAAp6C,QAAA7B,KAAAq7F,MAAAzkF,SAAA,SAAA9Q,EAAAwxF,GACA9xF,EAAA,GAAAywH,GAAAnwH,EAAA0jD,EAAA8tC,OAYA2+B,EAAAv3H,UAAA63H,kBAAA,SAAA/wH,EAAAgxH,EAAAC,GACAD,IAAAC,GACAjxH,EAAAxF,MACAA,KAAA6F,aAAA,SAAAC,GACAA,EAAAywH,kBAAA/wH,GAAA,EAAAixH,KAEAD,GAAAC,GACAjxH,EAAAxF,OAUAi2H,EAAAv3H,UAAAg4H,gBAAA,SAAAlxH,EAAAgxH,GAEA,IADA,GAAAr2G,GAAAq2G,EAAAx2H,UAAAG,SACA,OAAAggB,GAAA,CACA,GAAA3a,EAAA2a,GACA,QAEAA,KAAAhgB,SAEA,UASA81H,EAAAv3H,UAAAi4H,oCAAA,SAAAnxH,GACAxF,KAAA6F,aAAA,SAAAC,GACA,OAAAA,EAAAi/B,WACAv/B,EAAAM,GAEAA,EAAA6wH,oCAAAnxH,MAMAywH,EAAAv3H,UAAA0D,KAAA,WACA,UAAA6nF,IAAA,OAAAjqF,KAAAk2H,QACAl2H,KAAA8vD,MACA9vD,KAAAk2H,QAAA9zH,OAAA,IAAApC,KAAA8vD,QAKAmmE,EAAAv3H,UAAAZ,KAAA,WACA,MAAAkC,MAAA8vD,OAKAmmE,EAAAv3H,UAAAyB,OAAA,WACA,MAAAH,MAAAk2H,SAOAD,EAAAv3H,UAAA43H,eAAA,WACA,OAAAt2H,KAAAk2H,SACAl2H,KAAAk2H,QAAAU,aAAA52H,KAAA8vD,MAAA9vD,OASAi2H,EAAAv3H,UAAAk4H,aAAA,SAAAxkC,EAAAtsF,GACA,GAAA+wH,GAAA/wH,EAAA+xD,UACAi/D,EAAA76E,EAAA4R,SAAA7tD,KAAAq7F,MAAAzkF,SAAAw7E,EACAykC,IAAAC,SACA92H,MAAAq7F,MAAAzkF,SAAAw7E,GACApyF,KAAAq7F,MAAA26B,aACAh2H,KAAAs2H,kBAEAO,GAAAC,IACA92H,KAAAq7F,MAAAzkF,SAAAw7E,GAAAtsF,EAAAu1F,MACAr7F,KAAAq7F,MAAA26B,aACAh2H,KAAAs2H,mBAGAL,MA0BA,SAAAH,GAIAA,IAAA,aAGAA,IAAA,eAGAA,IAAA,yBAGAA,IAAA,uCAEAA,IAAA,8BACCA,aAQDpH,GAAAqI,yBAAA,GAKArI,GAAAhwH,UAAA0wH,mBAAA,WAOApvH,KAAAg3H,sBAAA,GAAAf,KAUAvH,GAAAhwH,UAAAg3H,iBAAA,SAAAtzH,EAAAmzH,EAAA3lC,EAAA4lC,GACAx1H,KAAA29G,KAAA,kBAAAv7G,EAEA,IAAA60H,GAAA,aACAC,EAAA,GAAAxyC,IAAA1kF,KAAAoC,EACA80H,GAAA/1H,GAAA,QAAA81H,EACA,IAAAE,GAAA,WACAD,EAAAxuE,IAAA,QAAAuuE,IAGA3B,GACAlzH,OACAD,OAAAozH,EACA3lC,aAEAxP,OAAA,KAEAg3C,MAAA7wC,IAEAivC,eAEA6B,WAAA,EAEAF,YAEAG,YAAA,KACAC,eAAA,KACAC,qBAAA,KACAC,yBAAA,KACAC,8BAAA,MAGAC,EAAA33H,KAAA43H,gBAAAx1H,EACAkzH,GAAAkC,qBAAAG,CACA,IAAA3+G,GAAAs8G,EAAAnzH,OAAAw1H,EAAA11H,MACA,QAAAqQ,KAAA0G,GAKA,GAHAs8G,EAAA6B,YACA7B,EAAAmC,yBAAA,KACAnC,EAAAoC,8BAAA,KACApC,EAAA1lC,WAAA,CAEA,GAAArmB,GAAA,GAAA6xB,IAAAk6B,EAAAkC,qBAAA,GAAA9yC,IAAA1kF,KAAAs1H,EAAAlzH,MAAA2hF,GACAuxC,GAAA1lC,WAAA,QAAArmB,QAGA,CACA+kB,GAAA,qCAAAt1E,EAAAs8G,EAAAlzH,MAEAkzH,EAAAl1C,OAAA01C,GAAA+B,GACA,IAAAC,GAAA93H,KAAAg3H,sBAAAb,QAAA/zH,GACA21H,EAAAD,EAAA/yF,cACAgzF,GAAAp1H,KAAA2yH,GACAwC,EAAAzB,SAAA0B,EAIA,IAAAC,OAAA,EACA,oBAAAh/G,IACA,OAAAA,GACAijC,EAAA4R,SAAA70C,EAAA,aACAg/G,EAAA/7E,EAAAwb,QAAAz+C,EAAA,aACAijC,EAAAkX,OAAAi7B,GAAA4pC,GAAA,wHAGA,CAGAA,GAFAh4H,KAAAyvH,gBAAA1kB,uBAAA3oG,IACAwgF,GAAAC,YACAY,cAAAxhF,MAEA+1H,EAAsDA,CACtD,IAAAx2B,GAAAxhG,KAAA6vH,uBACAS,EAAA5tC,EAAA1pE,EAAAg/G,GACArkG,EAAAguE,GAAA2uB,EAAA9uB,EACA8zB,GAAAmC,yBAAAnH,EACAgF,EAAAoC,8BAAA/jG,EACA2hG,EAAAiC,eAAAv3H,KAAAqwH,iBACA,IAAAv2F,GAAA95B,KAAAyvH,gBAAA1b,mBAAA3xG,EAAAuxB,EAAA2hG,EAAAiC,eAAAjC,EAAAE,aACAx1H,MAAA6uH,YAAA3T,0BAAA94G,EAAA03B,GACA95B,KAAAi4H,2BASAvJ,GAAAhwH,UAAAk5H,gBAAA,SAAAx1H,EAAA81H,GACA,MAAAl4H,MAAAyvH,gBAAA1kB,uBAAA3oG,EAAA81H,IACAt1C,GAAAC,YAYA6rC,GAAAhwH,UAAAu5H,uBAAA,SAAA93G,GACA,GAAAqpC,GAAAxpD,IAMA,QALA,KAAAmgB,IAA0BA,EAAAngB,KAAAg3H,uBAE1B72G,GACAngB,KAAAm4H,qCAAAh4G,GAEA,OAAAA,EAAA4kB,WAAA,CACA,GAAAhf,GAAA/lB,KAAAo4H,uBAAAj4G,EACA87B,GAAAkX,OAAAptC,EAAArhB,OAAA,0CACAqhB,GAAA/Q,MAAA,SAAAsgH,GAAyD,MAAAA,GAAAl1C,SAAA01C,GAAA+B,OAGzD73H,KAAAq4H,sBAAAl4G,EAAA/d,OAAA2jB,OAGA5F,GAAAyE,eACAzE,EAAAta,aAAA,SAAAwsB,GACAm3B,EAAAyuE,uBAAA5lG,MAWAq8F,GAAAhwH,UAAA25H,sBAAA,SAAAj2H,EAAA2jB,GASA,OARAyjC,GAAAxpD,KAEAs4H,EAAAvyG,EAAAle,IAAA,SAAA0wH,GACA,MAAAA,GAAAhB,iBAEAiB,EAAAx4H,KAAA43H,gBAAAx1H,EAAAk2H,GACAG,EAAAD,EACAE,EAAAF,EAAA34G,OACAriB,EAAA,EAAmBA,EAAAuoB,EAAArhB,OAAkBlH,IAAA,CACrC,GAAA+6H,GAAAxyG,EAAAvoB,EACAy+C,GAAAkX,OAAAolE,EAAAn4C,SAAA01C,GAAA+B,IAAA,iEACAU,EAAAn4C,OAAA01C,GAAA6C,KACAJ,EAAAlB,YACA,IAAAtsC,GAAAd,GAAAc,aAAA3oF,EAAAm2H,EAAAn2H,KAEAq2H,KAAAjmC,YAAAzH,EAAyEwtC,EAAAd,0BAEzE,GAAAmB,GAAAH,EAAAx2H,KAAA,GACA42H,EAAAz2H,CAEApC,MAAA+5G,QAAAiO,IAAA6Q,EAAAxrH,WAAAurH,EAAA,SAAAx4C,GACA52B,EAAAm0D,KAAA,4BACAv7G,KAAAy2H,EAAAxrH,WACA+yE,UAEA,IAAAtmD,KACA,WAAAsmD,EAAA,CAIA,OADA5iE,MACAhgB,EAAA,EAA2BA,EAAAuoB,EAAArhB,OAAkBlH,IAAA,CAG7C,GAFAuoB,EAAAvoB,GAAA4iF,OAAA01C,GAAAgD,UACAh/F,IAAAl5B,OAAA4oD,EAAAimE,gBAAA3lB,aAAA/jF,EAAAvoB,GAAA+5H,iBACAxxG,EAAAvoB,GAAAoyF,WAAA,CAEA,GAAAzvE,GAAA4F,EAAAvoB,GAAAk6H,8BACAjtH,EAAA,GAAAi6E,IAAAl7B,EAAAzjC,EAAAvoB,GAAA4E,MACAmnE,EAAA,GAAA6xB,IAAAj7E,EAAA1V,EAAAs5E,GACAvmE,GAAA7a,KAAAojB,EAAAvoB,GAAAoyF,WAAA3jF,KAAA,aAAAs9D,IAEAxjD,EAAAvoB,GAAA25H,YAGA3tE,EAAA2uE,qCAAA3uE,EAAAwtE,sBAAAb,QAAA/zH,IAEAonD,EAAAyuE,yBACAzuE,EAAAqlE,YAAA3T,0BAAA94G,EAAA03B,EAEA,QAAAt8B,GAAA,EAA2BA,EAAAggB,EAAA9Y,OAAsBlH,IACjDqsF,GAAArsE,EAAAhgB,QAGA,CAEA,iBAAA4iF,EACA,OAAA5iF,GAAA,EAA+BA,EAAAuoB,EAAArhB,OAAkBlH,IACjDuoB,EAAAvoB,GAAA4iF,SAAA01C,GAAAiD,iBACAhzG,EAAAvoB,GAAA4iF,OAAA01C,GAAAkD,YAEAjzG,EAAAvoB,GAAA4iF,OAAA01C,GAAA+B,QAGA,CACAl+F,EAAA,kBAAAk/F,EAAAxrH,WAAA,YAAA+yE,EACA,QAAA5iF,GAAA,EAA+BA,EAAAuoB,EAAArhB,OAAkBlH,IACjDuoB,EAAAvoB,GAAA4iF,OAAA01C,GAAAkD,YACAjzG,EAAAvoB,GAAA85H,YAAAl3C,EAGA52B,EAAAymE,mBAAA7tH,KAEKs2H,IAcLhK,GAAAhwH,UAAAuxH,mBAAA,SAAA9U,GACA,GAAA8d,GAAAj5H,KAAAk5H,4BAAA/d,GACA/4G,EAAA62H,EAAA72H,OACA2jB,EAAA/lB,KAAAo4H,uBAAAa,EAEA,OADAj5H,MAAAm5H,uBAAApzG,EAAA3jB,GACAA,GASAssH,GAAAhwH,UAAAy6H,uBAAA,SAAApzG,EAAA3jB,GACA,OAAA2jB,EAAArhB,OAAA,CAcA,OATA8Y,MACAsc,KAEAs/F,EAAArzG,EAAA/U,OAAA,SAAAitD,GACA,MAAAA,GAAAmiB,SAAA01C,GAAA+B,MAEAS,EAAAc,EAAAvxH,IAAA,SAAAo2D,GACA,MAAAA,GAAAs5D,iBAEA/5H,EAAA,EAAmBA,EAAAuoB,EAAArhB,OAAkBlH,IAAA,CACrC,GAAA83H,GAAAvvG,EAAAvoB,GACAutF,EAAAd,GAAAc,aAAA3oF,EAAAkzH,EAAAlzH,MACAi3H,GAAA,EAAA/B,MAAA,EAEA,IADAr7E,EAAAkX,OAAA,OAAA43B,EAAA,iEACAuqC,EAAAl1C,SAAA01C,GAAAkD,YACAK,GAAA,EACA/B,EAAAhC,EAAAgC,YACAx9F,IAAAl5B,OAAAZ,KAAAyvH,gBAAA3lB,aAAAwrB,EAAAiC,gBAAA,QAEA,IAAAjC,EAAAl1C,SAAA01C,GAAA+B,IACA,GAAAvC,EAAA+B,YAAA3I,GAAAqI,yBACAsC,GAAA,EACA/B,EAAA,WACAx9F,IAAAl5B,OAAAZ,KAAAyvH,gBAAA3lB,aAAAwrB,EAAAiC,gBAAA,QAEA,CAEA,GAAA+B,GAAAt5H,KAAA43H,gBAAAtC,EAAAlzH,KAAAk2H,EACAhD,GAAAkC,qBAAA8B,CACA,IAAAtlB,GAAAjuF,EAAAvoB,GAAA2E,OAAAm3H,EAAAr3H,MACA,QAAAqQ,KAAA0hG,EAAA,CACA1lB,GAAA,qCAAA0lB,EAAAshB,EAAAlzH,KACA,IAAAm3H,GAAA72C,EAAAsxB,GACAwlB,EAAA,gBAAAxlB,IACA,MAAAA,GACA/3D,EAAA4R,SAAAmmD,EAAA,YACAwlB,KAEAD,IAAAl2C,eAAAi2C,EAAA71C,eAEA,IAAAg2C,GAAAnE,EAAAiC,eACA/1B,EAAAxhG,KAAA6vH,uBACA6J,EAAA/3B,GAAA43B,EAAA/3B,EACA8zB,GAAAmC,yBAAA8B,EACAjE,EAAAoC,8BAAAgC,EACApE,EAAAiC,eAAAv3H,KAAAqwH,kBAEAiI,EAAA11H,OAAA01H,EAAA51H,QAAA+2H,GAAA,GACA3/F,IAAAl5B,OAAAZ,KAAAyvH,gBAAA1b,mBAAAuhB,EAAAlzH,KAAAs3H,EAAApE,EAAAiC,eAAAjC,EAAAE,eACA17F,IAAAl5B,OAAAZ,KAAAyvH,gBAAA3lB,aAAA2vB,GAAA,QAGAJ,IAAA,EACA/B,EAAA,SACAx9F,IAAAl5B,OAAAZ,KAAAyvH,gBAAA3lB,aAAAwrB,EAAAiC,gBAAA,IAMA,GAFAv3H,KAAA6uH,YAAA3T,0BAAA94G,EAAA03B,GACAA,KACAu/F,IAEAtzG,EAAAvoB,GAAA4iF,OAAA01C,GAAAgD,UAGA,SAAA3B,GACAn1G,WAAAm1G,EAAAjkH,KAAAC,MAAA,KACa4S,EAAAvoB,GAAA25H,WACbpxG,EAAAvoB,GAAAoyF,YACA,cAAA0nC,EAAA,CACA,GAAA7sH,GAAA,GAAAi6E,IAAA1kF,KAAA+lB,EAAAvoB,GAAA4E,MAEAu3H,EAAmD5zG,EAAAvoB,GAAAg6H,qBACnDjuD,EAAA,GAAA6xB,IAAAu+B,EAAAlvH,EAAAs5E,GACAvmE,GAAA7a,KAAAojB,EAAAvoB,GAAAoyF,WAAA3jF,KAAA,aAAAs9D,QAGA/rD,GAAA7a,KAAAojB,EAAAvoB,GAAAoyF,WAAA3jF,KAAA,QAAAkE,OAAAmnH,IAAA,SAMAt3H,KAAAm4H,qCAAAn4H,KAAAg3H,sBAEA,QAAAx5H,GAAA,EAAmBA,EAAAggB,EAAA9Y,OAAsBlH,IACzCqsF,GAAArsE,EAAAhgB,GAGAwC,MAAAi4H,2BAUAvJ,GAAAhwH,UAAAw6H,4BAAA,SAAA92H,GAIA,IAHA,GAAAqwF,GAEAmnC,EAAA55H,KAAAg3H,sBACA,QAAAvkC,EAAArwF,EAAAmoF,aACA,OAAAqvC,EAAA70F,YACA60F,IAAAzD,QAAA1jC,GACArwF,IAAAqoF,UAEA,OAAAmvC,IASAlL,GAAAhwH,UAAA05H,uBAAA,SAAAwB,GAEA,GAAAC,KAMA,OALA75H,MAAA85H,mCAAAF,EAAAC,GAEAA,EAAAxzG,KAAA,SAAArS,EAAAU,GACA,MAAAV,GAAAojH,MAAA1iH,EAAA0iH,QAEAyC,GAOAnL,GAAAhwH,UAAAo7H,mCAAA,SAAA35G,EAAA4F,GACA,GAAAyjC,GAAAxpD,KACA+3H,EAAA53G,EAAA4kB,UACA,WAAAgzF,EACA,OAAAv6H,GAAA,EAAuBA,EAAAu6H,EAAArzH,OAAsBlH,IAC7CuoB,EAAApjB,KAAAo1H,EAAAv6H,GAGA2iB,GAAAta,aAAA,SAAAC,GACA0jD,EAAAswE,mCAAAh0H,EAAAigB,MASA2oG,GAAAhwH,UAAAy5H,qCAAA,SAAAh4G,GACA,GAAAqpC,GAAAxpD,KACA+lB,EAAA5F,EAAA4kB,UACA,IAAAhf,EAAA,CAEA,OADAxR,GAAA,EACA8E,EAAA,EAA0BA,EAAA0M,EAAArhB,OAAqB2U,IAC/C0M,EAAA1M,GAAA+mE,SAAA01C,GAAAgD,YACA/yG,EAAAxR,GAAAwR,EAAA1M,GACA9E,IAGAwR,GAAArhB,OAAA6P,EACA4L,EAAAk2G,SAAAtwG,EAAArhB,OAAA,EAAAqhB,EAAA,MAEA5F,EAAAta,aAAA,SAAAwsB,GACAm3B,EAAA2uE,qCAAA9lG,MAWAq8F,GAAAhwH,UAAAgyH,mBAAA,SAAAtuH,GACA,GAAAonD,GAAAxpD,KACAknG,EAAAlnG,KAAAk5H,4BAAA92H,UACAw3H,EAAA55H,KAAAg3H,sBAAAb,QAAA/zH,EAQA,OAPAw3H,GAAAlD,gBAAA,SAAAv2G,GACAqpC,EAAAuwE,yBAAA55G,KAEAngB,KAAA+5H,yBAAAH,GACAA,EAAArD,kBAAA,SAAAp2G,GACAqpC,EAAAuwE,yBAAA55G,KAEA+mF,GAQAwnB,GAAAhwH,UAAAq7H,yBAAA,SAAA55G,GACA,GAAA4F,GAAA5F,EAAA4kB,UACA,WAAAhf,EAAA,CAQA,OALAvI,MAGAsc,KACAkgG,GAAA,EACAx8H,EAAA,EAAuBA,EAAAuoB,EAAArhB,OAAkBlH,IACzC,GAAAuoB,EAAAvoB,GAAA4iF,SAAA01C,GAAAiD,sBAGA,IAAAhzG,EAAAvoB,GAAA4iF,SAAA01C,GAAA6C,KACA18E,EAAAkX,OAAA6mE,IAAAx8H,EAAA,qDACAw8H,EAAAx8H,EAEAuoB,EAAAvoB,GAAA4iF,OAAA01C,GAAAiD,iBACAhzG,EAAAvoB,GAAA85H,YAAA,UAOA,IAJAr7E,EAAAkX,OAAAptC,EAAAvoB,GAAA4iF,SAAA01C,GAAA+B,IAAA,0CAEA9xG,EAAAvoB,GAAA25H,YACAr9F,IAAAl5B,OAAAZ,KAAAyvH,gBAAA3lB,aAAA/jF,EAAAvoB,GAAA+5H,gBAAA,IACAxxG,EAAAvoB,GAAAoyF,WAAA,CAEApyE,EAAA7a,KAAAojB,EAAAvoB,GAAAoyF,WAAA3jF,KAAA,QAAAkE,OAAA,UADA,QAKA,IAAA6pH,EAEA75G,EAAAk2G,SAAA,MAIAtwG,EAAArhB,OAAAs1H,EAAA,EAGAh6H,KAAA6uH,YAAA3T,0BAAA/6F,EAAA/d,OAAA03B,EACA,QAAAt8B,GAAA,EAAuBA,EAAAggB,EAAA9Y,OAAsBlH,IAC7CqsF,GAAArsE,EAAAhgB,KAqBA,IACAy8H,IAIA11C,GAAA,WACA,QAAAA,KAIAvkF,KAAAk6H,UAKAl6H,KAAAm6H,gBAAA,EAyFA,MAvFA51C,GAAAC,YAAA,WAIA,MAHAy1C,MACAA,GAAA,GAAA11C,IAEA01C,IAGA11C,EAAA7lF,UAAA+uH,UAAA,WACA,OAAA2M,KAAAp6H,MAAAk6H,OACA,OAAAG,KAAAr6H,MAAAk6H,OAAAE,GACAp6H,KAAAk6H,OAAAE,GAAAC,GAAA5M,aAIAlpC,EAAA7lF,UAAAw/D,OAAA,WACA,OAAAk8D,KAAAp6H,MAAAk6H,OACA,OAAAG,KAAAr6H,MAAAk6H,OAAAE,GACAp6H,KAAAk6H,OAAAE,GAAAC,GAAAn8D,UAUAqmB,EAAA7lF,UAAA+lF,gBAAA,SAAA92B,EAAA+xB,GACA,GAAA26C,GAAA36C,GAAA/xB,EAAAnuD,QAAA,gBACA8S,KAAA+nH,GACAhzC,EAAA,uHAIA,IAAAiG,GAAAF,GAAAitC,GACA3sC,EAAAJ,EAAAI,QAOA,OANA4B,IAAA,kCAAAhC,GACAA,EAAAlrF,KAAAy1D,WACAwvB,EAAA,4FAGArnF,KAAAs6H,WAAA5sC,EAAA//B,GACAqc,UAOAua,EAAA7lF,UAAA67H,WAAA,SAAA38B,GACA,GAAA48B,GAAAv+E,EAAAwb,QAAAz3D,KAAAk6H,OAAAt8B,EAAAjwC,IAAA7vD,KAEA08H,IAAAv+E,EAAAwb,QAAA+iE,EAAA58B,EAAA8mB,UAAAv3B,iBAAAyQ,GACAvW,EAAA,YAAAuW,EAAAjwC,IAAA7vD,KAAA,IAAA8/F,EAAA8mB,UAAA,+BAEA9mB,EAAA6vB,kBACA+M,GAAA58B,EAAA8mB,UAAAv3B,gBAUA5I,EAAA7lF,UAAA47H,WAAA,SAAA5sC,EAAA//B,GACA,GAAA6sE,GAAAv+E,EAAAwb,QAAAz3D,KAAAk6H,OAAAvsE,EAAA7vD,KACA08H,KACAA,KACAx6H,KAAAk6H,OAAAvsE,EAAA7vD,MAAA08H,EAEA,IAAA58B,GAAA3hD,EAAAwb,QAAA+iE,EAAA9sC,EAAAP,cAMA,OALAyQ,IACAvW,EAAA,2HAEAuW,EAAA,GAAA8wB,IAAAhhC,EAAA1tF,KAAAm6H,eAAAxsE,GACA6sE,EAAA9sC,EAAAP,eAAAyQ,EACAA,GAMArZ,EAAA7lF,UAAAiwH,gBAAA,SAAAA,GACA3uH,KAAAm6H,eAAAxL,GAEApqC,KAsBAK,GAAA,WAKA,QAAAA,GAAA8K,GACA1vF,KAAA0vF,QACAA,YAAAg/B,KACArnC,EAAA,wEAGArnF,KAAA+1F,MAAA,GAAArR,IAAAgL,EAAAzF,GAAAvV,OACA10E,KAAAqvD,SAAA,GAAAorE,IAAAz6H,MAmEA,MAjEA/B,QAAAC,eAAA0mF,EAAAlmF,UAAA,OACAL,IAAA,WACA,MAAA2B,MAAA0vF,MAAA/hC,KAEAvvD,YAAA,EACAD,cAAA,IAEAymF,EAAAlmF,UAAA+L,IAAA,SAAArI,GAGA,MAFApC,MAAA06H,cAAA,OACAz+E,EAAA4e,iBAAA,mBAAA/uD,UAAApH,QACAtC,YAAAsiF,IACA1kF,KAAA26H,WAAAv4H,EAAAiL,gBAEAiF,KAAAlQ,EAAApC,KAAA+1F,MAAAjwF,MAAA1D,GAAApC,KAAA+1F,OASAnR,EAAAlmF,UAAAi8H,WAAA,SAAAj7C,GAEA,GAAAk7C,GAAA,qBACA56H,MAAA06H,cAAAE,GACA3+E,EAAA4e,iBAAA+/D,EAAA,IAAA9uH,UAAApH,OACA,IAAAm2H,GAAAztC,GAAA1N,EACA4P,IAAAsrC,EAAA,EAAAC,EACA,IAAAntC,GAAAmtC,EAAAntC,QAUA,OATAA,GAAAtB,OAAApsF,KAAA0vF,MAAAg1B,UAAAt4B,MACA/E,EAAAuzC,EACA,2DAEAltC,EAAAtB,KACA,iBACApsF,KAAA0vF,MAAAg1B,UAAAt4B,KACA,KAEApsF,KAAAyK,IAAAowH,EAAAz4H,KAAAiL,aAKAu3E,EAAAlmF,UAAAg8H,cAAA,SAAAE,GACA,OAAA56H,KAAA0vF,OACArI,EAAA,eAAAuzC,EAAA,4BAIAh2C,EAAAlmF,UAAAo8H,UAAA,WACA7+E,EAAA4e,iBAAA,yBAAA/uD,UAAApH,QACA1E,KAAA06H,cAAA,aACA16H,KAAA0vF,MAAA+9B,aAEA7oC,EAAAlmF,UAAAq8H,SAAA,WACA9+E,EAAA4e,iBAAA,wBAAA/uD,UAAApH,QACA1E,KAAA06H,cAAA,YACA16H,KAAA0vF,MAAAxxB,UAEA0mB,EAAAE,aACAk2C,WACAC,MAAA,cAGAr2C,KAEA61C,GAAA,WAEA,QAAAA,GAAAzwD,GACAhqE,KAAAgqE,WAgBA,MAbAywD,GAAA/7H,UAAA4M,OAAA,WACA,MAAAynD,GAAAsJ,UAAAr8D,SAAA,qBACA,MAAA+yD,GAAA+J,YAAA98D,KAAA,SAAAoiF,GAOA,MANApiF,MAAAgqE,SAAA0wD,cAAA,UACAn2C,GAAAC,cAAA+1C,WAAAv6H,KAAAgqE,SAAA0lB,OACA1vF,KAAAgqE,SAAA0lB,MAAA,KACA1vF,KAAAgqE,SAAA+rB,MAAA,KACA/1F,KAAAgqE,SAAA3a,SAAA,KACArvD,KAAAgqE,SAAA,MACA,QAIAywD,KAyBAS,GAAA,WACA/Y,GAAA5C,gBACAnC,GAAAiC,cAEA8b,GAAA,WACA/d,GAAAmC,iBAGA0E,GAAA,WACA,MAAA9B,IAAA,eAEAiZ,GAAA,SAAA3wH,EAAA8jB,GACA9jB,EAAAmzF,KAAAoxB,sBAAA3F,uBAAA96F,GAEA6rF,GAAA,SAAA3vG,EAAAwmH,GACAxmH,EAAAmzF,KAAAwc,MAAA6W,IAEAI,GAAA,SAAA5mH,EAAA6mH,GACA7mH,EAAAmzF,KAAAyzB,sBAAAC,IAEA1C,GAAA,SAAAnkH,GACA,MAAAA,GAAAmzF,KAAAgxB,iBAEAyM,GAAA,SAAA5wH,EAAA8jB,GACA,MAAA9jB,GAAAmzF,KAAAsyB,qBAAA3hG,IAGA8gC,GAAApxD,OAAAy4C,QACAwkF,oBACAC,mBACAlX,yBACAmX,4BACAhhB,SACAiX,yBACAzC,mBACAyM,yBAkBAC,GAAAhT,EAKAA,IAAA5pH,UAAA68H,aAAA,SAAA15C,EAAA+N,GACA5vF,KAAAqmH,YAAA,KAA2BznH,EAAAijF,GAAgB+N,IAM3C04B,GAAA5pH,UAAA88H,KAAA,SAAAx3H,EAAAy3H,GACAz7H,KAAAqmH,YAAA,QAA8BxoH,EAAAmG,GAAUy3H,GAGxC,IAAAC,IAAAjX,GAKAkX,GAAA,SAAAC,GACA,GAAAC,GAAAvT,GAAA5pH,UAAAspH,GAOA,OANAM,IAAA5pH,UAAAspH,IAAA,SAAAnmC,EAAA79E,EAAA83H,EAAAC,OACAzpH,KAAAypH,IACAA,EAAAH,KAEAC,EAAAn+H,KAAAsC,KAAA6hF,EAAA79E,EAAA83H,EAAAC,IAEA,WACAzT,GAAA5pH,UAAAspH,IAAA6T,IAMAG,GAAA7vC,GAKAqU,GAAA,SAAArtE,GACA,MAAAA,GAAAqtE,mBAMAy7B,GAAA,SAAAC,GACA,MAAAA,GAAAt+B,KAAAoxB,sBAAAlG,UAOA6F,GAAA,SAAAA,GACApqC,GAAAC,cAAAmqC,oBAGA5pC,GAAA9mF,OAAAy4C,QACA4kF,kBACAI,sBACAC,cACAK,oBACAx7B,mBACAy7B,WACAtN,qBAkBA7pC,GAAAF,GAAAE,WAkBAV,GAAA5yB,GAEAl0D,EAAA8mF,mBACA9mF,EAAAsnF,YACAtnF,EAAAqnF,SACArnF,EAAAonF,aACApnF,EAAAunF,gBACAvnF,EAAAwnF,eACAxnF,EAAA89F,gBACA99F,EAAAmyF,kBtD8tlB6B/xF,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQsD,EAAqB1D,GAE7C,YuDjijCA,SAAAg/H,GAAAC,GACAC,EAAAx6H,QAAA,SAAAy6H,GACAA,EAAAt1C,SAAAo1C,IvDgijCAn+H,OAAOC,eAAe2C,EAAqB,cAAgB8R,OAAO,IACnCxV,EAAoBU,EAAEgD,EAAqB,cAAe,WAAa,MAAOs7H,KAC9Eh/H,EAAoBU,EAAEgD,EAAqB,SAAU,WAAa,MAAOylF,KuD9tjCxGnpF,EAAAU,EAAAgD,EAAA,4BAAAomF,IAkBA,IAYAA,GAZAo1C,MAaA,SAAAp1C,GACAA,IAAA,iBACAA,IAAA,qBACAA,IAAA,eACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,oBACCA,UAID,IAAAs1C,GAAAt1C,EAAAu1C,KAMAC,EAAA,SAAAp4C,EAAAq4C,GAEA,OADAt2H,MACA4lB,EAAA,EAAoBA,EAAAlgB,UAAApH,OAAuBsnB,IAC3C5lB,EAAA4lB,EAAA,GAAAlgB,UAAAkgB,EAEA,MAAA0wG,EAAAr4C,EAAA2C,UAAA,CAEA,GAAA5vB,IAAA,GAAA3F,OAAAkrE,aACA,QAAAD,GAOA,IAAAz1C,GAAA/2E,MAGA,IAAA+2E,GAAAC,QACA/pE,QAAA6zC,IAAAjlD,MAAAoR,SAAA,IAAAi6C,EAAA,MAAAitB,EAAAvmF,KAAA,KAAA8C,OAAAwF,GACA,MACA,KAAA6gF,GAAAu1C,KACAr/G,QAAAX,KAAAzQ,MAAAoR,SAAA,IAAAi6C,EAAA,MAAAitB,EAAAvmF,KAAA,KAAA8C,OAAAwF,GACA,MACA,KAAA6gF,GAAA21C,KACAz/G,QAAAwc,KAAA5tB,MAAAoR,SAAA,IAAAi6C,EAAA,MAAAitB,EAAAvmF,KAAA,KAAA8C,OAAAwF,GACA,MACA,KAAA6gF,GAAA41C,MACA1/G,QAAAC,MAAArR,MAAAoR,SAAA,IAAAi6C,EAAA,MAAAitB,EAAAvmF,KAAA,KAAA8C,OAAAwF,GACA,MACA,SACA,SAAA+J,OAAA,8DAAAusH,EAAA,QAGAp2C,EAAA,WAOA,QAAAA,GAAAxoF,GACAkC,KAAAlC,OAIAkC,KAAA88H,UAAAP,EAIAv8H,KAAA+8H,YAAAN,EAIAJ,EAAA15H,KAAA3C,MAkEA,MAhEA/B,QAAAC,eAAAooF,EAAA5nF,UAAA,YACAL,IAAA,WACA,MAAA2B,MAAA88H,WAEA53H,IAAA,SAAAjD,GACA,KAAAA,IAAAglF,IACA,SAAAhqB,WAAA,uCAEAj9D,MAAA88H,UAAA76H,GAEA7D,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAooF,EAAA5nF,UAAA,cACAL,IAAA,WACA,MAAA2B,MAAA+8H,aAEA73H,IAAA,SAAAjD,GACA,qBAAAA,GACA,SAAAg7D,WAAA,oDAEAj9D,MAAA+8H,YAAA96H,GAEA7D,YAAA,EACAD,cAAA,IAKAmoF,EAAA5nF,UAAAs+H,MAAA,WAEA,OADA52H,MACA4lB,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEAhsB,MAAA+8H,YAAAhxH,MAAA/L,WAAAinF,EAAA/2E,OAAAtP,OAAAwF,KAEAkgF,EAAA5nF,UAAAsyD,IAAA,WAEA,OADA5qD,MACA4lB,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEAhsB,MAAA+8H,YAAAhxH,MAAA/L,WAAAinF,EAAAC,SAAAtmF,OAAAwF,KAEAkgF,EAAA5nF,UAAA8d,KAAA,WAEA,OADApW,MACA4lB,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEAhsB,MAAA+8H,YAAAhxH,MAAA/L,WAAAinF,EAAAu1C,MAAA57H,OAAAwF,KAEAkgF,EAAA5nF,UAAAi7B,KAAA,WAEA,OADAvzB,MACA4lB,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEAhsB,MAAA+8H,YAAAhxH,MAAA/L,WAAAinF,EAAA21C,MAAAh8H,OAAAwF,KAEAkgF,EAAA5nF,UAAA0e,MAAA,WAEA,OADAhX,MACA4lB,EAAA,EAAwBA,EAAAlgB,UAAApH,OAAuBsnB,IAC/C5lB,EAAA4lB,GAAAlgB,UAAAkgB,EAEAhsB,MAAA+8H,YAAAhxH,MAAA/L,WAAAinF,EAAA41C,OAAAj8H,OAAAwF,KAEAkgF,MvD6vjCM,SAAU/oF,EAAQsD,EAAqB1D,GAE7C,YwDv6jCA,IAAMqE,IACF8pD,WAAY,GACZL,WAAY,OAGVvnD,GACF4nD,WAAY,SAAC9pD,GACT,MAAOA,GAAM8pD,YAEjBL,WAAY,SAACzpD,GACT,MAAOA,GAAMypD,YAGjBgyE,aARY,SAQCz7H,EAAOumE,GAChB,GAAI1c,GAAoB0c,EAAWzc,YAAcyc,EAAWzc,WAAWrzB,MAGvE,IADsD,QAA1B8vC,EAAW9c,YAAqD,IAA7BI,EAAkB3mD,OAE7E,MAAOqjE,GAAWxc,SAGtB,KAAKF,EACD,MAAOp5C,MAAKF,QAAQg2D,EAAW9c,YAAY8c,EAAWvc,aAG1D,IAAIC,GAA4Bsc,EAAWvc,aAAax6C,OAAO,SAAAiB,GAAA,MAC3DA,GAAK3F,QAAQmE,cAAc/N,QAAQ2oD,EAAkB56C,gBAAkB,GAE3E,OAAOwB,MAAKF,QAAQg2D,EAAW9c,YAAYQ,KAI7C7hD,GACF+/C,iBAAkB,SAACnoD,EAAO07H,GAClB17H,EAAM8pD,aAAe4xE,IACrB17H,EAAM8pD,WAAa4xE,IAG3B/xE,iBAAkB,SAAC3pD,EAAO27H,GAClB37H,EAAMypD,aAAekyE,IACrB37H,EAAMypD,WAAakyE,IAK/Bt8H,GAAA,GACIW,QACAkC,UACAkG,cxD66jCE,SAAUrM,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIigI,GAAwCjgI,EAAoB,GyD99jC/EqE,GACForD,cAAc,EACdG,cAAe,eACfM,iBAAkB,QAGhB3pD,GACFkpD,aADY,SACCprD,EAAOumE,GAChB,MAAOvmE,GAAMorD,cAEjBG,cAJY,SAIEvrD,EAAOumE,GACjB,MAAOvmE,GAAMurD,eAEjBM,iBAPY,SAOK7rD,EAAOumE,GACpB,MAAOvmE,GAAM6rD,mBAIfzjD,GACFijD,gBAAiB,SAACrrD,EAAO0pD,GACrB1pD,EAAMorD,aAAe1B,GAEzB8B,iBAAkB,SAACxrD,EAAO0pD,GACtB1pD,EAAMurD,cAAgB7B,GAE1BoC,oBAAqB,SAAC9rD,EAAO0pD,GACzB1pD,EAAM6rD,iBAAmBnC,GAG7BmyE,6BAA8B,SAAC77H,EAAOonE,GAClC,GAAMA,EAAN,CAGA,GAAIC,GAAgB37D,KAAKs+B,MAAMo9B,EAE3BC,GAAcpB,WACdjmE,EAAMurD,cAAgB8b,EAAcpB,SAAS1a,cAC7CvrD,EAAM6rD,iBAAmBwb,EAAcpB,SAASpa,qBAKtD1jD,GACF2zH,mBADY,SACOv9H,GACf,GAAI6oE,GAAsBvB,aAAagC,QAAQ+zD,EAAA,EAC/Cr9H,GAAQwG,OAAO,+BAAgCqiE,IAIvD/nE,GAAA,GACIW,QACAkC,UACAkG,YACAD,YzDs+jCE,SAAUpM,EAAQsD,EAAqB1D,GAE7C,Y0D/hkCA,IAAMqE,IACF0rD,UAAW,KACX0T,cAAe,QAGbl9D,GACFwpD,UADY,SACF1rD,EAAOumE,GACb,MAAOvmE,GAAM0rD,WAEjB0T,cAJY,SAIEp/D,EAAOumE,GACjB,MAAOvmE,GAAMo/D,gBAIfh3D,GACF42D,aAAc,SAACh/D,EAAO0pD,GAClB1pD,EAAM0rD,UAAYhC,GAEtBqV,iBAAkB,SAAC/+D,EAAO0pD,GACtB1pD,EAAMo/D,cAAgB1V,GAI9BrqD,GAAA,GACIW,QACAkC,UACAkG,c1DqikCE,SAAUrM,EAAQsD,EAAqB1D,GAE7C,Y2DjkkCA,IAAMqE,IACFskE,mBAAoB,YAGlBpiE,GACFoiE,mBADY,SACOtkE,EAAOumE,GACtB,MAAOvmE,GAAMskE,qBAIfl8D,GACFy7D,sBAAuB,SAAC7jE,EAAO0pD,GAC3B1pD,EAAMskE,mBAAqB5a,GAInCrqD,GAAA,GACIW,QACAkC,UACAkG,c3DukkCE,SAAUrM,EAAQD,EAASH,I4D1lkCjC,SAAAgV,GAkIA,QAAAorH,GAAAl8B,EAAAm8B,EAAAh+H,GAuBA,QAAAi+H,GAAAzzC,GACA,GAAA5jF,GAAAs3H,EACAphE,EAAAqhE,CAKA,OAHAD,GAAAC,MAAArrH,GACAsrH,EAAA5zC,EACAphE,EAAAy4E,EAAAt1F,MAAAuwD,EAAAl2D,GAIA,QAAAy3H,GAAA7zC,GAMA,MAJA4zC,GAAA5zC,EAEA8zC,EAAA97G,WAAA+7G,EAAAP,GAEAQ,EAAAP,EAAAzzC,GAAAphE,EAGA,QAAAq1G,GAAAj0C,GACA,GAAAk0C,GAAAl0C,EAAAm0C,EACAC,EAAAp0C,EAAA4zC,EACAh1G,EAAA40G,EAAAU,CAEA,OAAAG,GAAAC,EAAA11G,EAAA21G,EAAAH,GAAAx1G,EAGA,QAAA41G,GAAAx0C,GACA,GAAAk0C,GAAAl0C,EAAAm0C,EACAC,EAAAp0C,EAAA4zC,CAKA,YAAAtrH,KAAA6rH,GAAAD,GAAAV,GACAU,EAAA,GAAAG,GAAAD,GAAAG,EAGA,QAAAR,KACA,GAAA/zC,GAAA5yB,GACA,IAAAonE,EAAAx0C,GACA,MAAAy0C,GAAAz0C,EAGA8zC,GAAA97G,WAAA+7G,EAAAE,EAAAj0C,IAGA,QAAAy0C,GAAAz0C,GAKA,MAJA8zC,OAAAxrH,GAIAosH,GAAAhB,EACAD,EAAAzzC,IAEA0zC,EAAAC,MAAArrH,GACAsW,GAGA,QAAA+mE,SACAr9E,KAAAwrH,GACAr3E,aAAAq3E,GAEAF,EAAA,EACAF,EAAAS,EAAAR,EAAAG,MAAAxrH,GAGA,QAAAqsH,KACA,WAAArsH,KAAAwrH,EAAAl1G,EAAA61G,EAAArnE,KAGA,QAAAwnE,KACA,GAAA50C,GAAA5yB,IACAynE,EAAAL,EAAAx0C,EAMA,IAJA0zC,EAAA5xH,UACA6xH,EAAA39H,KACAm+H,EAAAn0C,EAEA60C,EAAA,CACA,OAAAvsH,KAAAwrH,EACA,MAAAD,GAAAM,EAEA,IAAAE,EAGA,MADAP,GAAA97G,WAAA+7G,EAAAP,GACAC,EAAAU,GAMA,WAHA7rH,KAAAwrH,IACAA,EAAA97G,WAAA+7G,EAAAP,IAEA50G,EAlHA,GAAA80G,GACAC,EACAY,EACA31G,EACAk1G,EACAK,EACAP,EAAA,EACAI,GAAA,EACAK,GAAA,EACAK,GAAA,CAEA,sBAAAr9B,GACA,SAAApkC,WAAA6hE,EA0GA,OAxGAtB,GAAAnqH,EAAAmqH,IAAA,EACAz7H,EAAAvC,KACAw+H,IAAAx+H,EAAAw+H,QACAK,EAAA,WAAA7+H,GACA++H,EAAAF,EAAAU,EAAA1rH,EAAA7T,EAAA++H,UAAA,EAAAf,GAAAe,EACAG,EAAA,YAAAl/H,OAAAk/H,YAiGAE,EAAAjvC,SACAivC,EAAAD,QACAC,EA4BA,QAAA78H,GAAA4Q,GACA,GAAArT,SAAAqT,EACA,SAAAA,IAAA,UAAArT,GAAA,YAAAA,GA2BA,QAAA0/H,GAAArsH,GACA,QAAAA,GAAA,gBAAAA,GAoBA,QAAAskE,GAAAtkE,GACA,sBAAAA,IACAqsH,EAAArsH,IAAAssH,EAAAvhI,KAAAiV,IAAAusH,EA0BA,QAAA7rH,GAAAV,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAAskE,EAAAtkE,GACA,MAAAwsH,EAEA,IAAAp9H,EAAA4Q,GAAA,CACA,GAAA84E,GAAA,kBAAA94E,GAAAu5D,QAAAv5D,EAAAu5D,UAAAv5D,CACAA,GAAA5Q,EAAA0pF,KAAA,GAAAA,EAEA,mBAAA94E,GACA,WAAAA,MAEAA,KAAAwsB,QAAAigG,EAAA,GACA,IAAAC,GAAAC,EAAA/uH,KAAAoC,EACA,OAAA0sH,IAAAE,EAAAhvH,KAAAoC,GACA6sH,EAAA7sH,EAAA3N,MAAA,GAAAq6H,EAAA,KACAI,EAAAlvH,KAAAoC,GAAAwsH,GAAAxsH,EA3WA,GAAAmsH,GAAA,sBAGAK,EAAA,IAGAD,EAAA,kBAGAE,EAAA,aAGAK,EAAA,qBAGAH,EAAA,aAGAC,EAAA,cAGAC,EAAAntF,SAGAqtF,EAAA,gBAAAvtH,SAAAlU,iBAAAkU,EAGAwtH,EAAA,gBAAAt6E,kBAAApnD,iBAAAonD,KAGA/hD,EAAAo8H,GAAAC,GAAAxuH,SAAA,iBAGAyuH,EAAA3hI,OAAAS,UAOAugI,EAAAW,EAAAvyH,SAGA0xH,EAAA7rH,KAAAgG,IACAolH,EAAAprH,KAAAy7D,IAkBAvX,EAAA,WACA,MAAA9zD,GAAAmuD,KAAA2F,MA+SA75D,GAAAD,QAAAigI,I5D8lkC6B7/H,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,EAASH,GAEjC,Y6D19kCAI,GAAAD,SACAuiI,UACAvgI,KAAA,WACAiS,YAAA,yFACAhS,QAAA,UACAugI,UAAA,KAGAC,kBACA/jB,QAAA,EACA18G,KAAA,UAGA0gI,gBACAhkB,QAAA,GAGAjkE,KACAikE,QAAA,EACAz8G,YAGA4iD,MACA5wC,YAAA,GACAyqG,QAAA,GAGAikB,aACA3gI,KAAA,UACAC,SAAA,EACAgS,YAAA,yDAGA2uH,eACA3uH,YAAA,yEACAjS,KAAA,UACAC,SAAA,GAGA4gI,6BACA7gI,KAAA,UACAC,SAAA,EACAy8G,QAAA,GAGAokB,SACA9gI,KAAA,OACAiS,YAAA,GACAhS,YAGA6K,SACA9K,KAAA,OACAC,WACAgS,YAAA,IAGA8uH,QACA/gI,KAAA,OACAiS,YAAA,wCACAhS,YAGA+gI,MACAhhI,KAAA,OACAiS,YAAA,0CAGA6qB,MACA4/E,QAAA,EACAz8G,SAAA,EACAD,KAAA,WAGA88D,UACA4/C,QAAA,EACAz8G,SAAA,EACAD,KAAA,WAGAuzC,KACAmpE,QAAA,EACAz8G,SAAA,EACAD,KAAA,WAGAyb,SACAzb,KAAA,SACA08G,QAAA,GAGAvvE,UACAntC,KAAA,UACAC,SAAA,EACAgS,YAAA,wDAGAgvH,oBACAvkB,QAAA,EACAzqG,YAAA,uHAGAivH,yBACAxkB,QAAA,EACAzqG,YAAA,iDAGAkvH,SACAnhI,KAAA,gBACAC,QAAA,OACAgS,YAAA,2FAGAmvH,UACAphI,KAAA,UACAC,SAAA,EACAgS,YAAA,iDAGAxE,WACA0hC,MAAA,aACAutE,QAAA,GAGA2kB,YACArhI,KAAA,gBACAiS,YAAA,sBACAhS,SAAA,EACAugI,UAAA,KAGAc,iBACAthI,KAAA,SACAiS,YAAA,qCAGAsvH,gBACAvhI,KAAA,SACAiS,YAAA,2CAGA1E,YACAvN,KAAA,WACAiS,YAAA,gDAGAuvH,SACAvvH,YAAA,4DACAjS,KAAA,UACAC,SAAA,GAGAwhI,YACAxvH,YAAA,GACAhS,QAAA,UAGAyhI,wBACA1hI,KAAA,SACAiS,YAAA,qDAGA0vH,uBACA3hI,KAAA,SACAiS,YAAA,oDAGA2vH,qBACAllB,QAAA,GAGAmlB,aACAnlB,QAAA,GAGAolB,YACA9hI,KAAA,WACAiS,YAAA,2GAGA8vH,WACA/hI,KAAA,UACAC,SAAA,EACAugI,UAAA,IACAvuH,YAAA,qCAGAnU,UACAmU,YAAA,uCACAjS,KAAA,UAGAgiI,eACA/vH,YAAA,qFACAjS,KAAA,UACAC,SAAA,EACAy8G,QAAA,GAGAulB,YACAhwH,YAAA,4EACAhS,SAAA,GAGAiiI,eACAjwH,YAAA,wFACAhS,SAAA,K7Dm+kCM,SAAUhC,EAAQsD,EAAqB1D,GAE7C,Y8DrrlCA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,cAAkD,QAAxBjmB,EAAAg3C,MAAA1tB,IAAA03C,GAAwB,SACzF/kE,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,K9D0rlCM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,YACqB,IAAIskI,GAAiHtkI,EAAoB,I+DhslC9JukI,EAAAvkI,EAAA,IAAA4mE,EAAA5mE,EAAA,GAcA8mE,EAAAF,EACA09D,EAAA,EACAC,EAAA,GATA,EAEA,KAEA,KAEA,KAUA7gI,GAAA,EAAAojE,EAAA,S/DwslCM,SAAU1mE,EAAQsD,EAAqB1D,GAE7C,YgEjulCA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,OAAiByF,YAAA,aAAwB/uB,EAAAooB,GAAA7rB,KAAA,iBAAA6rD,GAAwC,MAAA9+B,GAAA,QAAkBjrB,IAAA+pD,EAAAnsC,OAAkBmsC,UAAgB1qD,IAAKg+D,WAAA17D,EAAAs7D,uBACnOr/D,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,KhEsulCM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,YiE3ulCA,SAAAymE,GAAA1jE,GACA/C,EAAA,IjE2ulCqB,GAAIwkI,GAAgHxkI,EAAoB,IiE5ulC7JykI,EAAAzkI,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACA49D,EAAA,EACAC,EAAA,GATA,EAWA59D,EAPA,kBAEA,KAUAnjE,GAAA,EAAAojE,EAAA,SjEovlCM,SAAU1mE,EAAQD,EAASH,GkE3wlCjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,OlEoxlCM,SAAU/O,EAAQD,EAASH,GmE3xlCjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,uMAA8N,MnEoylCxN,SAAUD,EAAQsD,EAAqB1D,GAE7C,YoE3ylCA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,QAAkByF,YAAA,SAAmB/uB,EAAA4oB,GAAA,YAAA5oB,EAAAooB,GAAA7rB,KAAA,cAAA2W,GAAsD,MAAAoW,GAAA,KAAeyF,YAAA,UAAArxB,IAA0BikE,MAAA,SAAAv6C,GAAiD,MAAxBA,GAAAg3G,iBAAwBp+H,EAAA27D,iBAAAv0C,OAAsCpnB,EAAA4oB,GAAA,aAAA5oB,EAAAmoB,GAAAjV,GAAA,eAA8C,IAClWjX,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,KpEgzlCM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,YqErzlCA,SAAAymE,GAAA1jE,GACA/C,EAAA,IrEqzlCqB,GAAI2kI,GAAgH3kI,EAAoB,IqEtzlC7J4kI,EAAA5kI,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACA+9D,EAAA,EACAC,EAAA,GATA,EAWA/9D,EAPA,kBAEA,KAUAnjE,GAAA,EAAAojE,EAAA,SrE8zlCM,SAAU1mE,EAAQD,EAASH,GsEr1lCjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,OtE81lCM,SAAU/O,EAAQD,EAASH,GuEr2lCjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,03DAAi5D,MvE82lC34D,SAAUD,EAAQsD,EAAqB1D,GAE7C,YwEr3lCA,SAAAymE,GAAA1jE,GACA/C,EAAA,IxEq3lCqB,GAAI6kI,GAAwH7kI,EAAoB,IwEt3lCrK8kI,EAAA9kI,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACAi+D,EAAA,EACAC,EAAA,GATA,EAWAj+D,EAPA,kBAEA,KAUAnjE,GAAA,EAAAojE,EAAA,SxE83lCM,SAAU1mE,EAAQD,EAASH,GyEr5lCjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,OzE85lCM,SAAU/O,EAAQD,EAASH,G0Er6lCjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,wOAA+P,M1E86lCzP,SAAUD,EAAQsD,EAAqB1D,GAE7C,Y2Er7lCA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,OAAAA,EAAA,OAAAA,EAAA,UAAAtpB,EAAA4oB,GAAA,aAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,YAAuFvS,aAAa1c,KAAA,mBAAAk4B,QAAA,uBAAuDl4B,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAAwO,KAAA,QAAAkmB,WAAA,iBAAkFvN,UAAYjY,MAAAlP,EAAAwO,KAAA,SAA2B9Q,IAAKyzD,MAAA,SAAA/pC,GAAyBA,EAAA3U,OAAAunB,WAAsCh6B,EAAAm3C,KAAAn3C,EAAAwO,KAAA,UAAA4Y,EAAA3U,OAAAvD,WAAqDlP,EAAA4oB,GAAA,KAAAU,EAAA,OAAwBkR,aAAaikG,cAAA,UAAsBz+H,EAAA4oB,GAAA,2CAAAU,EAAA,YAAmEvS,aAAa1c,KAAA,mBAAAk4B,QAAA,uBAAuDl4B,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAAwO,KAAA,YAAAkmB,WAAA,qBAA0FvN,UAAYjY,MAAAlP,EAAAwO,KAAA,aAA+B9Q,IAAKyzD,MAAA,SAAA/pC,GAAyBA,EAAA3U,OAAAunB,WAAsCh6B,EAAAm3C,KAAAn3C,EAAAwO,KAAA,cAAA4Y,EAAA3U,OAAAvD,aAAyDlP,EAAA4oB,GAAA,KAAA5oB,EAAAyoD,KAAAxnD,OAAA,EAAAqoB,EAAA,QAAiDrN,OAAOwsC,KAAAzoD,EAAAyoD,QAAiBzoD,EAAA6oB,MAAA,GAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,MAAAtpB,EAAA4oB,GAAA,KAAAU,EAAA,OAAAA,EAAA,QAAqEyF,YAAA,yBAAmCzF,EAAA,QAAayF,YAAA,aAAuBzF,EAAA,QAAAtpB,EAAA4oB,GAAA,mCAAAU,EAAA,SAAmEvS,aAAa1c,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAAwO,KAAA,SAAAkmB,WAAA,kBAAoFzY,OAASpgB,KAAA,YAAkBsrB,UAAW85C,QAAA58D,MAAAC,QAAAtE,EAAAwO,KAAAT,UAAA/N,EAAAuoB,GAAAvoB,EAAAwO,KAAAT,SAAA,SAAA/N,EAAAwO,KAAA,UAAiG9Q,IAAKu7B,OAAA,SAAA7R,GAA0B,GAAA85C,GAAAlhE,EAAAwO,KAAAT,SAAAozD,EAAA/5C,EAAA3U,OAAA2uD,IAAAD,EAAAF,OAA6E,IAAA58D,MAAAC,QAAA48D,GAAA,CAAuB,GAAAG,GAAArhE,EAAAuoB,GAAA24C,EAAA,KAAiCC,GAAAF,QAAiBI,EAAA,GAAArhE,EAAAm3C,KAAAn3C,EAAAwO,KAAA,WAAA0yD,EAAA/jE,QAAlD,QAAkHkkE,GAAA,GAAArhE,EAAAm3C,KAAAn3C,EAAAwO,KAAA,WAAA0yD,EAAA3/D,MAAA,EAAA8/D,GAAAlkE,OAAA+jE,EAAA3/D,MAAA8/D,EAAA,SAA0FrhE,GAAAm3C,KAAAn3C,EAAAwO,KAAA,WAAA4yD,SAAuCphE,EAAA4oB,GAAA,KAAAU,EAAA,QAAAA,EAAA,KAAmCrN,OAAOy2B,KAAA1yC,EAAAy+D,YAAqBz+D,EAAA4oB,GAAA,0DAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,YAA8FvS,aAAa1c,KAAA,mBAAAk4B,QAAA,uBAAuDl4B,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAAwO,KAAA,KAAAkmB,WAAA,cAA4EvN,UAAYjY,MAAAlP,EAAAwO,KAAA,MAAwB9Q,IAAKyzD,MAAA,SAAA/pC,GAAyBA,EAAA3U,OAAAunB,WAAsCh6B,EAAAm3C,KAAAn3C,EAAAwO,KAAA,OAAA4Y,EAAA3U,OAAAvD,eAAkDlP,EAAA4oB,GAAA,KAAAU,EAAA,QAA6ByF,YAAA,aAAuBzF,EAAA,QAAAtpB,EAAA4oB,GAAA,+BAAAU,EAAA,SAA+DvS,aAAa1c,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAAwO,KAAA,KAAAkmB,WAAA,cAA4EzY,OAASpgB,KAAA,YAAkBsrB,UAAW85C,QAAA58D,MAAAC,QAAAtE,EAAAwO,KAAAL,MAAAnO,EAAAuoB,GAAAvoB,EAAAwO,KAAAL,KAAA,SAAAnO,EAAAwO,KAAA,MAAqF9Q,IAAKu7B,OAAA,SAAA7R,GAA0B,GAAA85C,GAAAlhE,EAAAwO,KAAAL,KAAAgzD,EAAA/5C,EAAA3U,OAAA2uD,IAAAD,EAAAF,OAAyE,IAAA58D,MAAAC,QAAA48D,GAAA,CAAuB,GAAAG,GAAArhE,EAAAuoB,GAAA24C,EAAA,KAAiCC,GAAAF,QAAiBI,EAAA,GAAArhE,EAAAm3C,KAAAn3C,EAAAwO,KAAA,OAAA0yD,EAAA/jE,QAAlD,QAA8GkkE,GAAA,GAAArhE,EAAAm3C,KAAAn3C,EAAAwO,KAAA,OAAA0yD,EAAA3/D,MAAA,EAAA8/D,GAAAlkE,OAAA+jE,EAAA3/D,MAAA8/D,EAAA,SAAsFrhE,GAAAm3C,KAAAn3C,EAAAwO,KAAA,OAAA4yD,SAAmCphE,EAAA4oB,GAAA,KAAAU,EAAA,QAAAtpB,EAAA4oB,GAAA,iCAAAU,EAAA,YAAkFvS,aAAa1c,KAAA,mBAAAk4B,QAAA,uBAAuDl4B,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAAwO,KAAA,OAAAkmB,WAAA,gBAAgFvN,UAAYjY,MAAAlP,EAAAwO,KAAA,QAA0B9Q,IAAKyzD,MAAA,SAAA/pC,GAAyBA,EAAA3U,OAAAunB,WAAsCh6B,EAAAm3C,KAAAn3C,EAAAwO,KAAA,SAAA4Y,EAAA3U,OAAAvD,sBACpuGjT,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,K3E07lCM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,Y4E/7lCA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,OAAiByF,YAAA,gBAA0BxyB,KAAA+hE,oBAAAt+D,EAAAwO,KAAAN,MAAAjN,OAAA,EAAAqoB,EAAA,OAAmEyF,YAAA,WAAArxB,IAA2BikE,MAAA,SAAAv6C,GAAyBpnB,EAAAk8D,oBAAAl8D,EAAAk8D,uBAAoDl8D,EAAA4oB,GAAA,aAAA5oB,EAAAmoB,GAAAnoB,EAAAi+D,oBAAA,YAAAj+D,EAAA6oB,KAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,OAAgGyF,YAAA,SAAmBzF,EAAA,OAAYyF,YAAA,sBAAgCzF,EAAA,OAAYyF,YAAA,SAAA9S,OAA4B/H,IAAAxa,EAAA,KAAsCgE,IAAKikE,MAAA3hE,EAAAq8D,kBAAAqiE,SAAA1+H,EAAA89D,gBAA2D99D,EAAA4oB,GAAA,KAAA5oB,EAAA,UAAAspB,EAAA,SAA0C5rB,IAAIyiD,MAAAngD,EAAA+9D,aAAuBz0C,EAAA,MAAWkR,aAAainC,OAAA,KAAaxlD,OAAQuD,KAAA,UAAgBA,KAAA,WAAexf,EAAA4oB,GAAA,QAAA5oB,EAAAmoB,GAAA5rB,KAAA6rD,WAAApoD,EAAA4oB,GAAA,KAAAU,EAAA,gBAAuErN,OAAOuD,KAAA,OAAA4oC,OAAApoD,EAAAooD,QAAkC5oC,KAAA,UAAa,GAAAxf,EAAA6oB,KAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,OAAqCyF,YAAA,wBAAkC/uB,EAAA,gBAAAspB,EAAA,OAAkCyF,YAAA,gBAA0B/uB,EAAAwO,KAAAN,MAAAjN,OAAA,EAAAqoB,EAAA,KAAsC5rB,IAAIikE,MAAA,SAAAv6C,GAAyBpnB,EAAAk8D,oBAAAl8D,EAAAk8D,uBAAoDl8D,EAAA4oB,GAAA,6BAAA5oB,EAAAmoB,GAAAnoB,EAAAk+D,cAAA,4BAAAl+D,EAAA6oB,KAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,KAAwH5rB,IAAIikE,MAAA3hE,EAAAo8D,kBAA4Bp8D,EAAA4oB,GAAA,cAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,KAA2C5rB,IAAIikE,MAAA3hE,EAAAmO,QAAkBnO,EAAA4oB,GAAA,UAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,OAAyCyF,YAAA,cAAwB/uB,EAAA4oB,GAAA,KAAAU,EAAA,KAAsB5rB,IAAIikE,MAAA,SAAAv6C,GAAyBpnB,EAAAy8D,aAAiBz8D,EAAAq8D,wBAA2Br8D,EAAA4oB,GAAA,mBAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,KAAgD5rB,IAAIikE,MAAA,SAAAv6C,GAAyBpnB,EAAA89D,eAAmB99D,EAAAq8D,wBAA2Br8D,EAAA4oB,GAAA,UAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,KAAuC5rB,IAAIikE,MAAA,SAAAv6C,GAAyBpnB,EAAA07D,aAAiB17D,EAAAq8D,wBAA2Br8D,EAAA4oB,GAAA,YAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,OAA2CyF,YAAA,cAAwB/uB,EAAA4oB,GAAA,KAAAU,EAAA,KAAsB5rB,IAAIikE,MAAA3hE,EAAA68D,YAAsB78D,EAAA4oB,GAAA,UAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,KAAuC5rB,IAAIikE,MAAA3hE,EAAAg9D,WAAqBh9D,EAAA4oB,GAAA,SAAA5oB,EAAA4oB,GAAA,WAAArsB,KAAAktD,WAAAltD,KAAAktD,YAAAltD,KAAA6rD,OAAA9+B,EAAA,KAAiG5rB,IAAIikE,MAAA3hE,EAAA69D,aAAuB79D,EAAA4oB,GAAA,gBAAA5oB,EAAA6oB,OAAA7oB,EAAA6oB,OAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,QAAsEkR,aAAamkG,cAAA,SAAqBr1G,EAAA,YAAiBvS,aAAa1c,KAAA,mBAAAk4B,QAAA,uBAAuDl4B,KAAA,QAAAk4B,QAAA,UAAArjB,MAAAlP,EAAA,YAAA00B,WAAA,gBAAgF1tB,IAAA,YAAA+nB,YAAA,WAAAnD,OACpwEzd,KAAAnO,EAAAwO,KAAAL,KACAM,UAAAzO,EAAAwO,KAAAT,UACqBkO,OAAQlS,GAAA,QAAA/J,EAAAwO,KAAA,YAAA3S,KAAA,QAAwDsrB,UAAWjY,MAAAlP,EAAA,aAA0BtC,IAAKyzD,MAAA,SAAA/pC,GAAyBA,EAAA3U,OAAAunB,YAAsCh6B,EAAA0pD,YAAAtiC,EAAA3U,OAAAvD,aAAsClP,EAAA4oB,GAAA,KAAAU,EAAA,UAA6ByF,YAAA,MAAArxB,IAAsBikE,MAAA3hE,EAAAy8D,cAAwBz8D,EAAA4oB,GAAA,qBAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,UAAuDyF,YAAA,gBAAArxB,IAAgCikE,MAAA3hE,EAAA07D,cAAwB17D,EAAA4oB,GAAA,yBAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,OAAwDsC,OAAOnd,UAAAzO,EAAAwO,KAAAT,YAA8Bub,EAAA,OAAAtpB,EAAAwO,KAAAV,YAAA7M,OAAA,EAAAqoB,EAAA,KAAsDyF,YAAA,yBAAAyL,aAAkDokG,aAAA,IAAAC,gBAAA,OAAsC7+H,EAAA4oB,GAAA5oB,EAAAmoB,GAAAnoB,EAAAwO,KAAAV,gBAAA9N,EAAA6oB,OAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,OAA0EyF,YAAA,eAAyB/uB,EAAAwO,KAAAP,KAAAhN,OAAA,EAAAqoB,EAAA,KAAqCrN,OAAOy2B,KAAA1yC,EAAAwO,KAAAP,QAAsBjO,EAAA4oB,GAAA,kDAAA5oB,EAAA6oB,KAAA7oB,EAAA4oB,GAAA,KAAA5oB,EAAAwO,KAAAR,OAAA/M,OAAA,EAAAqoB,EAAA,KAAqHyF,YAAA,cAAwB/uB,EAAA4oB,GAAA5oB,EAAAmoB,GAAAnoB,EAAAwO,KAAAR,QAAA,wBAAAhO,EAAA6oB,OAAA7oB,EAAA4oB,GAAA,KAAAU,EAAA,OAA0FyF,YAAA,eAAyB/uB,EAAAyoD,KAAAxnD,OAAA,EAAAqoB,EAAA,QAAmCrN,OAAOwsC,KAAAzoD,EAAAyoD,QAAiBzoD,EAAA6oB,MAAA,KAAA7oB,EAAA4oB,GAAA,KAAArsB,KAAA,mBAAA+sB,EAAA,OAAAtpB,EAAA,mBAAAspB,EAAA,OAAAtpB,EAAAwO,KAAAN,MAAAjN,OAAA,EAAAqoB,EAAA,SAA4IyF,YAAA,aAAA9S,OAAgCs/C,YAAAv7D,EAAAwO,KAAAzE,GAAAu4D,WAAAnlE,OAAA6C,EAAAwO,KAAAN,UAAiElO,EAAA6oB,MAAA,GAAA7oB,EAAA6oB,KAAA7oB,EAAA4oB,GAAA,KAAA5oB,EAAAk8D,mBAAgKl8D,EAAA6oB,KAAhKS,EAAA,OAAyEyF,YAAA,eAAyBxyB,KAAA6hE,iBAAA,EAAA90C,EAAA,KAAsCyF,YAAA,cAAwB/uB,EAAA4oB,GAAA5oB,EAAAmoB,GAAA5rB,KAAA6hE,kBAAA,IAAAp+D,EAAAmoB,GAAAnoB,EAAAyoB,GAAA,aAAAlsB,KAAA6hE,sBAAAp+D,EAAA6oB,SAAA7oB,EAAA6oB,UACt/C5sB,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,K5Eo8lCM,SAAUtD,EAAQD,EAASH,G6E18lCjCI,EAAAD,QAAAH,EAAAyB,EAAA,+C7Eg9lCM,SAAUrB,EAAQsD,EAAqB1D,GAE7C,Y8El9lCA,SAAAymE,GAAA1jE,GACA/C,EAAA,I9Ek9lCqB,GAAIolI,GAAiHplI,EAAoB,I8En9lC9JqlI,EAAArlI,EAAA,IAGA4mE,EAAA5mE,EAAA,GASA6mE,EAAAJ,EAKAK,EAAAF,EACAw+D,EAAA,EACAC,EAAA,GATA,EAWAx+D,EAPA,kBAEA,KAUAnjE,GAAA,EAAAojE,EAAA,S9E29lCM,SAAU1mE,EAAQD,EAASH,G+El/lCjC,GAAAmP,GAAAnP,EAAA,GACA,iBAAAmP,SAAA/O,EAAAC,EAAA8O,EAAA,MACAA,EAAA43D,SAAA3mE,EAAAD,QAAAgP,EAAA43D,OAEA/mE,GAAA,cAAAmP,GAAA,O/E2/lCM,SAAU/O,EAAQD,EAASH,GgFlgmCjCG,EAAAC,EAAAD,QAAAH,EAAA,OAKAG,EAAAqF,MAAApF,EAAAC,EAAA,04BAAi6B,MhF2gmC35B,SAAUD,EAAQsD,EAAqB1D,GAE7C,YiFlhmCA,IAAAsC,GAAA,WAA0B,GAAAgE,GAAAzD,KAAaykE,EAAAhhE,EAAAimB,eAA0BqD,EAAAtpB,EAAAg3C,MAAA1tB,IAAA03C,CAAwB,OAAA13C,GAAA,cAAwBrN,OAAO5hB,KAAA,WAAgBivB,EAAA,OAAAA,EAAA,OAAsByF,YAAA,aAAArxB,IAA6BikE,MAAA,SAAAv6C,GAAyBpnB,EAAAoiB,MAAA,aAAqBpiB,EAAA4oB,GAAA,KAAAU,EAAA,OAAwByF,YAAA,kBAA4BzF,EAAA,OAAYyF,YAAA,oBAA8BzF,EAAA,OAAYyF,YAAA,iBAA2B/uB,EAAAqoB,GAAA,cAAAroB,EAAA4oB,GAAA,KAAAU,EAAA,OAA6CyF,YAAA,cAAwB/uB,EAAA4oB,GAAA,KAAAU,EAAA,OAAwByF,YAAA,eAAyB/uB,EAAAqoB,GAAA,QAAAroB,EAAA4oB,GAAA,gDAAA5oB,EAAA4oB,GAAA,KAAAU,EAAA,OAA8FyF,YAAA,cAAwB/uB,EAAA4oB,GAAA,KAAAU,EAAA,OAAwByF,YAAA,iBAA2B/uB,EAAAqoB,GAAA,UAAAroB,EAAA4oB,GAAA,iCAAAU,EAAA,UAAwEyF,YAAA,uBAAArxB,IAAuCikE,MAAA,SAAAv6C,GAAyBpnB,EAAAoiB,MAAA,aAAqBpiB,EAAA4oB,GAAA,qDAC1yB3sB,KACAqlE,GAAiBtlE,SAAAC,kBACjBmB,GAAA,KjFuhmCM,SAAUtD,EAAQsD,EAAqB1D,GAE7C,YAGA,SAASslI,GAAmBhvH,GAAO,GAAI3L,MAAMC,QAAQ0L,GAAM,CAAE,IAAK,GAAIjW,GAAI,EAAGklI,EAAO56H,MAAM2L,EAAI/O,QAASlH,EAAIiW,EAAI/O,OAAQlH,IAAOklI,EAAKllI,GAAKiW,EAAIjW,EAAM,OAAOklI,GAAe,MAAO56H,OAAMuR,KAAK5F,GkF7hmC1L3L,MAAMpJ,UAAU6pE,OAAS,WACrB,MAAOvoE,MAAK6H,IAAIqF,KAAKC,WAAW+7E,UAAUl4E,OAAO,SAAUK,EAAG7T,EAAGwW,GAC7D,OAAgC,IAAzBA,EAAEtR,QAAQ2O,EAAG7T,EAAI,KACzB0rF,UAAUrhF,IAAIqF,KAAKs+B,QAG1B1jC,MAAMpJ,UAAU+pE,QAAU,WAAY,GAAAO,EAClC,QAAOA,MAAGpoE,OAAHmL,MAAAi9D,EAAAy5D,EAAaziI,QAGxB8H,MAAMpJ,UAAUikI,YAAc,WAC1B,MAAO3iI,MAAKwH,OAAO,SAACykD,EAAKhqD,GAErB,MADc6F,OAAMC,QAAQ9F,GAEjBgqD,EAAIrrD,OAAOqB,EAAI0gI,eAEnB12E,EAAIrrD,OAAOqB,SAI1B6F,MAAMpJ,UAAUkkI,KAAO,SAAU5uH,GAC7B,MAAOhU,MAAKgR,OAAO,SAAUxT,GACzB,MAAOwW,GAAEtR,QAAQlF,GAAK","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"static/js/tasks/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 23);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Store */\n/* unused harmony export install */\n/* unused harmony export mapState */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return mapMutations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return mapGetters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return mapActions; });\n/* unused harmony export createNamespacedHelpers */\n/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (false) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (false) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (false) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (false) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (false) {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (false) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    false\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (false) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (false) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (false) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (false) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (false) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (false) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (false) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (false) {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (false) {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (false) {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (false) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (false) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index_esm);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(28)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TaskObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getTagsInString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return filters; });\n\n\n// constructors don't work with Jest apparently (since it uses Node?), so we can't use them\nfunction TaskObject(obj) {\n    this.id = obj.id;\n    this.content = obj.content;\n    this.description = obj.description || \"\";\n\n    this.complete = obj.complete || false;\n    this.author = obj.author || \"\";\n    this.link = obj.link || \"\";\n\n    this.tasks = obj.tasks || [];\n    this.parent = obj.parent || null;\n\n    this.bold = obj.bold || false;\n}\n\n// a tag is a word that starts with a #\nfunction getTagsInString(str) {\n    return str.split(\" \").filter(function (s) {\n        return s.length > 1 && s[0] === \"#\";\n    });\n}\n\nvar filters = {\n    all: function all(tasks) {\n        return tasks;\n    },\n    active: function active(tasks) {\n        return tasks.filter(function (task) {\n            return !task.complete;\n        });\n    },\n    completed: function completed(tasks) {\n        return tasks.filter(function (task) {\n            return task.complete;\n        });\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (\"flowyClone\");\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (false\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (false\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"production\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (false) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"production\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    false\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (false) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (false) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (false) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (false) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (false) {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (false) {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (false) {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (false) {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (false) {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        false\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (false\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (false) {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(4), __webpack_require__(8).setImmediate))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(24);\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Home_vue__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store_store_js__ = __webpack_require__(45);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"app\",\n    el: '#app',\n    components: {\n        Home: __WEBPACK_IMPORTED_MODULE_0__components_Home_vue__[\"a\" /* default */]\n    },\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"d\" /* mapMutations */])([\"changeSearchTerm\"]), Object(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"b\" /* mapActions */])([\"initialiseApp\"])),\n    created: function created() {\n        var _this = this;\n\n        this.initialiseApp();\n\n        //clear the search term when escape is pressed\n        //arrow function preserves context\n        window.addEventListener('keyup', function (event) {\n            if (event.keyCode === 27) {\n                document.activeElement.blur();\n                _this.changeSearchTerm(\"\");\n            }\n        });\n    },\n    store: __WEBPACK_IMPORTED_MODULE_2__store_store_js__[\"a\" /* default */]\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Settings_vue__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Clipboard_vue__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Firebase_vue__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_task_js__ = __webpack_require__(5);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"home\",\n  data: function data() {\n    return {\n      topRightComponent: \"settings\",\n      newTask: \"\",\n      showClearButton: false\n    };\n  },\n\n  components: {\n    Settings: __WEBPACK_IMPORTED_MODULE_1__Settings_vue__[\"a\" /* default */],\n    Clipboard: __WEBPACK_IMPORTED_MODULE_2__Clipboard_vue__[\"a\" /* default */],\n    Firebase: __WEBPACK_IMPORTED_MODULE_3__Firebase_vue__[\"a\" /* default */]\n  },\n  methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"incrementTaskStorageUID\", \"changeSearchTerm\", \"changeVisibility\", \"setTask\", \"addTaskToRoot\", \"changeShowInnerTasks\", \"setCurrentTopRightTab\"]), {\n    addTaskFromInput: function addTaskFromInput() {\n      var value = this.newTask && this.newTask.trim();\n      if (!value) {\n        return;\n      }\n      this.addTask(value);\n    },\n    addTask: function addTask() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      this.incrementTaskStorageUID();\n      var newTask = new __WEBPACK_IMPORTED_MODULE_4__base_task_js__[\"a\" /* TaskObject */]({\n        id: this.taskStorageUID,\n        content: value,\n        parent: \"root\"\n      });\n      this.setTask(newTask);\n      this.addTaskToRoot(newTask.id);\n      this.newTask = \"\";\n\n      this.$nextTick(function () {\n        var addedTaskInput = document.getElementById(\"task-\" + newTask.id + \"-input\");\n        if (addedTaskInput) {\n          addedTaskInput.focus();\n        }\n      });\n    }\n  }),\n  computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])([\"tasksAsArray\", \"taskByID\", \"rootTasks\", \"tagsInTasks\", \"taskStorageUID\", \"searchTerm\", \"visibility\", \"clipboard\", \"currentTopRightTab\", \"storageMethod\"]), {\n\n    localVisibility: {\n      get: function get() {\n        return this.visibility;\n      },\n      set: function set(newValue) {\n        this.changeVisibility(newValue);\n      }\n    },\n\n    //can filter tasks by a search term or visibility\n    filteredTasks: function filteredTasks() {\n      var currentSearchTerm = this.searchTerm && this.searchTerm.trim();\n\n      var shouldShowInnerTasks = this.visibility === \"all\" && currentSearchTerm.length === 0;\n      if (shouldShowInnerTasks) {\n        return this.rootTasks;\n      }\n\n      if (!currentSearchTerm) {\n        return __WEBPACK_IMPORTED_MODULE_4__base_task_js__[\"b\" /* filters */][this.visibility](this.tasksAsArray);\n      }\n\n      var tasksContainingSearchTerm = this.tasksAsArray.filter(function (task) {\n        return task.content.toLowerCase().indexOf(currentSearchTerm.toLowerCase()) > -1;\n      });\n      return __WEBPACK_IMPORTED_MODULE_4__base_task_js__[\"b\" /* filters */][this.visibility](tasksContainingSearchTerm);\n    },\n    filteredTaskIDs: function filteredTaskIDs() {\n      return this.filteredTasks.map(function (task) {\n        return task.id;\n      });\n    },\n    numberOfTasksRemaining: function numberOfTasksRemaining() {\n      if (this.visibility === \"active\") {\n        return this.filteredTaskIDs.length;\n      }\n      var vm = this;\n      function recursiveNumberOfActiveTasks(taskID) {\n        var thisTask = vm.taskByID(taskID);\n        var thisTaskIsActive = thisTask.complete ? 0 : 1;\n\n        var activeInnerTasks = thisTask.tasks.map(function (innerTaskID) {\n          return recursiveNumberOfActiveTasks(innerTaskID);\n        });\n        var summedActiveInnerTasks = activeInnerTasks.reduce(function (acc, val) {\n          return acc + val;\n        }, 0);\n\n        return thisTaskIsActive + summedActiveInnerTasks;\n      }\n\n      var mappedNumberOfActiveTasks = this.filteredTaskIDs.map(function (taskID) {\n        return recursiveNumberOfActiveTasks(taskID);\n      });\n      return mappedNumberOfActiveTasks.reduce(function (acc, val) {\n        return acc + val;\n      }, 0);\n    },\n    tags: function tags() {\n      return this.tagsInTasks(this.filteredTaskIDs);\n    },\n\n\n    computedSearchTerm: {\n      get: function get() {\n        return this.searchTerm;\n      },\n      set: function set(value) {\n        this.changeSearchTerm(value);\n      }\n    }\n  }),\n  filters: {\n    pluralise: function pluralise(n) {\n      return n === 1 ? \"item\" : \"items\";\n    }\n  },\n  watch: {\n    localVisibility: function localVisibility() {\n      var shouldShowInnerTasks = this.visibility === \"all\" && this.searchTerm.trim().length === 0;\n      this.changeShowInnerTasks(shouldShowInnerTasks);\n    },\n    searchTerm: function searchTerm() {\n      var shouldShowInnerTasks = this.visibility === \"all\" && this.searchTerm.trim().length === 0;\n      this.changeShowInnerTasks(shouldShowInnerTasks);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    window.addEventListener(\"keyup\", function (event) {\n      var focusedElementIsntInput = document.activeElement.tagName.toLowerCase() !== \"input\" && document.activeElement.tagName.toLowerCase() !== \"textarea\";\n\n      switch (event.keyCode) {\n        //focus on the new task field when n is pressed and you're not in an input\n        case 78:\n          if (focusedElementIsntInput) {\n            _this.$refs.newTaskInput.focus();\n          }\n          break;\n\n        //focus on the search field when s is pressed\n        case 83:\n          if (focusedElementIsntInput) {\n            _this.$refs.searchInput.focus();\n          }\n          break;\n      }\n    });\n  }\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"settings\",\n    data: function data() {\n        return {};\n    },\n\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"setShowChildren\", \"setStorageMethod\"])),\n    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])([\"showChildren\", \"storageMethod\"]), {\n        computedShowChildren: {\n            get: function get() {\n                return this.showChildren;\n            },\n            set: function set(value) {\n                this.setShowChildren(value);\n            }\n        },\n        computedStorageMethod: {\n            get: function get() {\n                return this.storageMethod;\n            },\n            set: function set(value) {\n                this.setStorageMethod(value);\n            }\n        }\n    })\n});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"clipboard\",\n    data: function data() {\n        return {};\n    },\n\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"setClipboard\", \"setCurrentTopRightTab\"])),\n    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])([\"clipboard\", \"clipboardMode\", \"taskByID\"]), {\n        clipboardNotEmpty: function clipboardNotEmpty() {\n            return this.clipboard !== null;\n        },\n        taskContent: function taskContent() {\n            return this.taskByID(this.clipboard).content;\n        }\n    })\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"firebase\",\n    data: function data() {\n        return {};\n    },\n\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"setFirebaseStateKey\"]), Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"b\" /* mapActions */])([\"initialiseTasks\", \"saveStateToFirebase\"])),\n    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])([\"firebaseStateKey\"]), {\n        computedFirebaseStateKey: {\n            get: function get() {\n                return this.firebaseStateKey;\n            },\n            set: function set(value) {\n                this.setFirebaseStateKey(value);\n            }\n        }\n    })\n});\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = __webpack_require__(16);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = __webpack_require__(17);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/* harmony export (immutable) */ __webpack_exports__[\"__makeTemplateObject\"] = __makeTemplateObject;\n/* harmony export (immutable) */ __webpack_exports__[\"__importStar\"] = __importStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__importDefault\"] = __importDefault;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"tasks\",\n    props: [\"outerTaskID\", \"taskIDs\"],\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"removeTaskFromParentTask\", \"deleteTask\"]), {\n\n        //event is fired from a child task\n        deleteInnerTask: function deleteInnerTask(taskID) {\n            if (this.outerTaskID) {\n                this.removeTaskFromParentTask({\n                    parentTaskID: this.outerTaskID,\n                    innerTaskID: taskID\n                });\n            }\n            this.deleteTask(taskID);\n        }\n    })\n});\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"tags\",\n    props: [\"tags\"],\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"changeSearchTerm\"]), {\n        updateSearchTerm: function updateSearchTerm(event) {\n            //only adds the text following the #, if it has changed\n            var newSearchTerm = event.target.innerText.slice(0).trim();\n            if (this.searchTerm !== newSearchTerm) {\n                this.changeSearchTerm(newSearchTerm);\n            }\n        }\n    }),\n    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])([\"searchTerm\"]))\n});\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__DetailedTask_vue__ = __webpack_require__(71);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base_task_js__ = __webpack_require__(5);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"task\",\n    props: [\"taskID\"],\n    data: function data() {\n        return {\n            showContextMenu: false,\n            showModal: false,\n            expandChildrenFlag: true\n        };\n    },\n\n    components: {\n        DetailedTask: __WEBPACK_IMPORTED_MODULE_1__DetailedTask_vue__[\"a\" /* default */]\n    },\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"incrementTaskStorageUID\", \"setTask\", \"addTaskToTask\", \"setClipboard\", \"setClipboardMode\", \"removeTaskFromRoot\", \"removeTaskFromParentTask\"]), {\n        toggleComplete: function toggleComplete() {\n            this.task.complete = !this.task.complete;\n            this.toggleContextMenu();\n            this.setTask(this.task);\n        },\n        toggleContextMenu: function toggleContextMenu() {\n            this.showContextMenu = !this.showContextMenu;\n        },\n        bold: function bold() {\n            var _this = this;\n\n            this.task.bold = !this.task.bold;\n            this.$nextTick(function () {\n                Stretchy.resize(_this.$refs.taskInput);\n            });\n            this.toggleContextMenu();\n            this.setTask(this.task);\n        },\n        addNewTask: function addNewTask() {\n            this.incrementTaskStorageUID();\n            var newTask = new __WEBPACK_IMPORTED_MODULE_2__base_task_js__[\"a\" /* TaskObject */]({\n                id: this.taskStorageUID,\n                content: \"\",\n                parent: this.task.id\n            });\n            this.setTask(newTask);\n            this.addTaskToTask({ taskID: this.task.id, newTaskID: newTask.id });\n\n            this.$nextTick(function () {\n                var addedTaskInput = document.getElementById(\"task-\" + newTask.id + \"-input\");\n                if (addedTaskInput) {\n                    addedTaskInput.focus();\n                }\n            });\n        },\n        deleteTask: function deleteTask() {\n            var confirm = window.confirm(\"Are you sure you want to delete this?\");\n            if (confirm) {\n                this.$emit('deleteTask', this.task.id);\n            }\n        },\n\n\n        //clipboard\n        copyTask: function copyTask() {\n            this.setClipboardMode(\"copy\");\n            this.setClipboard(this.taskID);\n            this.toggleContextMenu();\n        },\n        cutTask: function cutTask() {\n            this.setClipboardMode(\"cut\");\n            this.setClipboard(this.taskID);\n            this.toggleContextMenu();\n        },\n        removeOriginalTaskIfCutting: function removeOriginalTaskIfCutting(originalTaskID) {\n            if (this.clipboardMode === \"copy\") {\n                return;\n            }\n            var originalTask = this.taskByID(originalTaskID);\n            if (originalTask.parent === \"root\") {\n                this.removeTaskFromRoot(originalTaskID);\n            } else {\n                this.removeTaskFromParentTask({\n                    parentTaskID: originalTask.parent,\n                    innerTaskID: originalTaskID\n                });\n            }\n        },\n        getTaskIDToPaste: function getTaskIDToPaste() {\n            var vm = this;\n\n            function cloneTaskToLeaves(taskID) {\n                vm.incrementTaskStorageUID();\n                var copiedTask = vm.taskByID(taskID);\n                var cloneOfCopiedTask = JSON.parse(JSON.stringify(copiedTask));\n                cloneOfCopiedTask.id = vm.taskStorageUID;\n                cloneOfCopiedTask.tasks = cloneOfCopiedTask.tasks.map(function (innerTaskID) {\n                    return cloneTaskToLeaves(innerTaskID);\n                });\n                vm.setTask(cloneOfCopiedTask);\n                return cloneOfCopiedTask.id;\n            }\n\n            //we need to use a whole new task (including all inner tasks) when copying\n            if (this.clipboardMode === \"copy\") {\n                return cloneTaskToLeaves(this.clipboard);\n            }\n            return this.clipboard;\n        },\n        getTaskIDToPasteAndRemoveOriginalTask: function getTaskIDToPasteAndRemoveOriginalTask() {\n            var taskIDToPaste = this.getTaskIDToPaste();\n            this.removeOriginalTaskIfCutting(this.clipboard);\n\n            //have to set the new parent too - we are in the pasted task's parent here\n            var taskThatsBeingPasted = this.taskByID(taskIDToPaste);\n            taskThatsBeingPasted.parent = this.task.id;\n            this.setTask(taskThatsBeingPasted);\n\n            return taskIDToPaste;\n        },\n        pasteInto: function pasteInto() {\n            var taskIDToPaste = this.getTaskIDToPasteAndRemoveOriginalTask();\n            this.task.tasks.push(taskIDToPaste);\n            this.toggleContextMenu();\n        },\n        displayModal: function displayModal() {\n            this.showModal = true;\n            document.getElementsByTagName('body')[0].classList.add('noscroll');\n        },\n        hideModal: function hideModal() {\n            this.showModal = false;\n            document.getElementsByTagName('body')[0].classList.remove('noscroll');\n        }\n    }),\n    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])([\"taskStorageUID\", \"taskByID\", \"tasksInTask\", \"tagsInTask\", \"showInnerTasks\", \"showChildren\", \"clipboard\", \"clipboardMode\"]), {\n        task: function task() {\n            return this.taskByID(this.taskID);\n        },\n\n        taskContent: {\n            get: function get() {\n                return this.task.content;\n            },\n            set: function set(newContent) {\n                this.task.content = newContent;\n                this.setTask(this.task);\n            }\n        },\n\n        showHideButtonText: function showHideButtonText() {\n            return this.expandChildrenFlag ? \"[-]\" : \"[+]\";\n        },\n        showHideText: function showHideText() {\n            return this.expandChildrenFlag ? \"Hide\" : \"Show\";\n        },\n        tags: function tags() {\n            return this.tagsInTask(this.task);\n        },\n        numberOfChildren: function numberOfChildren() {\n            var vm = this;\n            function recursiveNumberOfChildren(taskID) {\n                var thisTask = vm.taskByID(taskID);\n                var innerChildren = thisTask.tasks.map(function (innerTaskID) {\n                    return recursiveNumberOfChildren(innerTaskID);\n                });\n                var numberOfInnerChildren = innerChildren.reduce(function (acc, val) {\n                    return acc + val;\n                }, 0);\n                return 1 + numberOfInnerChildren;\n            }\n            var mappedNumberOfActiveTasks = this.task.tasks.map(function (taskID) {\n                return recursiveNumberOfChildren(taskID);\n            });\n            return mappedNumberOfActiveTasks.reduce(function (acc, val) {\n                return acc + val;\n            }, 0);\n        },\n        shouldShowChildren: function shouldShowChildren() {\n            return this.showInnerTasks || this.showChildren;\n        }\n    }),\n    filters: {\n        pluralise: function pluralise(n) {\n            return n === 1 ? \"child\" : \"children\";\n        }\n    }\n});\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(1);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: \"detailedTask\",\n    props: [\"taskID\"],\n    data: function data() {\n        return {\n            //all task's properties must be added here, so they are reactive\n            task: {\n                id: 0,\n                content: \"\",\n                description: \"\",\n                complete: false,\n                author: \"\",\n                link: \"\",\n                tasks: [],\n                bold: false\n            }\n        };\n    },\n\n    methods: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"d\" /* mapMutations */])([\"setTask\"]), {\n        goHome: function goHome() {\n            this.$root.$emit(\"change-component-event\", \"home\");\n        }\n    }),\n    computed: _extends({}, Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])([\"taskByID\", \"tagsInTask\"]), {\n        taskLink: function taskLink() {\n            if (this.task.link.length > 0) {\n                return this.task.link;\n            }\n            return \"#\";\n        },\n        tags: function tags() {\n            return this.tagsInTask(this.task);\n        }\n    }),\n    watch: {\n        task: {\n            handler: function handler(newTask) {\n                if (this.shouldUpdateTask) {\n                    this.setTask(newTask);\n                }\n            },\n            deep: true\n        }\n    },\n    created: function created() {\n        this.task = this.taskByID(this.taskID);\n        this.shouldUpdateTask = true;\n    }\n});\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: 'modal'\n});\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App_vue__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Tasks_vue__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Tags_vue__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Task_vue__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Modal_vue__ = __webpack_require__(77);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__base_useful_functions_js__ = __webpack_require__(81);\n\n\n\n\n\n\n\n\n\n//imported so that we get the array functions\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component(\"tasks\", __WEBPACK_IMPORTED_MODULE_2__components_Tasks_vue__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component(\"tags\", __WEBPACK_IMPORTED_MODULE_3__components_Tags_vue__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component(\"task\", __WEBPACK_IMPORTED_MODULE_4__components_Task_vue__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component(\"modal\", __WEBPACK_IMPORTED_MODULE_5__components_Modal_vue__[\"a\" /* default */]);\n\n// register a global custom directive called `v-resize-on-insert` that resizes an element when inserted into the DOM\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].directive('resize-on-insert', {\n  inserted: function inserted(el) {\n    Stretchy.resize(el);\n  }\n});\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_1__App_vue__[\"a\" /* default */]);\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(9)))\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(10);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0eb9df51_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(61);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(26)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0eb9df51_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(27);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"5e30dcf0\", content, true, {});\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \":root{--link-colour:#42b983;--separator-colour:#d1d1d1}body.noscroll{overflow:hidden}a{color:var(--link-colour);text-decoration:none;cursor:pointer}a:hover{color:#982c61;border-bottom:2px solid #4a4a4a}button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{background-color:var(--link-colour);border-color:var(--link-colour);color:#fff}input[type=search]::-webkit-search-cancel-button{display:none}.searchBoxWrapper{display:inline-flex;align-items:center}.inputBox{display:block;margin:10px 0;padding:10px;min-width:200px;min-height:42px}.clearButton{margin-left:-25px}.selected{color:#982c61}.separator{background-color:var(--separator-colour);height:1px;margin:10px 0}.fade-enter-active,.fade-leave-active{transition:opacity .2s}.fade-enter,.fade-leave-to{opacity:0}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue__ = __webpack_require__(11);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f7e426a0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Home_vue__ = __webpack_require__(44);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(30)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Home_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f7e426a0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Home_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(31);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"29dc9e16\", content, true, {});\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"#home{font-family:Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#2c3e50}#topRight{position:absolute;top:1%;right:1%;min-width:275px;max-width:275px;padding:0 0 10px 10px;border:1px solid var(--separator-colour);opacity:.1}#topRight:hover{opacity:1}#topRightButtons{display:flex;justify-content:flex-end;margin-bottom:10px}.topRightButton{padding:6px 10px;margin-bottom:-1px;margin-right:-1px;border:1px solid #ccc;cursor:pointer;background:#f0f0f0;color:#34495e}.bottomRightButton{display:flex;align-items:center;justify-content:center;position:absolute;bottom:25%;right:22%;width:30px;height:30px;border-radius:100%;padding:10px;cursor:pointer;background-color:#f44336;background:#f44336;border:none;outline:none;color:#fff;opacity:.5;font-size:36px;box-shadow:6px 6px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.bottomRightButton:hover{opacity:1;box-shadow:6px 6px 6px rgba(0,0,0,.32),0 3px 6px rgba(0,0,0,.46)}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue__ = __webpack_require__(12);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0de64cd4_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Settings_vue__ = __webpack_require__(35);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(33)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0de64cd4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Settings_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0de64cd4_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Settings_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(34);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"37b9771a\", content, true, {});\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"#settings[data-v-0de64cd4]{padding:0 5px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"settings\"}},[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedShowChildren),expression:\"computedShowChildren\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.computedShowChildren)?_vm._i(_vm.computedShowChildren,null)>-1:(_vm.computedShowChildren)},on:{\"change\":function($event){var $$a=_vm.computedShowChildren,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.computedShowChildren=$$a.concat([$$v]))}else{$$i>-1&&(_vm.computedShowChildren=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.computedShowChildren=$$c}}}}),_vm._v(\"\\n        show children\\n    \")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n    storage method\\n    \"),_c('label',[_vm._v(\"\\n        localStorage\\n        \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedStorageMethod),expression:\"computedStorageMethod\"}],attrs:{\"type\":\"radio\",\"value\":\"localStorage\"},domProps:{\"checked\":_vm._q(_vm.computedStorageMethod,\"localStorage\")},on:{\"change\":function($event){_vm.computedStorageMethod=\"localStorage\"}}})]),_vm._v(\" \"),_c('label',[_vm._v(\"\\n        firebase\\n        \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedStorageMethod),expression:\"computedStorageMethod\"}],attrs:{\"type\":\"radio\",\"value\":\"firebase\"},domProps:{\"checked\":_vm._q(_vm.computedStorageMethod,\"firebase\")},on:{\"change\":function($event){_vm.computedStorageMethod=\"firebase\"}}})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Clipboard_vue__ = __webpack_require__(13);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_52a62c4a_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Clipboard_vue__ = __webpack_require__(39);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(37)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-52a62c4a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Clipboard_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_52a62c4a_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Clipboard_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(38);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"6987a971\", content, true, {});\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.clipboardNotEmpty)?_c('div',[_c('p',{staticStyle:{\"margin\":\"0\"}},[_vm._v(_vm._s(this.clipboard)+\": \"+_vm._s(_vm.taskContent))]),_vm._v(\" \"),_c('span',[_c('b',{staticStyle:{\"display\":\"inline\"}},[_vm._v(\"mode: \"+_vm._s(this.clipboardMode))]),_vm._v(\" \"),_c('button',{staticClass:\"btn\",staticStyle:{\"float\":\"right\"},on:{\"click\":function($event){_vm.setClipboard(null); _vm.setCurrentTopRightTab('settings')}}},[_vm._v(\"x\\n        \")])])]):_vm._e()}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Firebase_vue__ = __webpack_require__(14);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4d54eec3_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Firebase_vue__ = __webpack_require__(43);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(41)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4d54eec3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Firebase_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_4d54eec3_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Firebase_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(42);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"31a72914\", content, true, {});\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('label',[_vm._v(\"\\n        state key\\n        \"),_c('input',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.computedFirebaseStateKey),expression:\"computedFirebaseStateKey\"}],staticStyle:{\"min-width\":\"125px\"},attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.computedFirebaseStateKey)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.computedFirebaseStateKey=$event.target.value}}})]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.initialiseTasks}},[_vm._v(\"load tasks\")]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.saveStateToFirebase}},[_vm._v(\"save tasks\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"home\"}},[_c('header',{staticStyle:{\"display\":\"inline-block\"}},[_c('h1',[_vm._v(\"Home\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newTask),expression:\"newTask\"}],ref:\"newTaskInput\",staticClass:\"inputBox\",attrs:{\"type\":\"search\",\"placeholder\":\"New task\"},domProps:{\"value\":(_vm.newTask)},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.addTaskFromInput($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.newTask=$event.target.value}}}),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"searchBoxWrapper\",on:{\"mouseover\":function($event){_vm.showClearButton = true},\"mouseleave\":function($event){_vm.showClearButton = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedSearchTerm),expression:\"computedSearchTerm\"}],ref:\"searchInput\",staticClass:\"inputBox\",attrs:{\"type\":\"search\",\"placeholder\":\"Search\"},domProps:{\"value\":(_vm.computedSearchTerm)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.computedSearchTerm=$event.target.value}}}),_vm._v(\" \"),(_vm.showClearButton)?_c('a',{staticClass:\"clearButton\",on:{\"click\":function($event){_vm.computedSearchTerm = ''}}},[_vm._v(\"x\")]):_vm._e()])]),_vm._v(\" \"),_c('span',[_c('a',{class:{ selected: _vm.localVisibility === 'all' },on:{\"click\":function($event){_vm.localVisibility = 'all'}}},[_vm._v(\"all\")]),_vm._v(\" \"),_c('a',{class:{ selected: _vm.localVisibility === 'active' },on:{\"click\":function($event){_vm.localVisibility = 'active'}}},[_vm._v(\"active\")]),_vm._v(\" \"),_c('a',{class:{ selected: _vm.localVisibility === 'completed' },on:{\"click\":function($event){_vm.localVisibility = 'completed'}}},[_vm._v(\"completed\")])]),_vm._v(\" \"),_c('tags',{attrs:{\"tags\":_vm.tags}}),_vm._v(\" \"),_c('div',{staticClass:\"separator\"})],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"topRight\"}},[_c('div',{attrs:{\"id\":\"topRightButtons\"}},[_c('button',{staticClass:\"topRightButton\",on:{\"click\":function($event){_vm.setCurrentTopRightTab('settings')}}},[_vm._v(\"Settings\\n            \")]),_vm._v(\" \"),(this.clipboard !== null)?_c('button',{staticClass:\"topRightButton\",on:{\"click\":function($event){_vm.setCurrentTopRightTab('clipboard')}}},[_vm._v(\"Clipboard\\n            \")]):_vm._e(),_vm._v(\" \"),(this.storageMethod === 'firebase')?_c('button',{staticClass:\"topRightButton\",on:{\"click\":function($event){_vm.setCurrentTopRightTab('firebase')}}},[_vm._v(\"Firebase\\n            \")]):_vm._e()]),_vm._v(\" \"),_c('div',[_c(_vm.currentTopRightTab,{tag:\"component\"})],1)]),_vm._v(\" \"),_c('section',[_c('tasks',{attrs:{\"outerTaskID\":null,\"taskIDs\":_vm.filteredTaskIDs}}),_vm._v(\" \"),(_vm.localVisibility !== 'completed')?_c('p',{staticStyle:{\"color\":\"#999\"}},[_vm._v(_vm._s(_vm.numberOfTasksRemaining)+\" \"+_vm._s(_vm._f(\"pluralise\")(_vm.numberOfTasksRemaining))+\" left\")]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"bottomRightButton\",on:{\"click\":function($event){_vm.addTask()}}},[_vm._v(\"+\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__key_js__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__modules_storage_js__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modules_tasks_js__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__modules_taskFiltering_js__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__modules_settings_js__ = __webpack_require__(56);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__modules_clipboard_js__ = __webpack_require__(57);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modules_topRightTabs_js__ = __webpack_require__(58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_lodash_debounce__ = __webpack_require__(59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_lodash_debounce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_babel_core_lib_transformation_file_options_config__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_babel_core_lib_transformation_file_options_config___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_babel_core_lib_transformation_file_options_config__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"a\" /* default */]);\n\nvar store = new __WEBPACK_IMPORTED_MODULE_1_vuex__[\"a\" /* default */].Store({\n    strict: __WEBPACK_IMPORTED_MODULE_10_babel_core_lib_transformation_file_options_config__[\"env\"].NODE_ENV !== 'production',\n    modules: {\n        storageModule: __WEBPACK_IMPORTED_MODULE_3__modules_storage_js__[\"a\" /* default */],\n        tasksModule: __WEBPACK_IMPORTED_MODULE_4__modules_tasks_js__[\"a\" /* default */],\n        taskFilteringModule: __WEBPACK_IMPORTED_MODULE_5__modules_taskFiltering_js__[\"a\" /* default */],\n        settingsModule: __WEBPACK_IMPORTED_MODULE_6__modules_settings_js__[\"a\" /* default */],\n        clipboardModule: __WEBPACK_IMPORTED_MODULE_7__modules_clipboard_js__[\"a\" /* default */],\n        topRightTabsModule: __WEBPACK_IMPORTED_MODULE_8__modules_topRightTabs_js__[\"a\" /* default */]\n    }\n});\n\n//this is only called at maximum three times a second\nstore.subscribe(__WEBPACK_IMPORTED_MODULE_9_lodash_debounce___default()(function (mutation, state) {\n    var storageObjectBuilder = function storageObjectBuilder() {\n        return {\n            tasks: Array.from(state.tasksModule.tasks.entries()),\n            rootTaskIDs: state.tasksModule.rootTaskIDs,\n            taskStorageUID: state.tasksModule.taskStorageUID,\n            settings: {\n                storageMethod: state.settingsModule.storageMethod,\n                firebaseStateKey: state.settingsModule.firebaseStateKey\n            }\n        };\n    };\n\n    var storageMethodIsLocalStorage = state.settingsModule.storageMethod === \"localStorage\";\n    var mutationIsTasksChange = [\"setTask\", \"deleteTask\", \"addTaskToTask\", \"addTaskToRoot\"].indexOf(mutation.type) > -1;\n    var mutationIsStorageChange = [\"setStorageMethod\", \"setFirebaseStateKey\"].indexOf(mutation.type) > -1;\n    if (storageMethodIsLocalStorage && mutationIsTasksChange || mutationIsStorageChange) {\n        localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__key_js__[\"a\" /* default */], JSON.stringify(storageObjectBuilder()));\n    }\n}, 300));\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (store);\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar state = {};\n\nvar getters = {};\n\nvar mutations = {};\n\nvar actions = {\n    initialiseApp: function initialiseApp(context) {\n        context.dispatch(\"initialiseSettings\", null, { root: true });\n        context.dispatch(\"initialiseTasks\", null, { root: true });\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    state: state,\n    getters: getters,\n    mutations: mutations,\n    actions: actions\n});\n\n/***/ }),\n/* 47 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_task_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__key_js__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__firebaseConfig_js__ = __webpack_require__(48);\n\n\n\n\nvar state = {\n    tasks: new Map(),\n    tasksChangeTracker: 1,\n    rootTaskIDs: [],\n    taskStorageUID: 0,\n\n    showInnerTasks: true\n};\n\nvar getters = {\n    tasks: function tasks(state, gettersArg) {\n        return state.tasksChangeTracker && state.tasks;\n    },\n    tasksAsArray: function tasksAsArray(state, gettersArg) {\n        return Array.from(gettersArg.tasks.values());\n    },\n\n    taskByID: function taskByID(state, gettersArg) {\n        return function (id) {\n            return gettersArg.tasks.get(id);\n        };\n    },\n    hasTask: function hasTask(state, gettersArg) {\n        return function (id) {\n            return gettersArg.tasks.has(id);\n        };\n    },\n    tasksInTask: function tasksInTask(state, gettersArg) {\n        return function (id) {\n            if (!gettersArg.hasTask(id)) {\n                return [];\n            }\n            var thisTask = gettersArg.taskByID(id);\n            return thisTask.tasks.map(function (taskID) {\n                return gettersArg.taskByID(taskID);\n            });\n        };\n    },\n\n    rootTaskIDs: function rootTaskIDs(state, gettersArg) {\n        return state.rootTaskIDs;\n    },\n    rootTasks: function rootTasks(state, gettersArg) {\n        return gettersArg.rootTaskIDs.map(function (id) {\n            return gettersArg.taskByID(id);\n        });\n    },\n\n\n    tagsInTask: function tagsInTask(state, gettersArg) {\n        return function (task) {\n            var tagsInContent = Object(__WEBPACK_IMPORTED_MODULE_0__base_task_js__[\"c\" /* getTagsInString */])(task.content);\n            var tagsInDescription = Object(__WEBPACK_IMPORTED_MODULE_0__base_task_js__[\"c\" /* getTagsInString */])(task.description);\n            var tagsToReturn = tagsInContent.concat(tagsInDescription);\n            if (typeof task.tasks !== \"undefined\" && task.tasks.length > 0) {\n                var innerTasks = gettersArg.tagsInTasks(task.tasks);\n                tagsToReturn = tagsToReturn.concat(innerTasks);\n            }\n            return tagsToReturn.unique();\n        };\n    },\n\n    tagsInTasks: function tagsInTasks(state, gettersArg) {\n        return function (tasks) {\n            return tasks.map(function (taskID) {\n                var innerTask = gettersArg.taskByID(taskID);\n                return gettersArg.tagsInTask(innerTask);\n            }).flatten().unique();\n        };\n    },\n\n    taskStorageUID: function taskStorageUID(state, gettersArg) {\n        return state.taskStorageUID;\n    },\n    showInnerTasks: function showInnerTasks(state, gettersArg) {\n        return state.showInnerTasks;\n    }\n};\n\nvar mutations = {\n    incrementTaskChangeTracker: function incrementTaskChangeTracker(state) {\n        state.tasksChangeTracker += 1;\n    },\n    initialiseTasksWithObject: function initialiseTasksWithObject(state, storageObjectString) {\n        if (!storageObjectString) {\n            return;\n        }\n        var storageObject = JSON.parse(storageObjectString);\n\n        if (storageObject.tasks) {\n            state.tasks = new Map(storageObject.tasks);\n        }\n\n        if (storageObject.rootTaskIDs) {\n            state.rootTaskIDs = storageObject.rootTaskIDs;\n        }\n\n        if (storageObject.taskStorageUID) {\n            state.taskStorageUID = storageObject.taskStorageUID;\n        }\n    },\n    setTask: function setTask(state, task) {\n        var taskID = task[\"id\"];\n        state.tasks.set(taskID, task);\n        mutations.incrementTaskChangeTracker(state);\n    },\n\n\n    //this is how you make a recursive function inside an object\n    deleteTask: function recursiveRemove(state, taskID) {\n\n        //removes any tasks that are inside the current one; they wouldn't be accessible after deletion anyway\n        var task = state.tasks.get(taskID);\n        task.tasks.map(function (innerTaskID) {\n            return recursiveRemove(state, innerTaskID);\n        });\n\n        state.tasks.delete(taskID);\n\n        //we might need to delete the task ID from the root too\n        mutations.removeTaskFromRoot(state, taskID);\n        mutations.incrementTaskChangeTracker(state);\n    },\n\n    removeTaskFromRoot: function removeTaskFromRoot(state, taskID) {\n        var rootTaskIDIndex = state.rootTaskIDs.indexOf(taskID);\n        if (rootTaskIDIndex > -1) {\n            state.rootTaskIDs.splice(rootTaskIDIndex, 1);\n        }\n    },\n\n    //only removes the taskID from the tasks array - doesn't delete the actual task\n    removeTaskFromParentTask: function removeTaskFromParentTask(state, _ref) {\n        var parentTaskID = _ref.parentTaskID,\n            innerTaskID = _ref.innerTaskID;\n\n        var parentTask = state.tasks.get(parentTaskID);\n        var parentTaskIDIndex = parentTask.tasks.indexOf(innerTaskID);\n        if (parentTaskIDIndex > -1) {\n            parentTask.tasks.splice(parentTaskIDIndex, 1);\n        }\n        mutations.setTask(state, parentTask);\n    },\n    addTaskToTask: function addTaskToTask(state, _ref2) {\n        var taskID = _ref2.taskID,\n            newTaskID = _ref2.newTaskID;\n\n        var task = state.tasks.get(taskID);\n        task.tasks.push(newTaskID);\n        mutations.incrementTaskChangeTracker(state);\n    },\n    addTaskToRoot: function addTaskToRoot(state, taskID) {\n        state.rootTaskIDs.push(taskID);\n    },\n\n\n    incrementTaskStorageUID: function incrementTaskStorageUID(state) {\n        state.taskStorageUID++;\n    },\n\n    changeShowInnerTasks: function changeShowInnerTasks(state, newShowInnerTasks) {\n        state.showInnerTasks = newShowInnerTasks;\n    }\n};\n\nvar actions = {\n    initialiseTasks: function initialiseTasks(context) {\n        if (context.getters.storageMethod === \"localStorage\") {\n            var storageObjectString = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_1__key_js__[\"a\" /* default */]);\n            context.commit(\"initialiseTasksWithObject\", storageObjectString);\n            context.commit(\"incrementTaskChangeTracker\");\n        } else {\n            var stateKey = context.getters.firebaseStateKey;\n            __WEBPACK_IMPORTED_MODULE_2__firebaseConfig_js__[\"a\" /* default */].ref(\"states/\" + stateKey).once(\"value\").then(function (snapshot) {\n                context.commit(\"initialiseTasksWithObject\", snapshot.val());\n                context.commit(\"incrementTaskChangeTracker\");\n            });\n        }\n    },\n    saveStateToFirebase: function saveStateToFirebase(context) {\n        var stateKey = context.getters.firebaseStateKey;\n        var storageObject = {\n            tasks: Array.from(context.getters.tasks.entries()),\n            rootTaskIDs: context.getters.rootTaskIDs,\n            taskStorageUID: context.getters.taskStorageUID\n        };\n        //have to stringify it because firebase doesn't store empty arrays\n        __WEBPACK_IMPORTED_MODULE_2__firebaseConfig_js__[\"a\" /* default */].ref(\"states/\" + stateKey).set(JSON.stringify(storageObject));\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    state: state,\n    getters: getters,\n    mutations: mutations,\n    actions: actions\n});\n\n/***/ }),\n/* 48 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_firebase_app__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_firebase_database__ = __webpack_require__(52);\n\n\n\nvar config = {\n    apiKey: \"AIzaSyBvzMqwJsz5txI3742d1k2EQ0QtUCKF2KA\",\n    authDomain: \"flowy-7f42c.firebaseapp.com\",\n    databaseURL: \"https://flowy-7f42c.firebaseio.com\",\n    projectId: \"flowy-7f42c\",\n    storageBucket: \"flowy-7f42c.appspot.com\",\n    messagingSenderId: \"406366096460\"\n};\n__WEBPACK_IMPORTED_MODULE_0_firebase_app___default.a.initializeApp(config);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0_firebase_app___default.a.database());\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\n__webpack_require__(50);\nvar firebase = _interopDefault(__webpack_require__(15));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(setImmediate, global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_whatwg_fetch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_whatwg_fetch__);\n\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\nvar META = _uid('meta');\n\n\nvar setDesc = _objectDp.f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !_fails(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n\tf: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function (name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\n\nvar _enumKeys = function (it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n\tf: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n\tf: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n\tf: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\n\n\n\nvar META = _meta.KEY;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function () { return dP$1(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return _has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(8).setImmediate, __webpack_require__(4)))\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_database__ = __webpack_require__(53);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_database___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_database__);\n\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = __webpack_require__(16);\nvar logger = __webpack_require__(54);\nvar tslib_1 = __webpack_require__(17);\nvar firebase = _interopDefault(__webpack_require__(15));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.startsWith('?')) {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = Object({\"NODE_ENV\":\"production\"});\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n/***/ }),\n/* 54 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLogLevel\", function() { return setLogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogLevel\", function() { return LogLevel; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\n\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar state = {\n    searchTerm: \"\",\n    visibility: \"all\"\n};\n\nvar getters = {\n    searchTerm: function searchTerm(state) {\n        return state.searchTerm;\n    },\n    visibility: function visibility(state) {\n        return state.visibility;\n    },\n\n    shownTaskIDs: function shownTaskIDs(state, gettersArg) {\n        var currentSearchTerm = gettersArg.searchTerm && gettersArg.searchTerm.trim();\n\n        var shouldShowInnerTasks = gettersArg.visibility === \"all\" && currentSearchTerm.length === 0;\n        if (shouldShowInnerTasks) {\n            return gettersArg.rootTasks;\n        }\n\n        if (!currentSearchTerm) {\n            return task.filters[gettersArg.visibility](gettersArg.tasksAsArray);\n        }\n\n        var tasksContainingSearchTerm = gettersArg.tasksAsArray.filter(function (task) {\n            return task.content.toLowerCase().indexOf(currentSearchTerm.toLowerCase()) > -1;\n        });\n        return task.filters[gettersArg.visibility](tasksContainingSearchTerm);\n    }\n};\n\nvar mutations = {\n    changeSearchTerm: function changeSearchTerm(state, newTerm) {\n        if (state.searchTerm !== newTerm) {\n            state.searchTerm = newTerm;\n        }\n    },\n    changeVisibility: function changeVisibility(state, newVisibility) {\n        if (state.visibility !== newVisibility) {\n            state.visibility = newVisibility;\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    state: state,\n    getters: getters,\n    mutations: mutations\n});\n\n/***/ }),\n/* 56 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__key_js__ = __webpack_require__(6);\n\n\nvar state = {\n    showChildren: true,\n    storageMethod: \"localStorage\",\n    firebaseStateKey: \"test\"\n};\n\nvar getters = {\n    showChildren: function showChildren(state, gettersArg) {\n        return state.showChildren;\n    },\n    storageMethod: function storageMethod(state, gettersArg) {\n        return state.storageMethod;\n    },\n    firebaseStateKey: function firebaseStateKey(state, gettersArg) {\n        return state.firebaseStateKey;\n    }\n};\n\nvar mutations = {\n    setShowChildren: function setShowChildren(state, newValue) {\n        state.showChildren = newValue;\n    },\n    setStorageMethod: function setStorageMethod(state, newValue) {\n        state.storageMethod = newValue;\n    },\n    setFirebaseStateKey: function setFirebaseStateKey(state, newValue) {\n        state.firebaseStateKey = newValue;\n    },\n\n    initialiseSettingsWithObject: function initialiseSettingsWithObject(state, storageObjectString) {\n        if (!storageObjectString) {\n            return;\n        }\n        var storageObject = JSON.parse(storageObjectString);\n\n        if (storageObject.settings) {\n            state.storageMethod = storageObject.settings.storageMethod;\n            state.firebaseStateKey = storageObject.settings.firebaseStateKey;\n        }\n    }\n};\n\nvar actions = {\n    initialiseSettings: function initialiseSettings(context) {\n        var storageObjectString = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_0__key_js__[\"a\" /* default */]);\n        context.commit(\"initialiseSettingsWithObject\", storageObjectString);\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    state: state,\n    getters: getters,\n    mutations: mutations,\n    actions: actions\n});\n\n/***/ }),\n/* 57 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar state = {\n    clipboard: null,\n    clipboardMode: \"copy\"\n};\n\nvar getters = {\n    clipboard: function clipboard(state, gettersArg) {\n        return state.clipboard;\n    },\n    clipboardMode: function clipboardMode(state, gettersArg) {\n        return state.clipboardMode;\n    }\n};\n\nvar mutations = {\n    setClipboard: function setClipboard(state, newValue) {\n        state.clipboard = newValue;\n    },\n    setClipboardMode: function setClipboardMode(state, newValue) {\n        state.clipboardMode = newValue;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    state: state,\n    getters: getters,\n    mutations: mutations\n});\n\n/***/ }),\n/* 58 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar state = {\n    currentTopRightTab: \"settings\"\n};\n\nvar getters = {\n    currentTopRightTab: function currentTopRightTab(state, gettersArg) {\n        return state.currentTopRightTab;\n    }\n};\n\nvar mutations = {\n    setCurrentTopRightTab: function setCurrentTopRightTab(state, newValue) {\n        state.currentTopRightTab = newValue;\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    state: state,\n    getters: getters,\n    mutations: mutations\n});\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  filename: {\n    type: \"filename\",\n    description: \"filename to use when reading from stdin - this will be used in source-maps, errors etc\",\n    default: \"unknown\",\n    shorthand: \"f\"\n  },\n\n  filenameRelative: {\n    hidden: true,\n    type: \"string\"\n  },\n\n  inputSourceMap: {\n    hidden: true\n  },\n\n  env: {\n    hidden: true,\n    default: {}\n  },\n\n  mode: {\n    description: \"\",\n    hidden: true\n  },\n\n  retainLines: {\n    type: \"boolean\",\n    default: false,\n    description: \"retain line numbers - will result in really ugly code\"\n  },\n\n  highlightCode: {\n    description: \"enable/disable ANSI syntax highlighting of code frames (on by default)\",\n    type: \"boolean\",\n    default: true\n  },\n\n  suppressDeprecationMessages: {\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n\n  presets: {\n    type: \"list\",\n    description: \"\",\n    default: []\n  },\n\n  plugins: {\n    type: \"list\",\n    default: [],\n    description: \"\"\n  },\n\n  ignore: {\n    type: \"list\",\n    description: \"list of glob paths to **not** compile\",\n    default: []\n  },\n\n  only: {\n    type: \"list\",\n    description: \"list of glob paths to **only** compile\"\n  },\n\n  code: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  metadata: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  ast: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  extends: {\n    type: \"string\",\n    hidden: true\n  },\n\n  comments: {\n    type: \"boolean\",\n    default: true,\n    description: \"write comments to generated output (true by default)\"\n  },\n\n  shouldPrintComment: {\n    hidden: true,\n    description: \"optional callback to control whether a comment should be inserted, when this is used the comments option is ignored\"\n  },\n\n  wrapPluginVisitorMethod: {\n    hidden: true,\n    description: \"optional callback to wrap all visitor methods\"\n  },\n\n  compact: {\n    type: \"booleanString\",\n    default: \"auto\",\n    description: \"do not include superfluous whitespace characters and line terminators [true|false|auto]\"\n  },\n\n  minified: {\n    type: \"boolean\",\n    default: false,\n    description: \"save as much bytes when printing [true|false]\"\n  },\n\n  sourceMap: {\n    alias: \"sourceMaps\",\n    hidden: true\n  },\n\n  sourceMaps: {\n    type: \"booleanString\",\n    description: \"[true|false|inline]\",\n    default: false,\n    shorthand: \"s\"\n  },\n\n  sourceMapTarget: {\n    type: \"string\",\n    description: \"set `file` on returned source map\"\n  },\n\n  sourceFileName: {\n    type: \"string\",\n    description: \"set `sources[0]` on returned source map\"\n  },\n\n  sourceRoot: {\n    type: \"filename\",\n    description: \"the root from which all sources are relative\"\n  },\n\n  babelrc: {\n    description: \"Whether or not to look up .babelrc and .babelignore files\",\n    type: \"boolean\",\n    default: true\n  },\n\n  sourceType: {\n    description: \"\",\n    default: \"module\"\n  },\n\n  auxiliaryCommentBefore: {\n    type: \"string\",\n    description: \"print a comment before any injected non-user code\"\n  },\n\n  auxiliaryCommentAfter: {\n    type: \"string\",\n    description: \"print a comment after any injected non-user code\"\n  },\n\n  resolveModuleSource: {\n    hidden: true\n  },\n\n  getModuleId: {\n    hidden: true\n  },\n\n  moduleRoot: {\n    type: \"filename\",\n    description: \"optional prefix for the AMD module formatter that will be prepend to the filename on module definitions\"\n  },\n\n  moduleIds: {\n    type: \"boolean\",\n    default: false,\n    shorthand: \"M\",\n    description: \"insert an explicit id for modules\"\n  },\n\n  moduleId: {\n    description: \"specify a custom name for module ids\",\n    type: \"string\"\n  },\n\n  passPerPreset: {\n    description: \"Whether to spawn a traversal pass per a preset. By default all presets are merged.\",\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n\n  parserOpts: {\n    description: \"Options to pass into the parser, or to change parsers (parserOpts.parser)\",\n    default: false\n  },\n\n  generatorOpts: {\n    description: \"Options to pass into the generator, or to change generators (generatorOpts.generator)\",\n    default: false\n  }\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('home')}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 62 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Tasks_vue__ = __webpack_require__(18);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_635afb59_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Tasks_vue__ = __webpack_require__(63);\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Tasks_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_635afb59_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Tasks_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tasksList\"},_vm._l((this.taskIDs),function(taskID){return _c('task',{key:taskID,attrs:{\"taskID\":taskID},on:{\"deleteTask\":_vm.deleteInnerTask}})}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 64 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Tags_vue__ = __webpack_require__(19);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8fde0ba8_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Tags_vue__ = __webpack_require__(67);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(65)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8fde0ba8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Tags_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_8fde0ba8_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Tags_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(66);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"bf0fa75a\", content, true, {});\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".tags[data-v-8fde0ba8]{min-height:24px}.tagLink[data-v-8fde0ba8]{color:#999;margin:0 5px 0 0}.tagLink[data-v-8fde0ba8]:hover{background-color:#f2f2f2;color:#982c61;border-bottom:2px solid #4a4a4a}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tags\"},[_vm._v(\" ​\\n    \"),_vm._l((this.tags),function(tag){return _c('a',{staticClass:\"tagLink\",on:{\"click\":function($event){$event.preventDefault();return _vm.updateSearchTerm($event)}}},[_vm._v(\"\\n        \"+_vm._s(tag)+\"\\n    \")])})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 68 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Task_vue__ = __webpack_require__(20);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_e417b6fc_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Task_vue__ = __webpack_require__(75);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(69)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e417b6fc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Task_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_e417b6fc_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Task_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(70);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"022a59f9\", content, true, {});\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".taskFlexbox[data-v-e417b6fc]{display:flex;margin:10px 0}.task[data-v-e417b6fc]{display:flex;flex-direction:column;justify-content:flex-start;margin:5px 0 0 33px}.completed[data-v-e417b6fc]{opacity:.4;text-decoration:line-through solid currentcolor}.showHide[data-v-e417b6fc]{min-width:25px;max-width:25px;padding:4px;margin-right:-33px;flex-grow:1;cursor:pointer;text-align:center;font-weight:lighter;color:#999;background-color:#f6f6f6;border-radius:8px}.showHide[data-v-e417b6fc]:hover{color:#fff;background-color:var(--link-colour);transition:background-color .2s ease 0s}.contextMenuLocation[data-v-e417b6fc]{position:absolute;z-index:2;height:0}.contextMenu[data-v-e417b6fc]{display:flex;flex-direction:column;min-height:58px;min-width:80px;padding:5px;margin:16px 0 10px -38px;background:#f6f6f6;border:1px solid #bbb;border-radius:4px}.mainTaskContainer[data-v-e417b6fc]{display:flex;align-items:center}.bullet[data-v-e417b6fc]{height:32px;width:32px;background-color:transparent;border-radius:32px;cursor:pointer}.bullet[data-v-e417b6fc]:hover{background-color:#aaa}.taskText[data-v-e417b6fc],input[type=text][data-v-e417b6fc],textarea[data-v-e417b6fc]{display:inline;padding:6px 10px 0;margin:0 0 3px 3px;line-height:20px;min-height:11px;min-width:375px}.btn[data-v-e417b6fc]{min-height:32px;margin:0 10px;font-size:18px;color:#ddd;background-color:#f6f6f6;border-color:#f6f6f6;border-radius:8px;text-decoration:none}.btn[data-v-e417b6fc]:hover{background-color:var(--link-colour);border:1px solid var(--link-colour);transition:background-color .2s ease 0s;color:#fff}.dangerBtn[data-v-e417b6fc]:hover{background-color:#e00808;border:1px solid #e00808}.bold[data-v-e417b6fc]{font-weight:700}.smallText[data-v-e417b6fc]{display:inline;margin-top:0;margin-bottom:0;font-size:1.2rem;color:#696969}.description[data-v-e417b6fc]{font-size:1.5rem;color:#696969}.leftIndent[data-v-e417b6fc]{margin-left:40px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DetailedTask_vue__ = __webpack_require__(21);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a3c60d2c_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_DetailedTask_vue__ = __webpack_require__(74);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(72)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a3c60d2c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DetailedTask_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a3c60d2c_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_DetailedTask_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(73);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"7e6f513d\", content, true, {});\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".bottomInputContainer[data-v-a3c60d2c]{display:flex;flex-direction:row;justify-content:space-between}.inputCol[data-v-a3c60d2c]{display:flex;flex-direction:column;justify-content:space-around;align-items:flex-start;max-width:50%}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('legend',[_vm._v(\"content\")]),_vm._v(\" \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.content),expression:\"task.content\"}],domProps:{\"value\":(_vm.task.content)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"content\", $event.target.value)}}}),_vm._v(\" \"),_c('div',{staticStyle:{\"padding-top\":\"15px\"}},[_vm._v(\"\\n            description\\n            \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.description),expression:\"task.description\"}],domProps:{\"value\":(_vm.task.description)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"description\", $event.target.value)}}})]),_vm._v(\" \"),(_vm.tags.length > 0)?_c('tags',{attrs:{\"tags\":_vm.tags}}):_vm._e()],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',[_c('span',{staticClass:\"bottomInputContainer\"},[_c('span',{staticClass:\"inputCol\"},[_c('span',[_vm._v(\"\\n                    complete \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task.complete),expression:\"task.complete\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.task.complete)?_vm._i(_vm.task.complete,null)>-1:(_vm.task.complete)},on:{\"change\":function($event){var $$a=_vm.task.complete,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.task, \"complete\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.task, \"complete\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.task, \"complete\", $$c)}}}})]),_vm._v(\" \"),_c('span',[_c('a',{attrs:{\"href\":_vm.taskLink}},[_vm._v(\"\\n                        link\\n                    \")]),_vm._v(\" \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.link),expression:\"task.link\"}],domProps:{\"value\":(_vm.task.link)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"link\", $event.target.value)}}})])]),_vm._v(\" \"),_c('span',{staticClass:\"inputCol\"},[_c('span',[_vm._v(\"\\n                    bold \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task.bold),expression:\"task.bold\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.task.bold)?_vm._i(_vm.task.bold,null)>-1:(_vm.task.bold)},on:{\"change\":function($event){var $$a=_vm.task.bold,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.task, \"bold\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.task, \"bold\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.task, \"bold\", $$c)}}}})]),_vm._v(\" \"),_c('span',[_vm._v(\"\\n                    author \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.author),expression:\"task.author\"}],domProps:{\"value\":(_vm.task.author)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"author\", $event.target.value)}}})])])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 75 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"taskFlexbox\"},[(this.shouldShowChildren && _vm.task.tasks.length > 0)?_c('div',{staticClass:\"showHide\",on:{\"click\":function($event){_vm.expandChildrenFlag = ! _vm.expandChildrenFlag}}},[_vm._v(\"\\n        \"+_vm._s(_vm.showHideButtonText)+\"\\n    \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"task\"},[_c('div',{staticClass:\"mainTaskContainer\"},[_c('img',{staticClass:\"bullet\",attrs:{\"src\":__webpack_require__(76)},on:{\"click\":_vm.toggleContextMenu,\"dblclick\":_vm.displayModal}}),_vm._v(\" \"),(_vm.showModal)?_c('modal',{on:{\"close\":_vm.hideModal}},[_c('h3',{staticStyle:{\"margin\":\"0\"},attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Task \"+_vm._s(this.taskID))]),_vm._v(\" \"),_c('detailedTask',{attrs:{\"slot\":\"body\",\"taskID\":_vm.taskID},slot:\"body\"})],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"contextMenuLocation\"},[(_vm.showContextMenu)?_c('div',{staticClass:\"contextMenu\"},[(_vm.task.tasks.length > 0)?_c('a',{on:{\"click\":function($event){_vm.expandChildrenFlag = ! _vm.expandChildrenFlag}}},[_vm._v(\"\\n                        \"+_vm._s(_vm.showHideText)+\"\\n                    \")]):_vm._e(),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.toggleComplete}},[_vm._v(\"Complete\")]),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.bold}},[_vm._v(\"Bold\")]),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.addNewTask(); _vm.toggleContextMenu()}}},[_vm._v(\"Add new child\")]),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.displayModal(); _vm.toggleContextMenu()}}},[_vm._v(\"Edit\")]),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.deleteTask(); _vm.toggleContextMenu()}}},[_vm._v(\"Delete\")]),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.copyTask}},[_vm._v(\"Copy\")]),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.cutTask}},[_vm._v(\"Cut\")]),_vm._v(\" \"),(this.clipboard != null && this.clipboard !== this.taskID)?_c('a',{on:{\"click\":_vm.pasteInto}},[_vm._v(\"Paste into\")]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('span',{staticStyle:{\"margin-left\":\"5px\"}},[_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.taskContent),expression:\"taskContent\"}],ref:\"taskInput\",staticClass:\"taskText\",class:{\n                        bold: _vm.task.bold, \n                        completed: _vm.task.complete\n                    },attrs:{\"id\":(\"task-\" + (_vm.task.id) + \"-input\"),\"type\":\"text\"},domProps:{\"value\":(_vm.taskContent)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.taskContent=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn\",on:{\"click\":_vm.addNewTask}},[_vm._v(\"+\\n            \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn dangerBtn\",on:{\"click\":_vm.deleteTask}},[_vm._v(\"x\\n            \")])],1),_vm._v(\" \"),_c('div',{class:{completed: _vm.task.complete}},[_c('div',[(_vm.task.description.length > 0)?_c('p',{staticClass:\"description leftIndent\",staticStyle:{\"margin-top\":\"0\",\"margin-bottom\":\"0\"}},[_vm._v(_vm._s(_vm.task.description))]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"leftIndent\"},[(_vm.task.link.length > 0)?_c('a',{attrs:{\"href\":_vm.task.link}},[_vm._v(\"\\n                    link\\n                \")]):_vm._e(),_vm._v(\" \"),(_vm.task.author.length > 0)?_c('p',{staticClass:\"smallText\"},[_vm._v(_vm._s(_vm.task.author)+\"\\n                \")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"leftIndent\"},[(_vm.tags.length > 0)?_c('tags',{attrs:{\"tags\":_vm.tags}}):_vm._e()],1)]),_vm._v(\" \"),(this.shouldShowChildren)?_c('div',[(_vm.expandChildrenFlag)?_c('div',[(_vm.task.tasks.length > 0)?_c('tasks',{staticClass:\"innerTasks\",attrs:{\"outerTaskID\":_vm.task.id,\"taskIDs\":[].concat( _vm.task.tasks )}}):_vm._e()],1):_vm._e(),_vm._v(\" \"),(! _vm.expandChildrenFlag)?_c('div',{staticClass:\"leftIndent\"},[(this.numberOfChildren > 0)?_c('p',{staticClass:\"smallText\"},[_vm._v(_vm._s(this.numberOfChildren)+\" \"+_vm._s(_vm._f(\"pluralise\")(this.numberOfChildren)))]):_vm._e()]):_vm._e()]):_vm._e()])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"bullet.svg?932fb41d73148fae7d06d25588ae07f2\";\n\n/***/ }),\n/* 77 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modal_vue__ = __webpack_require__(22);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_114e0502_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modal_vue__ = __webpack_require__(80);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(78)\n}\nvar normalizeComponent = __webpack_require__(0)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-114e0502\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Modal_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_114e0502_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Modal_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(79);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"45017c79\", content, true, {});\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(2)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".modal-mask[data-v-114e0502]{position:fixed;overflow:auto;z-index:3;top:0;right:0;bottom:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);transition:opacity .3s ease}.modal-wrapper[data-v-114e0502]{position:fixed;top:10%;vertical-align:middle;z-index:100;left:25%;transform:translateX(-12.5%)}.modal-container[data-v-114e0502]{min-width:25vw;max-width:62vw;margin:0 auto;padding:20px 30px;background-color:#fff;border-radius:2px;box-shadow:0 2px 8px rgba(0,0,0,.33);transition:all .3s ease}.modal-header h3[data-v-114e0502]{margin-top:0;color:#42b983}.modal-body[data-v-114e0502]{margin:20px 0;max-width:100%}.modal-default-button[data-v-114e0502]{float:right}.modal-enter[data-v-114e0502],.modal-leave-active[data-v-114e0502]{opacity:0}.modal-enter .modal-container[data-v-114e0502],.modal-leave-active .modal-container[data-v-114e0502]{-webkit-transform:scale(1.1);transform:scale(1.1)}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"modal\"}},[_c('div',[_c('div',{staticClass:\"modal-mask\",on:{\"click\":function($event){_vm.$emit('close')}}}),_vm._v(\" \"),_c('div',{staticClass:\"modal-wrapper\"},[_c('div',{staticClass:\"modal-container\"},[_c('div',{staticClass:\"modal-header\"},[_vm._t(\"header\")],2),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('div',{staticClass:\"modal-body\"},[_vm._t(\"body\",[_vm._v(\"\\n            default body\\n          \")])],2),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('div',{staticClass:\"modal-footer\"},[_vm._t(\"footer\",[_vm._v(\"\\n            ​\\n            \"),_c('button',{staticClass:\"modal-default-button\",on:{\"click\":function($event){_vm.$emit('close')}}},[_vm._v(\"\\n              OK\\n            \")])])],2)])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 81 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export extract */\n/* unused harmony export cloneAndModify */\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\nArray.prototype.unique = function () {\n    return this.map(JSON.stringify).reverse().filter(function (e, i, a) {\n        return a.indexOf(e, i + 1) === -1;\n    }).reverse().map(JSON.parse);\n};\n\nArray.prototype.flatten = function () {\n    var _ref;\n\n    return (_ref = []).concat.apply(_ref, _toConsumableArray(this));\n};\n\nArray.prototype.flattenDeep = function () {\n    return this.reduce(function (acc, val) {\n        var isArray = Array.isArray(val);\n        if (isArray) {\n            return acc.concat(val.flattenDeep());\n        }\n        return acc.concat(val);\n    }, []);\n};\n\nArray.prototype.diff = function (a) {\n    return this.filter(function (i) {\n        return a.indexOf(i) < 0;\n    });\n};\n\n// extracts all keys in vs from an object\nfunction extract(obj, vs) {\n    var new_obj = {};\n    vs.forEach(function (v) {\n        new_obj[v] = obj[v];\n    });\n    return new_obj;\n}\n\n// clones an object and changes some of its properties\nfunction cloneAndModify(obj, properties) {\n    return Object.assign(JSON.parse(JSON.stringify(obj)), properties);\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"static/js/tasks/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 15e9dddf6fb24f80c0cd","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 0","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vuex/dist/vuex.esm.js\n// module id = 1\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 2\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 3\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 4\n// module chunks = 0","export {TaskObject, getTagsInString, filters};\n\n// constructors don't work with Jest apparently (since it uses Node?), so we can't use them\nfunction TaskObject(obj) {\n        this.id = obj.id;\n        this.content = obj.content;\n        this.description = obj.description || \"\";\n\n        this.complete = obj.complete || false;\n        this.author = obj.author || \"\";\n        this.link = obj.link || \"\";\n\n        this.tasks = obj.tasks || [];\n        this.parent = obj.parent || null;\n\n        this.bold = obj.bold || false;\n}\n\n// a tag is a word that starts with a #\nfunction getTagsInString(str) {\n    return str.split(\" \").filter(s => (s.length > 1) && (s[0] === \"#\"));\n}\n\nconst filters = {\n    all: function (tasks) {\n        return tasks\n    },\n    active: function (tasks) {\n        return tasks.filter(function (task) {\n            return !task.complete\n        });\n    },\n    completed: function (tasks) {\n        return tasks.filter(function (task) {\n            return task.complete\n        });\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/base/task.js","export default \"flowyClone\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/key.js","/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 9\n// module chunks = 0","<template>\n    <home/>\n</template>\n\n<script>\n    import Home from \"./components/Home.vue\";\n    import {mapMutations, mapActions} from \"vuex\";\n\n    import store from \"./store/store.js\";\n\n    export default {\n        name: \"app\",\n        el: '#app',\n        components: {\n            Home\n        },\n        methods: {\n            ...mapMutations([\n                \"changeSearchTerm\"\n            ]),\n            ...mapActions([\n                \"initialiseApp\"\n            ]),\n        },\n        created: function() {\n            this.initialiseApp();\n            \n            //clear the search term when escape is pressed\n            //arrow function preserves context\n            window.addEventListener('keyup', (event) => {\n                if (event.keyCode === 27) {\n                    document.activeElement.blur();\n                    this.changeSearchTerm(\"\");\n                }\n            });\n        },\n        store\n    }\n</script>\n\n<style>\n    :root {\n        --link-colour: #42b983;\n        --separator-colour: #d1d1d1;\n    }\n\n    body.noscroll {\n        overflow: hidden;\n    }\n\n    a {\n        color: var(--link-colour);\n        text-decoration: none;\n        cursor: pointer;\n    }\n\n    a:hover {\n        color: #982c61;\n        border-bottom: 2px solid #4a4a4a;\n    }\n\n    button:focus, button:hover, input[type=\"submit\"]:focus, input[type=\"submit\"]:hover, input[type=\"reset\"]:focus, input[type=\"reset\"]:hover, input[type=\"button\"]:focus, input[type=\"button\"]:hover {\n        background-color: var(--link-colour);\n        border-color: var(--link-colour);\n        color: #fff;\n    }\n\n    input[type=\"search\"]::-webkit-search-cancel-button {\n        display: none\n    }\n\n    .searchBoxWrapper {\n        display: inline-flex;\n        align-items: center;\n    }\n\n    .inputBox {\n        display: block;\n        margin: 10px 0 10px 0;\n        padding: 10px;\n        min-width: 200px;\n        min-height: 42px;\n    }\n\n    .clearButton {\n        margin-left: -25px;\n    }\n\n    .selected {\n        color: #982c61;\n    }\n\n    .separator {\n        background-color: var(--separator-colour);\n        height: 1px;\n        margin: 10px 0 10px 0;\n    }\n\n    .fade-enter-active, .fade-leave-active {\n        transition: opacity 0.2s;\n    }\n\n    .fade-enter, .fade-leave-to {\n        opacity: 0;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n    <div id=\"home\">\n        <header style=\"display: inline-block;\">\n            <h1>Home</h1>\n            <input\n                ref=\"newTaskInput\"\n                v-model=\"newTask\"\n                @keyup.enter=\"addTaskFromInput\"\n                type=\"search\"\n                class=\"inputBox\"\n                placeholder=\"New task\"\n            >\n\n            <!-- there are two divs so that the visibility switches are on a new line -->\n            <div>\n                <div\n                    @mouseover=\"showClearButton = true\"\n                    @mouseleave=\"showClearButton = false\"\n                    class=\"searchBoxWrapper\"\n                >\n                    <input\n                        ref=\"searchInput\"\n                        v-model=\"computedSearchTerm\"\n                        type=\"search\"\n                        class=\"inputBox\"\n                        placeholder=\"Search\"\n                    >\n                    <a\n                        v-if=\"showClearButton\"\n                        @click=\"computedSearchTerm = ''\"\n                        class=\"clearButton\"\n                    >x</a>\n                </div>\n            </div>\n\n            <span>\n                <a\n                    @click=\"localVisibility = 'all'\"\n                    :class=\"{ selected: localVisibility === 'all' }\"\n                >all</a>\n                <a\n                    @click=\"localVisibility = 'active'\"\n                    :class=\"{ selected: localVisibility === 'active' }\"\n                >active</a>\n                <a\n                    @click=\"localVisibility = 'completed'\"\n                    :class=\"{ selected: localVisibility === 'completed' }\"\n                >completed</a>\n            </span>\n\n            <tags\n                :tags=\"tags\"\n            >\n            </tags>\n\n            <div class=\"separator\"></div>\n        </header>\n        <div id=\"topRight\">\n            <div id=\"topRightButtons\">\n                <button @click=\"setCurrentTopRightTab('settings')\" class=\"topRightButton\"\n                >Settings\n                </button>\n                <button \n                    v-if=\"this.clipboard !== null\"\n                    @click=\"setCurrentTopRightTab('clipboard')\" \n                    class=\"topRightButton\"\n                >Clipboard\n                </button>\n                <button \n                    v-if=\"this.storageMethod === 'firebase'\"\n                    @click=\"setCurrentTopRightTab('firebase')\" \n                    class=\"topRightButton\"\n                >Firebase\n                </button>\n            </div>\n            <div>\n                <component :is=\"currentTopRightTab\"></component>\n            </div>\n        </div>\n        <section>\n            <tasks\n                :outerTaskID=\"null\"\n                :taskIDs=\"filteredTaskIDs\"\n            >\n            </tasks>\n\n            <p v-if=\"localVisibility !== 'completed'\"\n               style=\"color: #999;\"\n            >{{numberOfTasksRemaining}} {{numberOfTasksRemaining | pluralise}} left</p>\n        </section>\n        <div\n            @click=\"addTask()\"\n            class=\"bottomRightButton\"\n        >+</div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from \"vuex\";\nimport Settings from \"./Settings.vue\";\nimport Clipboard from \"./Clipboard.vue\";\nimport Firebase from \"./Firebase.vue\";\nimport * as task from \"../base/task.js\";\n\nexport default {\n  name: \"home\",\n  data() {\n    return {\n      topRightComponent: \"settings\",\n      newTask: \"\",\n      showClearButton: false\n    };\n  },\n  components: {\n    Settings,\n    Clipboard,\n    Firebase\n  },\n  methods: {\n    ...mapMutations([\n      \"incrementTaskStorageUID\",\n      \"changeSearchTerm\",\n      \"changeVisibility\",\n      \"setTask\",\n      \"addTaskToRoot\",\n      \"changeShowInnerTasks\",\n      \"setCurrentTopRightTab\"\n    ]),\n\n    addTaskFromInput() {\n      let value = this.newTask && this.newTask.trim();\n      if (!value) {\n        return;\n      }\n      this.addTask(value);\n    },\n    addTask(value = \"\") {\n      this.incrementTaskStorageUID();\n      let newTask = new task.TaskObject({\n        id: this.taskStorageUID,\n        content: value,\n        parent: \"root\"\n      });\n      this.setTask(newTask);\n      this.addTaskToRoot(newTask.id);\n      this.newTask = \"\";\n\n      this.$nextTick(() => {\n        let addedTaskInput = document.getElementById(\n          `task-${newTask.id}-input`\n        );\n        if (addedTaskInput) {\n          addedTaskInput.focus();\n        }\n      });\n    }\n  },\n  computed: {\n    ...mapGetters([\n      \"tasksAsArray\",\n      \"taskByID\",\n      \"rootTasks\",\n      \"tagsInTasks\",\n      \"taskStorageUID\",\n      \"searchTerm\",\n      \"visibility\",\n      \"clipboard\",\n      \"currentTopRightTab\",\n      \"storageMethod\"\n    ]),\n\n    localVisibility: {\n      get() {\n        return this.visibility;\n      },\n      set(newValue) {\n        this.changeVisibility(newValue);\n      }\n    },\n\n    //can filter tasks by a search term or visibility\n    filteredTasks() {\n      let currentSearchTerm = this.searchTerm && this.searchTerm.trim();\n\n      let shouldShowInnerTasks =\n        this.visibility === \"all\" && currentSearchTerm.length === 0;\n      if (shouldShowInnerTasks) {\n        return this.rootTasks;\n      }\n\n      if (!currentSearchTerm) {\n        return task.filters[this.visibility](this.tasksAsArray);\n      }\n\n      let tasksContainingSearchTerm = this.tasksAsArray.filter(\n        task =>\n          task.content.toLowerCase().indexOf(currentSearchTerm.toLowerCase()) >\n          -1\n      );\n      return task.filters[this.visibility](tasksContainingSearchTerm);\n    },\n\n    filteredTaskIDs() {\n      return this.filteredTasks.map(task => task.id);\n    },\n\n    numberOfTasksRemaining() {\n      if (this.visibility === \"active\") {\n        return this.filteredTaskIDs.length;\n      }\n      let vm = this;\n      function recursiveNumberOfActiveTasks(taskID) {\n        let thisTask = vm.taskByID(taskID);\n        let thisTaskIsActive = thisTask.complete ? 0 : 1;\n\n        let activeInnerTasks = thisTask.tasks.map(innerTaskID =>\n          recursiveNumberOfActiveTasks(innerTaskID)\n        );\n        let summedActiveInnerTasks = activeInnerTasks.reduce(\n          (acc, val) => acc + val,\n          0\n        );\n\n        return thisTaskIsActive + summedActiveInnerTasks;\n      }\n\n      let mappedNumberOfActiveTasks = this.filteredTaskIDs.map(taskID =>\n        recursiveNumberOfActiveTasks(taskID)\n      );\n      return mappedNumberOfActiveTasks.reduce((acc, val) => acc + val, 0);\n    },\n\n    tags() {\n      return this.tagsInTasks(this.filteredTaskIDs);\n    },\n\n    computedSearchTerm: {\n      get() {\n        return this.searchTerm;\n      },\n      set(value) {\n        this.changeSearchTerm(value);\n      }\n    }\n  },\n  filters: {\n    pluralise(n) {\n      return n === 1 ? \"item\" : \"items\";\n    }\n  },\n  watch: {\n    localVisibility() {\n      let shouldShowInnerTasks =\n        this.visibility === \"all\" && this.searchTerm.trim().length === 0;\n      this.changeShowInnerTasks(shouldShowInnerTasks);\n    },\n    searchTerm() {\n      let shouldShowInnerTasks =\n        this.visibility === \"all\" && this.searchTerm.trim().length === 0;\n      this.changeShowInnerTasks(shouldShowInnerTasks);\n    }\n  },\n  mounted: function() {\n    window.addEventListener(\"keyup\", event => {\n      let focusedElementIsntInput =\n        document.activeElement.tagName.toLowerCase() !== \"input\" &&\n        document.activeElement.tagName.toLowerCase() !== \"textarea\";\n\n      switch (event.keyCode) {\n        //focus on the new task field when n is pressed and you're not in an input\n        case 78:\n          if (focusedElementIsntInput) {\n            this.$refs.newTaskInput.focus();\n          }\n          break;\n\n        //focus on the search field when s is pressed\n        case 83:\n          if (focusedElementIsntInput) {\n            this.$refs.searchInput.focus();\n          }\n          break;\n      }\n    });\n  }\n};\n</script>\n\n<style>\n#home {\n  font-family: Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\n#topRight {\n  position: absolute;\n  top: 1%;\n  right: 1%;\n  min-width: 275px;\n  max-width: 275px;\n  padding: 0 0 10px 10px;\n  border: 1px solid var(--separator-colour);\n\n  opacity: 0.1;\n}\n#topRight:hover {\n  opacity: 1;\n}\n#topRightButtons {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 10px;\n}\n.topRightButton {\n  padding: 6px 10px;\n  margin-bottom: -1px;\n  margin-right: -1px;\n\n  border: 1px solid #ccc;\n  cursor: pointer;\n  background: #f0f0f0;\n  color: #34495e;\n}\n\n.bottomRightButton {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: absolute;\n  bottom: 25%;\n  right: 22%;\n  width: 30px;\n  height: 30px;\n  border-radius: 100%;\n  padding: 10px;\n  cursor: pointer;\n\n  background-color: #f44336;\n  background: #f44336;\n  border: none;\n  outline: none;\n  color: #fff;\n  opacity: 0.5;\n  font-size: 36px;\n  box-shadow: 6px 6px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n.bottomRightButton:hover {\n  opacity: 1;\n  box-shadow: 6px 6px 6px rgba(0, 0, 0, 0.32), 0 3px 6px rgba(0, 0, 0, 0.46);\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home.vue","<template>\n    <div id=\"settings\">\n        <label>\n            <input type=\"checkbox\" v-model=\"computedShowChildren\">\n            show children\n        </label>\n        <br />\n        storage method\n        <label>\n            localStorage\n            <input type=\"radio\" value=\"localStorage\" v-model=\"computedStorageMethod\">\n        </label>\n        <label>\n            firebase\n            <input type=\"radio\" value=\"firebase\" v-model=\"computedStorageMethod\">\n        </label>\n    </div>\n</template>\n\n<script>\n    import {mapGetters, mapMutations} from \"vuex\";\n    export default {\n        name: \"settings\",\n        data() {\n            return {};\n        },\n        methods: {\n            ...mapMutations([\n                \"setShowChildren\",\n                \"setStorageMethod\"\n            ])\n        },\n        computed: {\n            ...mapGetters([\n                \"showChildren\",\n                \"storageMethod\"\n            ]),\n            computedShowChildren: {\n                get() {\n                    return this.showChildren;\n                },\n                set(value) {\n                    this.setShowChildren(value);\n                }\n            },\n            computedStorageMethod: {\n                get() {\n                    return this.storageMethod;\n                },\n                set(value) {\n                    this.setStorageMethod(value);\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #settings {\n        padding: 0 5px 0 5px;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Settings.vue","<template>\n    <div v-if=\"clipboardNotEmpty\">\n        <p style=\"margin: 0;\">{{this.clipboard}}: {{taskContent}}</p>\n        <span>\n            <b style=\"display: inline;\">mode: {{this.clipboardMode}}</b>\n            <button\n                @click=\"setClipboard(null); setCurrentTopRightTab('settings')\"\n                class=\"btn\"\n                style=\"float: right;\"\n            >x\n            </button>\n        </span>\n    </div>\n</template>\n\n<script>\n    import {mapGetters, mapMutations} from \"vuex\";\n    export default {\n        name: \"clipboard\",\n        data() {\n            return {};\n        },\n        methods: {\n            ...mapMutations([\n                \"setClipboard\",\n                \"setCurrentTopRightTab\"               \n            ])\n        },\n        computed: {\n            ...mapGetters([\n                \"clipboard\",\n                \"clipboardMode\",\n                \"taskByID\"\n            ]),\n            clipboardNotEmpty() {\n                return this.clipboard !== null;\n            },\n            taskContent() {\n                return this.taskByID(this.clipboard).content;\n            }\n        }\n    }\n</script>\n\n<style scoped>\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Clipboard.vue","<template>\n    <div>\n        <label>\n            state key\n            <input v-resize-on-insert v-model=\"computedFirebaseStateKey\" type=\"text\" style=\"min-width: 125px;\">\n        </label>\n        <button @click=\"initialiseTasks\">load tasks</button>\n        <button @click=\"saveStateToFirebase\">save tasks</button>\n    </div>\n</template>\n\n<script>\n    import {mapGetters, mapMutations, mapActions} from \"vuex\";\n    export default {\n        name: \"firebase\",\n        data() {\n            return {};\n        },\n        methods: {\n            ...mapMutations([\n                \"setFirebaseStateKey\",\n            ]),\n            ...mapActions([\n                \"initialiseTasks\",\n                \"saveStateToFirebase\"\n            ])\n        },\n        computed: {\n            ...mapGetters([\n                \"firebaseStateKey\"\n            ]),\n            computedFirebaseStateKey: {\n                get() {\n                    return this.firebaseStateKey;\n                },\n                set(value) {\n                    this.setFirebaseStateKey(value);\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Firebase.vue","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/index.cjs.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/index.cjs.js\n// module id = 16\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 17\n// module chunks = 0","<template>\n    <div class=\"tasksList\">\n        <task\n            v-for=\"taskID in this.taskIDs\"\n            @deleteTask=\"deleteInnerTask\"\n            :taskID=\"taskID\"\n            :key=\"taskID\"\n        >\n        </task>\n    </div>\n</template>\n\n<script>\n    import {mapMutations} from \"vuex\";\n\n    export default {\n        name: \"tasks\",\n        props: [\"outerTaskID\", \"taskIDs\"],\n        methods: {\n            ...mapMutations([\n                \"removeTaskFromParentTask\",\n                \"deleteTask\"\n            ]),\n\n            //event is fired from a child task\n            deleteInnerTask(taskID) {\n                if (this.outerTaskID) {\n                    this.removeTaskFromParentTask({\n                        parentTaskID: this.outerTaskID,\n                        innerTaskID: taskID\n                    })\n                }\n                this.deleteTask(taskID);\n            }\n        }\n    }\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Tasks.vue","<template>\n    <!-- #8203 is a zero width space, so we can set the height of the span when empty -->\n    <span class=\"tags\"> &#8203;\n        <a\n            v-for=\"tag in this.tags\"\n            class=\"tagLink\"\n            @click.prevent=\"updateSearchTerm\"\n        >\n            {{tag}}\n        </a>\n    </span>\n</template>\n\n<script>\n    import {mapGetters, mapMutations} from \"vuex\";\n\n    export default {\n        name: \"tags\",\n        props: [\"tags\"],\n        methods: {\n            ...mapMutations([\n                \"changeSearchTerm\"\n            ]),\n            updateSearchTerm(event) {\n                //only adds the text following the #, if it has changed\n                let newSearchTerm = event.target.innerText.slice(0).trim();\n                if (this.searchTerm !== newSearchTerm) {\n                    this.changeSearchTerm(newSearchTerm);\n                }\n            }\n        },\n        computed: {\n            ...mapGetters([\n                \"searchTerm\"\n            ])\n        }\n    }\n</script>\n\n<style scoped>\n    .tags {\n        min-height: 24px;\n    }\n\n    .tagLink {\n        color: #999;\n        margin: 0 5px 0 0;\n    }\n\n    .tagLink:hover {\n        background-color: #f2f2f2;\n        color: #982c61;\n        border-bottom: 2px solid #4a4a4a;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Tags.vue","<template>\n    <div class=\"taskFlexbox\">\n        <div\n            v-if=\"this.shouldShowChildren && task.tasks.length > 0\"\n            @click=\"expandChildrenFlag = ! expandChildrenFlag\"\n            class=\"showHide\"\n        >\n            {{showHideButtonText}}\n        </div>\n        <div class=\"task\">\n            <div class=\"mainTaskContainer\">\n                <img\n                    @click=\"toggleContextMenu\"\n                    @dblclick=\"displayModal\"\n                    class=\"bullet\"\n                    src=\"../assets/bullet.svg\">\n                <modal\n                    v-if=\"showModal\"\n                    @close=\"hideModal\"\n                >\n                    <h3 slot=\"header\" style=\"margin: 0;\">Task {{this.taskID}}</h3>\n                    <detailedTask slot=\"body\" :taskID=\"taskID\"></detailedTask>\n                </modal>\n                <div class=\"contextMenuLocation\">\n                    <div\n                        v-if=\"showContextMenu\"\n                        class=\"contextMenu\"\n                    >\n                        <a\n                            v-if=\"task.tasks.length > 0\"\n                            @click=\"expandChildrenFlag = ! expandChildrenFlag\"\n                        >\n                            {{showHideText}}\n                        </a>\n                        <a @click=\"toggleComplete\">Complete</a>\n                        <a @click=\"bold\">Bold</a>\n                        <div class=\"separator\"></div>\n                        <a @click=\"addNewTask(); toggleContextMenu()\">Add new child</a>\n                        <a @click=\"displayModal(); toggleContextMenu()\">Edit</a>\n                        <a @click=\"deleteTask(); toggleContextMenu()\">Delete</a>\n                        <div class=\"separator\"></div>\n                        <a @click=\"copyTask\">Copy</a>\n                        <a @click=\"cutTask\">Cut</a>\n\n                        <!-- you shouldn't be able to paste a task into itself -->\n                        <a v-if=\"this.clipboard != null && this.clipboard !== this.taskID\" @click=\"pasteInto\">Paste into</a>\n                    </div>\n                </div>\n\n                <span\n                    style=\"margin-left: 5px;\"\n                >\n                    <textarea\n                        ref=\"taskInput\"\n                        v-resize-on-insert\n                        v-model=\"taskContent\"\n                        :id=\"`task-${task.id}-input`\"\n                        :class=\"{\n                            bold: task.bold, \n                            completed: task.complete\n                        }\"\n                        type=\"text\"\n                        class=\"taskText\"\n                    ></textarea> \n                </span>\n\n                <button\n                    @click=\"addNewTask\"\n                    class=\"btn\"\n                >+\n                </button>\n\n                <button\n                    @click=\"deleteTask\"\n                    class=\"btn dangerBtn\"\n                >x\n                </button>\n            </div>\n\n            <div :class=\"{completed: task.complete}\">\n                <div>\n                    <p\n                        v-if=\"task.description.length > 0\"\n                        class=\"description leftIndent\"\n                        style=\"margin-top: 0; margin-bottom: 0;\"\n                    >{{task.description}}</p>\n                </div>\n\n                <div\n                    class=\"leftIndent\"\n                >\n                    <a\n                        v-if=\"task.link.length > 0\"\n                        :href=\"task.link\"\n                    >\n                        link\n                    </a>\n                    <p\n                        v-if=\"task.author.length > 0\"\n                        class=\"smallText\"\n                    >{{task.author}}\n                    </p>\n                </div>\n\n                <div class=\"leftIndent\">\n                    <tags\n                        v-if=\"tags.length > 0\"\n                        :tags=\"tags\"\n                    >\n                    </tags>\n                </div>\n            </div>\n\n            <div v-if=\"this.shouldShowChildren\">\n                <div v-if=\"expandChildrenFlag\">\n                    <!-- you need to bind arrays like this for them to work properly -->\n                    <tasks\n                        v-if=\"task.tasks.length > 0\"\n                        :outerTaskID=\"task.id\"\n                        :taskIDs=\"[...task.tasks]\"\n                        class=\"innerTasks\"\n                    >\n                    </tasks>\n                </div>\n                <div\n                    v-if=\"! expandChildrenFlag\"\n                    class=\"leftIndent\"\n                >\n                    <p\n                        v-if=\"this.numberOfChildren > 0\"\n                        class=\"smallText\"\n                    >{{this.numberOfChildren}} {{this.numberOfChildren | pluralise}}</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import {mapGetters, mapMutations} from \"vuex\";\n    import DetailedTask from \"./DetailedTask.vue\";\n    import * as task from \"../base/task.js\";\n\n    export default {\n        name: \"task\",\n        props: [\"taskID\"],\n        data() {\n            return {\n                showContextMenu: false,\n                showModal: false,\n                expandChildrenFlag: true\n            }\n        },\n        components: {\n            DetailedTask\n        },\n        methods: {\n            ...mapMutations([\n                \"incrementTaskStorageUID\",\n                \"setTask\",\n                \"addTaskToTask\",\n                \"setClipboard\",\n                \"setClipboardMode\",\n                \"removeTaskFromRoot\",\n                \"removeTaskFromParentTask\"\n            ]),\n\n            toggleComplete() {\n                this.task.complete = ! this.task.complete;\n                this.toggleContextMenu();\n                this.setTask(this.task);\n            },\n\n            toggleContextMenu() {\n                this.showContextMenu = ! this.showContextMenu;\n            },\n\n            bold() {\n                this.task.bold = !this.task.bold;\n                this.$nextTick(() => {\n                    Stretchy.resize(this.$refs.taskInput)\n                });\n                this.toggleContextMenu();\n                this.setTask(this.task);\n            },\n            addNewTask() {\n                this.incrementTaskStorageUID();\n                let newTask = new task.TaskObject({\n                    id: this.taskStorageUID,\n                    content: \"\",\n                    parent: this.task.id\n                });\n                this.setTask(newTask);\n                this.addTaskToTask({taskID: this.task.id, newTaskID: newTask.id});\n\n                this.$nextTick(() => {\n                    let addedTaskInput = document.getElementById(`task-${newTask.id}-input`);\n                    if (addedTaskInput) {\n                        addedTaskInput.focus();\n                    }\n                });\n            },\n            deleteTask() {\n                let confirm = window.confirm(\"Are you sure you want to delete this?\");\n                if (confirm) {\n                    this.$emit('deleteTask', this.task.id);\n                }\n            },\n\n            //clipboard\n            copyTask() {\n                this.setClipboardMode(\"copy\");\n                this.setClipboard(this.taskID);\n                this.toggleContextMenu();\n            },\n            cutTask() {\n                this.setClipboardMode(\"cut\");\n                this.setClipboard(this.taskID);\n                this.toggleContextMenu();\n            },\n            removeOriginalTaskIfCutting(originalTaskID) {\n                if (this.clipboardMode === \"copy\") {\n                    return;\n                }\n                let originalTask = this.taskByID(originalTaskID);\n                if (originalTask.parent === \"root\") {\n                    this.removeTaskFromRoot(originalTaskID);\n                } else {\n                    this.removeTaskFromParentTask({\n                        parentTaskID: originalTask.parent,\n                        innerTaskID: originalTaskID\n                    });\n                }\n            },\n            getTaskIDToPaste() {\n                let vm = this;\n\n                function cloneTaskToLeaves(taskID) {\n                    vm.incrementTaskStorageUID();\n                    let copiedTask = vm.taskByID(taskID);\n                    let cloneOfCopiedTask = JSON.parse(JSON.stringify(copiedTask));\n                    cloneOfCopiedTask.id = vm.taskStorageUID;\n                    cloneOfCopiedTask.tasks = cloneOfCopiedTask.tasks\n                        .map(innerTaskID => cloneTaskToLeaves(innerTaskID));\n                    vm.setTask(cloneOfCopiedTask);\n                    return cloneOfCopiedTask.id;\n                }\n\n                //we need to use a whole new task (including all inner tasks) when copying\n                if (this.clipboardMode === \"copy\") {\n                    return cloneTaskToLeaves(this.clipboard);\n                }\n                return this.clipboard;\n            },\n            getTaskIDToPasteAndRemoveOriginalTask() {\n                let taskIDToPaste = this.getTaskIDToPaste();\n                this.removeOriginalTaskIfCutting(this.clipboard);\n\n                //have to set the new parent too - we are in the pasted task's parent here\n                let taskThatsBeingPasted = this.taskByID(taskIDToPaste);\n                taskThatsBeingPasted.parent = this.task.id;\n                this.setTask(taskThatsBeingPasted);\n\n                return taskIDToPaste;\n            },\n            pasteInto() {\n                let taskIDToPaste = this.getTaskIDToPasteAndRemoveOriginalTask();\n                this.task.tasks.push(taskIDToPaste);\n                this.toggleContextMenu();\n            },\n\n            displayModal() {\n                this.showModal = true;\n                document.getElementsByTagName('body')[0].classList.add('noscroll');\n            },\n            hideModal() {\n                this.showModal = false;\n                document.getElementsByTagName('body')[0].classList.remove('noscroll');\n            }     \n        },\n        computed: {\n            ...mapGetters([\n                \"taskStorageUID\",\n                \"taskByID\",\n                \"tasksInTask\",\n                \"tagsInTask\",\n                \"showInnerTasks\",\n                \"showChildren\",\n                \"clipboard\",\n                \"clipboardMode\"\n            ]),\n            task() {\n                return this.taskByID(this.taskID);\n            },\n            taskContent: {\n                get() {\n                    return this.task.content;\n                },\n                set(newContent) {\n                    this.task.content = newContent;\n                    this.setTask(this.task);\n                }\n            },\n\n            showHideButtonText() {\n                return (this.expandChildrenFlag ? \"[-]\" : \"[+]\");\n            },\n\n            showHideText() {\n                return (this.expandChildrenFlag ? \"Hide\" : \"Show\");\n            },\n\n            tags() {\n                return this.tagsInTask(this.task);\n            },\n\n            numberOfChildren() {\n                let vm = this;\n                function recursiveNumberOfChildren(taskID) {\n                    let thisTask = vm.taskByID(taskID);\n                    let innerChildren = thisTask.tasks.map(innerTaskID => recursiveNumberOfChildren(innerTaskID));\n                    let numberOfInnerChildren = innerChildren.reduce((acc, val) => acc + val, 0);\n                    return 1 + numberOfInnerChildren;\n                }\n                let mappedNumberOfActiveTasks = this.task.tasks.map(taskID => recursiveNumberOfChildren(taskID));\n                return mappedNumberOfActiveTasks.reduce((acc, val) => acc + val, 0);\n            },\n\n            shouldShowChildren() {\n                return this.showInnerTasks || this.showChildren;\n            }\n        },\n        filters: {\n            pluralise(n) {\n                return n === 1 ? \"child\" : \"children\";\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .taskFlexbox {\n        display: flex;\n        margin: 10px 0 10px 0;\n    }\n\n    .task {\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        margin: 5px 0 0 33px;\n    }\n    .completed {\n        opacity: 0.4;\n        text-decoration: line-through solid currentcolor;\n    }\n\n    .showHide {\n        min-width: 25px;\n        max-width: 25px;\n        padding: 4px;\n        margin-right: -33px;\n        flex-grow: 1;\n\n        cursor: pointer;\n        text-align: center;\n        font-weight: lighter;\n        color: #999;\n        background-color: #f6f6f6;\n        border-radius: 8px;\n    }\n\n    .showHide:hover {\n        color: #fff;\n        background-color: var(--link-colour);\n        transition: background-color 200ms ease 0s;\n    }\n\n    .contextMenuLocation {\n        position: absolute;\n        z-index: 2;\n        height: 0;\n    }\n\n    .contextMenu {\n        display: flex;\n        flex-direction: column;\n        min-height: 58px;\n        min-width: 80px;\n\n        padding: 5px;\n        margin: 16px 0 10px -38px;\n\n        background: #f6f6f6;\n        border: 1px solid #bbb;\n        border-radius: 4px;\n    }\n\n    .mainTaskContainer {\n        display: flex;\n        align-items: center;\n    }\n\n    .bullet {\n        height: 32px;\n        width: 32px;\n        background-color: transparent;\n        border-radius: 32px;\n        cursor: pointer;\n    }\n\n    .bullet:hover {\n        background-color: #aaa;\n    }\n\n    .taskText, textarea, input[type=\"text\"] {\n        display: inline;\n        padding: 6px 10px 0px 10px;\n        margin: 0 0 3px 3px;\n        line-height: 20px;\n        min-height: 11px;\n        min-width: 375px;\n    }\n\n    .btn {\n        min-height: 32px;\n        margin: 0 10px 0 10px;\n\n        font-size: 18px;\n        color: #ddd;\n        background-color: #f6f6f6;\n        border-color: #f6f6f6;\n        border-radius: 8px;\n\n        text-decoration: none;\n    }\n\n    .btn:hover {\n        background-color: var(--link-colour);\n        border: 1px solid var(--link-colour);\n\n        transition: background-color 200ms ease 0s;\n        color: #fff;\n    }\n\n    .dangerBtn:hover {\n        background-color: #e00808;\n        border: 1px solid #e00808;\n    }\n\n    .bold {\n        font-weight: bold;\n    }\n\n    .smallText {\n        display: inline;\n        margin-top: 0;\n        margin-bottom: 0;\n        font-size: 1.2rem;\n        color: #696969;\n    }\n\n    .description {\n        font-size: 1.5rem;\n        color: #696969;\n    }\n\n    .leftIndent {\n        margin-left: 40px;\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Task.vue","<template>\n    <div>\n        <div>\n            <legend>content</legend>\n            <textarea v-resize-on-insert v-model=\"task.content\"></textarea>\n\n            <div style=\"padding-top: 15px;\">\n                description\n                <textarea v-resize-on-insert v-model=\"task.description\"></textarea>\n            </div>\n\n            <tags\n                v-if=\"tags.length > 0\"\n                :tags=\"tags\"\n            >\n            </tags>\n        </div>\n\n        <br/>\n\n        <div>\n            <span class=\"bottomInputContainer\">\n                <span class=\"inputCol\">\n                    <span>\n                        complete <input type=\"checkbox\" v-model=\"task.complete\">\n                    </span>\n                    <span>\n                        <a :href=\"taskLink\">\n                            link\n                        </a>\n                        <textarea v-resize-on-insert v-model=\"task.link\"></textarea>\n                    </span>\n                    \n                </span>\n\n                <span class=\"inputCol\">\n                    <span>\n                        bold <input type=\"checkbox\" v-model=\"task.bold\">\n                    </span>\n\n                    <span>\n                        author <textarea v-resize-on-insert v-model=\"task.author\"></textarea>\n                    </span>\n                </span>\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {mapGetters, mapMutations} from \"vuex\";\n\n    export default {\n        name: \"detailedTask\",\n        props: [\"taskID\"],\n        data() {\n            return {\n                //all task's properties must be added here, so they are reactive\n                task: {\n                    id: 0,\n                    content: \"\",\n                    description: \"\",\n                    complete: false,\n                    author: \"\",\n                    link: \"\",\n                    tasks: [],\n                    bold: false\n                }\n            }\n        },\n        methods: {\n            ...mapMutations([\n                \"setTask\"\n            ]),\n            goHome() {\n                this.$root.$emit(\"change-component-event\", \"home\");\n            }\n        },\n        computed: {\n            ...mapGetters([\n                \"taskByID\",\n                \"tagsInTask\"\n            ]),\n            taskLink() {\n                if (this.task.link.length > 0) {\n                    return this.task.link;\n                }\n                return \"#\";\n            },\n            tags() {\n                return this.tagsInTask(this.task);\n            }\n        },\n        watch: {\n            task: {\n                handler: function (newTask) {\n                    if (this.shouldUpdateTask) {\n                        this.setTask(newTask);\n                    }\n                },\n                deep: true\n            },\n        },\n        created() {\n            this.task = this.taskByID(this.taskID);\n            this.shouldUpdateTask = true;\n        },\n    }\n</script>\n\n<style scoped>\n    .bottomInputContainer {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n    }\n\n    .inputCol {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        align-items: flex-start;\n        max-width: 50%;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/DetailedTask.vue","<template>\n  \n  <transition name=\"modal\">\n    <div>\n\n      <!-- the modal mask can't be a parent of the model, because it would above it then -->\n      <div @click=\"$emit('close')\" class=\"modal-mask\">\n      </div>\n      <div class=\"modal-wrapper\">\n        <div class=\"modal-container\">\n          <div class=\"modal-header\">\n            <slot name=\"header\">\n            </slot>\n          </div>\n          <div class=\"separator\"></div>\n          <div class=\"modal-body\">\n            <slot name=\"body\">\n              default body\n            </slot>\n          </div>\n          <div class=\"separator\"></div>\n          <div class=\"modal-footer\">\n            <slot name=\"footer\">\n              &#8203\n              <button class=\"modal-default-button\" @click=\"$emit('close')\">\n                OK\n              </button>\n            </slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n\n</template>\n\n<script>\n    export default {\n        name: 'modal'\n    };\n</script>\n\n<style scoped>\n  .modal-mask {\n    position: fixed;\n    overflow: auto;\n    z-index: 3;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, .5);\n    \n    transition: opacity .3s ease;\n  }\n\n.modal-wrapper {\n  position: fixed;\n  top: 10%;\n  vertical-align: middle;\n  z-index: 100;\n\n  /* centers vertically */\n  left: 25%;\n  transform: translateX(-12.5%);\n}\n\n.modal-container {\n  min-width: 25vw;\n  max-width: 62vw;\n  margin: 0px auto;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, .33);\n  transition: all .3s ease;\n}\n\n.modal-header h3 {\n  margin-top: 0;\n  color: #42b983;\n}\n\n.modal-body {\n  margin: 20px 0;\n  max-width: 100%;\n}\n\n.modal-default-button {\n  float: right;\n}\n\n.modal-enter {\n  opacity: 0;\n}\n\n.modal-leave-active {\n  opacity: 0;\n}\n\n.modal-enter .modal-container,\n.modal-leave-active .modal-container {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Modal.vue","import Vue from 'vue';\n\nimport App from './App.vue';\n\nimport Tasks from \"./components/Tasks.vue\";\nimport Tags from \"./components/Tags.vue\";\nimport Task from \"./components/Task.vue\";\nimport Modal from \"./components/Modal.vue\";\n\n//imported so that we get the array functions\nimport {extract, cloneAndModify} from \"./base/useful_functions.js\";\n\nVue.component(\"tasks\", Tasks);\nVue.component(\"tags\", Tags);\nVue.component(\"task\", Task);\nVue.component(\"modal\", Modal);\n\n// register a global custom directive called `v-resize-on-insert` that resizes an element when inserted into the DOM\nVue.directive('resize-on-insert', {\n  inserted: function (el) {\n    Stretchy.resize(el);\n  }\n});\n\nnew Vue(App);\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 24\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0eb9df51\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0eb9df51\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 25\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js?minimize!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0eb9df51\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5e30dcf0\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0eb9df51\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 26\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":root{--link-colour:#42b983;--separator-colour:#d1d1d1}body.noscroll{overflow:hidden}a{color:var(--link-colour);text-decoration:none;cursor:pointer}a:hover{color:#982c61;border-bottom:2px solid #4a4a4a}button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{background-color:var(--link-colour);border-color:var(--link-colour);color:#fff}input[type=search]::-webkit-search-cancel-button{display:none}.searchBoxWrapper{display:inline-flex;align-items:center}.inputBox{display:block;margin:10px 0;padding:10px;min-width:200px;min-height:42px}.clearButton{margin-left:-25px}.selected{color:#982c61}.separator{background-color:var(--separator-colour);height:1px;margin:10px 0}.fade-enter-active,.fade-leave-active{transition:opacity .2s}.fade-enter,.fade-leave-to{opacity:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0eb9df51\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 27\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 28\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f7e426a0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f7e426a0\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home.vue\n// module id = 29\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f7e426a0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Home.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"29dc9e16\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-f7e426a0\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Home.vue\n// module id = 30\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#home{font-family:Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#2c3e50}#topRight{position:absolute;top:1%;right:1%;min-width:275px;max-width:275px;padding:0 0 10px 10px;border:1px solid var(--separator-colour);opacity:.1}#topRight:hover{opacity:1}#topRightButtons{display:flex;justify-content:flex-end;margin-bottom:10px}.topRightButton{padding:6px 10px;margin-bottom:-1px;margin-right:-1px;border:1px solid #ccc;cursor:pointer;background:#f0f0f0;color:#34495e}.bottomRightButton{display:flex;align-items:center;justify-content:center;position:absolute;bottom:25%;right:22%;width:30px;height:30px;border-radius:100%;padding:10px;cursor:pointer;background-color:#f44336;background:#f44336;border:none;outline:none;color:#fff;opacity:.5;font-size:36px;box-shadow:6px 6px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.bottomRightButton:hover{opacity:1;box-shadow:6px 6px 6px rgba(0,0,0,.32),0 3px 6px rgba(0,0,0,.46)}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-f7e426a0\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Home.vue\n// module id = 31\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0de64cd4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Settings.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Settings.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Settings.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0de64cd4\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Settings.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0de64cd4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Settings.vue\n// module id = 32\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0de64cd4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Settings.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"37b9771a\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0de64cd4\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Settings.vue\n// module id = 33\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#settings[data-v-0de64cd4]{padding:0 5px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0de64cd4\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Settings.vue\n// module id = 34\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"settings\"}},[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedShowChildren),expression:\"computedShowChildren\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.computedShowChildren)?_vm._i(_vm.computedShowChildren,null)>-1:(_vm.computedShowChildren)},on:{\"change\":function($event){var $$a=_vm.computedShowChildren,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.computedShowChildren=$$a.concat([$$v]))}else{$$i>-1&&(_vm.computedShowChildren=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.computedShowChildren=$$c}}}}),_vm._v(\"\\n        show children\\n    \")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n    storage method\\n    \"),_c('label',[_vm._v(\"\\n        localStorage\\n        \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedStorageMethod),expression:\"computedStorageMethod\"}],attrs:{\"type\":\"radio\",\"value\":\"localStorage\"},domProps:{\"checked\":_vm._q(_vm.computedStorageMethod,\"localStorage\")},on:{\"change\":function($event){_vm.computedStorageMethod=\"localStorage\"}}})]),_vm._v(\" \"),_c('label',[_vm._v(\"\\n        firebase\\n        \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedStorageMethod),expression:\"computedStorageMethod\"}],attrs:{\"type\":\"radio\",\"value\":\"firebase\"},domProps:{\"checked\":_vm._q(_vm.computedStorageMethod,\"firebase\")},on:{\"change\":function($event){_vm.computedStorageMethod=\"firebase\"}}})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0de64cd4\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Settings.vue\n// module id = 35\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-52a62c4a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Clipboard.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Clipboard.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Clipboard.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-52a62c4a\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Clipboard.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-52a62c4a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Clipboard.vue\n// module id = 36\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-52a62c4a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Clipboard.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"6987a971\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-52a62c4a\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Clipboard.vue\n// module id = 37\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-52a62c4a\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Clipboard.vue\n// module id = 38\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.clipboardNotEmpty)?_c('div',[_c('p',{staticStyle:{\"margin\":\"0\"}},[_vm._v(_vm._s(this.clipboard)+\": \"+_vm._s(_vm.taskContent))]),_vm._v(\" \"),_c('span',[_c('b',{staticStyle:{\"display\":\"inline\"}},[_vm._v(\"mode: \"+_vm._s(this.clipboardMode))]),_vm._v(\" \"),_c('button',{staticClass:\"btn\",staticStyle:{\"float\":\"right\"},on:{\"click\":function($event){_vm.setClipboard(null); _vm.setCurrentTopRightTab('settings')}}},[_vm._v(\"x\\n        \")])])]):_vm._e()}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-52a62c4a\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Clipboard.vue\n// module id = 39\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4d54eec3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Firebase.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Firebase.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Firebase.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4d54eec3\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Firebase.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4d54eec3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Firebase.vue\n// module id = 40\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4d54eec3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Firebase.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"31a72914\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-4d54eec3\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Firebase.vue\n// module id = 41\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-4d54eec3\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Firebase.vue\n// module id = 42\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('label',[_vm._v(\"\\n        state key\\n        \"),_c('input',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.computedFirebaseStateKey),expression:\"computedFirebaseStateKey\"}],staticStyle:{\"min-width\":\"125px\"},attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.computedFirebaseStateKey)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.computedFirebaseStateKey=$event.target.value}}})]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.initialiseTasks}},[_vm._v(\"load tasks\")]),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.saveStateToFirebase}},[_vm._v(\"save tasks\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4d54eec3\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Firebase.vue\n// module id = 43\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"home\"}},[_c('header',{staticStyle:{\"display\":\"inline-block\"}},[_c('h1',[_vm._v(\"Home\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newTask),expression:\"newTask\"}],ref:\"newTaskInput\",staticClass:\"inputBox\",attrs:{\"type\":\"search\",\"placeholder\":\"New task\"},domProps:{\"value\":(_vm.newTask)},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.addTaskFromInput($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.newTask=$event.target.value}}}),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"searchBoxWrapper\",on:{\"mouseover\":function($event){_vm.showClearButton = true},\"mouseleave\":function($event){_vm.showClearButton = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.computedSearchTerm),expression:\"computedSearchTerm\"}],ref:\"searchInput\",staticClass:\"inputBox\",attrs:{\"type\":\"search\",\"placeholder\":\"Search\"},domProps:{\"value\":(_vm.computedSearchTerm)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.computedSearchTerm=$event.target.value}}}),_vm._v(\" \"),(_vm.showClearButton)?_c('a',{staticClass:\"clearButton\",on:{\"click\":function($event){_vm.computedSearchTerm = ''}}},[_vm._v(\"x\")]):_vm._e()])]),_vm._v(\" \"),_c('span',[_c('a',{class:{ selected: _vm.localVisibility === 'all' },on:{\"click\":function($event){_vm.localVisibility = 'all'}}},[_vm._v(\"all\")]),_vm._v(\" \"),_c('a',{class:{ selected: _vm.localVisibility === 'active' },on:{\"click\":function($event){_vm.localVisibility = 'active'}}},[_vm._v(\"active\")]),_vm._v(\" \"),_c('a',{class:{ selected: _vm.localVisibility === 'completed' },on:{\"click\":function($event){_vm.localVisibility = 'completed'}}},[_vm._v(\"completed\")])]),_vm._v(\" \"),_c('tags',{attrs:{\"tags\":_vm.tags}}),_vm._v(\" \"),_c('div',{staticClass:\"separator\"})],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"topRight\"}},[_c('div',{attrs:{\"id\":\"topRightButtons\"}},[_c('button',{staticClass:\"topRightButton\",on:{\"click\":function($event){_vm.setCurrentTopRightTab('settings')}}},[_vm._v(\"Settings\\n            \")]),_vm._v(\" \"),(this.clipboard !== null)?_c('button',{staticClass:\"topRightButton\",on:{\"click\":function($event){_vm.setCurrentTopRightTab('clipboard')}}},[_vm._v(\"Clipboard\\n            \")]):_vm._e(),_vm._v(\" \"),(this.storageMethod === 'firebase')?_c('button',{staticClass:\"topRightButton\",on:{\"click\":function($event){_vm.setCurrentTopRightTab('firebase')}}},[_vm._v(\"Firebase\\n            \")]):_vm._e()]),_vm._v(\" \"),_c('div',[_c(_vm.currentTopRightTab,{tag:\"component\"})],1)]),_vm._v(\" \"),_c('section',[_c('tasks',{attrs:{\"outerTaskID\":null,\"taskIDs\":_vm.filteredTaskIDs}}),_vm._v(\" \"),(_vm.localVisibility !== 'completed')?_c('p',{staticStyle:{\"color\":\"#999\"}},[_vm._v(_vm._s(_vm.numberOfTasksRemaining)+\" \"+_vm._s(_vm._f(\"pluralise\")(_vm.numberOfTasksRemaining))+\" left\")]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"bottomRightButton\",on:{\"click\":function($event){_vm.addTask()}}},[_vm._v(\"+\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f7e426a0\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n// module id = 44\n// module chunks = 0","import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nimport STORAGE_KEY from \"./key.js\";\nimport storageModule from \"./modules/storage.js\";\nimport tasksModule from \"./modules/tasks.js\";\nimport taskFilteringModule from \"./modules/taskFiltering.js\";\nimport settingsModule from \"./modules/settings.js\";\nimport clipboardModule from \"./modules/clipboard.js\";\nimport topRightTabsModule from \"./modules/topRightTabs.js\";\n\nimport debounce from \"lodash.debounce\";\nimport * as process from \"babel-core/lib/transformation/file/options/config\";\n\nVue.use(Vuex);\n\nconst store = new Vuex.Store({\n    strict: process.env.NODE_ENV !== 'production',\n    modules: {\n        storageModule,\n        tasksModule,\n        taskFilteringModule,\n        settingsModule,\n        clipboardModule,\n        topRightTabsModule\n    }\n});\n\n//this is only called at maximum three times a second\nstore.subscribe(\n    debounce((mutation, state) => {\n        let storageObjectBuilder = () =>  ({\n                tasks: Array.from(state.tasksModule.tasks.entries()),\n                rootTaskIDs: state.tasksModule.rootTaskIDs,\n                taskStorageUID: state.tasksModule.taskStorageUID,\n                settings: {\n                    storageMethod: state.settingsModule.storageMethod,\n                    firebaseStateKey: state.settingsModule.firebaseStateKey\n                }\n        });        \n\n        const storageMethodIsLocalStorage = state.settingsModule.storageMethod === \"localStorage\";\n        const mutationIsTasksChange = [\"setTask\", \"deleteTask\", \"addTaskToTask\", \"addTaskToRoot\"]\n                .indexOf(mutation.type) > -1;\n        const mutationIsStorageChange = [\"setStorageMethod\", \"setFirebaseStateKey\"]\n            .indexOf(mutation.type) > -1;\n        if ((storageMethodIsLocalStorage && mutationIsTasksChange) || mutationIsStorageChange) {\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(storageObjectBuilder()));\n        }\n    }, 300)\n);\n\nexport default store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/store.js","const state = {\n};\n\nconst getters = {\n};\n\nconst mutations = {\n};\n\nconst actions = {\n    initialiseApp(context) {\n        context.dispatch(\"initialiseSettings\", null, { root: true });\n        context.dispatch(\"initialiseTasks\", null, { root: true });\n    }\n}\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/storage.js","import {getTagsInString} from \"../../base/task.js\";\nimport STORAGE_KEY from \"../key.js\";\nimport firebaseDB from \"../../firebaseConfig.js\";\n\nconst state = {\n    tasks: new Map(),\n    tasksChangeTracker: 1,\n    rootTaskIDs: [],\n    taskStorageUID: 0,\n\n    showInnerTasks: true\n};\n\nconst getters = {\n    tasks(state, gettersArg) {\n        return state.tasksChangeTracker && state.tasks;\n    },\n    tasksAsArray(state, gettersArg) {\n        return Array.from(gettersArg.tasks.values());\n    },\n    taskByID: (state, gettersArg) => id => {\n        return gettersArg.tasks.get(id);\n    },\n    hasTask: (state, gettersArg) => id => {\n        return gettersArg.tasks.has(id);\n    },\n    tasksInTask: (state, gettersArg) => id => {\n        if (!gettersArg.hasTask(id)) {\n            return [];\n        }\n        let thisTask = gettersArg.taskByID(id);\n        return thisTask.tasks.map(taskID => gettersArg.taskByID(taskID));\n    },\n\n    rootTaskIDs(state, gettersArg) {\n        return state.rootTaskIDs;\n    },\n    rootTasks(state, gettersArg) {\n        return gettersArg.rootTaskIDs.map(id => gettersArg.taskByID(id));\n    },\n\n    tagsInTask: (state, gettersArg) => task => {\n        let tagsInContent = getTagsInString(task.content);\n        let tagsInDescription = getTagsInString(task.description);\n        let tagsToReturn = tagsInContent.concat(tagsInDescription);\n        if ((typeof task.tasks !== \"undefined\") && task.tasks.length > 0) {\n            let innerTasks = gettersArg.tagsInTasks(task.tasks);\n            tagsToReturn = tagsToReturn.concat(innerTasks);\n        }\n        return tagsToReturn.unique();\n    },\n\n    tagsInTasks: (state, gettersArg) => (tasks) => {\n        return tasks.map(taskID => {\n            let innerTask = gettersArg.taskByID(taskID);\n            return gettersArg.tagsInTask(innerTask);\n        }).flatten().unique();\n    },\n\n    taskStorageUID(state, gettersArg) {\n        return state.taskStorageUID;\n    },\n\n    showInnerTasks(state, gettersArg) {\n        return state.showInnerTasks;\n    }\n};\n\nconst mutations = {\n    incrementTaskChangeTracker(state) {\n        state.tasksChangeTracker += 1;\n    },\n\n    initialiseTasksWithObject(state, storageObjectString) {\n        if (! storageObjectString) {\n            return;\n        }\n        let storageObject = JSON.parse(storageObjectString);\n\n        if (storageObject.tasks) {\n            state.tasks = new Map(storageObject.tasks);\n        }\n\n        if (storageObject.rootTaskIDs) {\n            state.rootTaskIDs = storageObject.rootTaskIDs;\n        }\n\n        if (storageObject.taskStorageUID) {\n            state.taskStorageUID = storageObject.taskStorageUID;\n        }\n    },\n\n    setTask(state, task) {\n        let taskID = task[\"id\"];\n        state.tasks.set(taskID, task);\n        mutations.incrementTaskChangeTracker(state);\n    },\n\n    //this is how you make a recursive function inside an object\n    deleteTask: function recursiveRemove(state, taskID) {\n\n        //removes any tasks that are inside the current one; they wouldn't be accessible after deletion anyway\n        let task = state.tasks.get(taskID);\n        task.tasks.map(innerTaskID => recursiveRemove(state, innerTaskID));\n\n        state.tasks.delete(taskID);\n\n        //we might need to delete the task ID from the root too\n        mutations.removeTaskFromRoot(state, taskID)\n        mutations.incrementTaskChangeTracker(state);\n    },\n\n    removeTaskFromRoot(state, taskID) {\n        let rootTaskIDIndex = state.rootTaskIDs.indexOf(taskID);\n        if (rootTaskIDIndex > -1) {\n            state.rootTaskIDs.splice(rootTaskIDIndex, 1);\n        }\n    },\n    //only removes the taskID from the tasks array - doesn't delete the actual task\n    removeTaskFromParentTask(state, {parentTaskID, innerTaskID}) {\n        let parentTask = state.tasks.get(parentTaskID);\n        let parentTaskIDIndex = parentTask.tasks.indexOf(innerTaskID);\n        if (parentTaskIDIndex > -1) {\n            parentTask.tasks.splice(parentTaskIDIndex, 1);\n        }\n        mutations.setTask(state, parentTask);\n    },\n\n    addTaskToTask(state, {taskID, newTaskID}) {\n        let task = state.tasks.get(taskID);\n        task.tasks.push(newTaskID);\n        mutations.incrementTaskChangeTracker(state);\n    },\n    addTaskToRoot(state, taskID) {\n        state.rootTaskIDs.push(taskID);\n    },\n\n    incrementTaskStorageUID: (state) => {\n        state.taskStorageUID++;\n    },\n\n    changeShowInnerTasks: (state, newShowInnerTasks) => {\n        state.showInnerTasks = newShowInnerTasks;\n    }\n};\n\nconst actions = {\n    initialiseTasks(context) {\n        if (context.getters.storageMethod === \"localStorage\") {\n            let storageObjectString = localStorage.getItem(STORAGE_KEY);\n            context.commit(\"initialiseTasksWithObject\", storageObjectString);\n            context.commit(\"incrementTaskChangeTracker\");\n        } else {\n            let stateKey = context.getters.firebaseStateKey;\n            firebaseDB.ref(\"states/\" + stateKey).once(\"value\").then(\n                (snapshot) => {\n                    context.commit(\"initialiseTasksWithObject\", snapshot.val())\n                    context.commit(\"incrementTaskChangeTracker\");\n            });\n        }\n    },\n    saveStateToFirebase(context) {\n        let stateKey = context.getters.firebaseStateKey;\n        let storageObject = {\n            tasks: Array.from(context.getters.tasks.entries()),\n            rootTaskIDs: context.getters.rootTaskIDs,\n            taskStorageUID: context.getters.taskStorageUID\n        };\n        //have to stringify it because firebase doesn't store empty arrays\n        firebaseDB.ref(\"states/\" + stateKey).set(JSON.stringify(storageObject));\n    }\n}\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/tasks.js","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nvar config = {\n    apiKey: \"AIzaSyBvzMqwJsz5txI3742d1k2EQ0QtUCKF2KA\",\n    authDomain: \"flowy-7f42c.firebaseapp.com\",\n    databaseURL: \"https://flowy-7f42c.firebaseio.com\",\n    projectId: \"flowy-7f42c\",\n    storageBucket: \"flowy-7f42c.appspot.com\",\n    messagingSenderId: \"406366096460\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase.database();\n\n\n// WEBPACK FOOTER //\n// ./src/firebaseConfig.js","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/app/dist/index.cjs.js\n// module id = 49\n// module chunks = 0","import 'whatwg-fetch';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\nvar META = _uid('meta');\n\n\nvar setDesc = _objectDp.f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !_fails(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n\tf: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function (name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\n\nvar _enumKeys = function (it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n\tf: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n\tf: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n\tf: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\n\n\n\nvar META = _meta.KEY;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function () { return dP$1(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return _has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/index.esm.js\n// module id = 50\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 51\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.startsWith('?')) {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/index.cjs.js\n// module id = 53\n// module chunks = 0","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/logger/dist/index.esm.js\n// module id = 54\n// module chunks = 0","const state = {\n    searchTerm: \"\",\n    visibility: \"all\"\n};\n\nconst getters = {\n    searchTerm: (state) => {\n        return state.searchTerm;\n    },\n    visibility: (state) => {\n        return state.visibility;\n    },\n\n    shownTaskIDs(state, gettersArg) {\n        let currentSearchTerm = gettersArg.searchTerm && gettersArg.searchTerm.trim();\n\n        let shouldShowInnerTasks = (gettersArg.visibility === \"all\" && currentSearchTerm.length === 0);\n        if (shouldShowInnerTasks) {\n            return gettersArg.rootTasks;\n        }\n\n        if (!currentSearchTerm) {\n            return task.filters[gettersArg.visibility](gettersArg.tasksAsArray);\n        }\n\n        let tasksContainingSearchTerm = gettersArg.tasksAsArray.filter(task =>\n            task.content.toLowerCase().indexOf(currentSearchTerm.toLowerCase()) > -1\n        );\n        return task.filters[gettersArg.visibility](tasksContainingSearchTerm);\n    }\n};\n\nconst mutations = {\n    changeSearchTerm: (state, newTerm) => {\n        if (state.searchTerm !== newTerm) {\n            state.searchTerm = newTerm;\n        }\n    },\n    changeVisibility: (state, newVisibility) => {\n        if (state.visibility !== newVisibility) {\n            state.visibility = newVisibility;\n        }\n    },\n};\n\nexport default {\n    state,\n    getters,\n    mutations\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/taskFiltering.js","import STORAGE_KEY from \"../key.js\";\n\nconst state = {\n    showChildren: true,\n    storageMethod: \"localStorage\",\n    firebaseStateKey: \"test\"\n};\n\nconst getters = {\n    showChildren(state, gettersArg) {\n        return state.showChildren;\n    },\n    storageMethod(state, gettersArg) {\n        return state.storageMethod;\n    },\n    firebaseStateKey(state, gettersArg) {\n        return state.firebaseStateKey;\n    }\n};\n\nconst mutations = {\n    setShowChildren: (state, newValue) => {\n        state.showChildren = newValue;\n    },\n    setStorageMethod: (state, newValue) => {\n        state.storageMethod = newValue;\n    },\n    setFirebaseStateKey: (state, newValue) => {\n        state.firebaseStateKey = newValue;\n    },\n\n    initialiseSettingsWithObject: (state, storageObjectString) => {\n        if (! storageObjectString) {\n            return;\n        }\n        let storageObject = JSON.parse(storageObjectString);\n\n        if (storageObject.settings) {\n            state.storageMethod = storageObject.settings.storageMethod;\n            state.firebaseStateKey = storageObject.settings.firebaseStateKey;\n        }\n    },\n};\n\nconst actions = {\n    initialiseSettings(context) {\n        let storageObjectString = localStorage.getItem(STORAGE_KEY);\n        context.commit(\"initialiseSettingsWithObject\", storageObjectString);\n    },\n}\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/settings.js","const state = {\n    clipboard: null,\n    clipboardMode: \"copy\"\n};\n\nconst getters = {\n    clipboard(state, gettersArg) {\n        return state.clipboard;\n    },\n    clipboardMode(state, gettersArg) {\n        return state.clipboardMode;\n    }\n};\n\nconst mutations = {\n    setClipboard: (state, newValue) => {\n        state.clipboard = newValue;\n    },\n    setClipboardMode: (state, newValue) => {\n        state.clipboardMode = newValue;\n    }\n};\n\nexport default {\n    state,\n    getters,\n    mutations\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/clipboard.js","const state = {\n    currentTopRightTab: \"settings\"\n};\n\nconst getters = {\n    currentTopRightTab(state, gettersArg) {\n        return state.currentTopRightTab;\n    }\n};\n\nconst mutations = {\n    setCurrentTopRightTab: (state, newValue) => {\n        state.currentTopRightTab = newValue;\n    }\n};\n\nexport default {\n    state,\n    getters,\n    mutations\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/topRightTabs.js","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.debounce/index.js\n// module id = 59\n// module chunks = 0","\"use strict\";\n\nmodule.exports = {\n  filename: {\n    type: \"filename\",\n    description: \"filename to use when reading from stdin - this will be used in source-maps, errors etc\",\n    default: \"unknown\",\n    shorthand: \"f\"\n  },\n\n  filenameRelative: {\n    hidden: true,\n    type: \"string\"\n  },\n\n  inputSourceMap: {\n    hidden: true\n  },\n\n  env: {\n    hidden: true,\n    default: {}\n  },\n\n  mode: {\n    description: \"\",\n    hidden: true\n  },\n\n  retainLines: {\n    type: \"boolean\",\n    default: false,\n    description: \"retain line numbers - will result in really ugly code\"\n  },\n\n  highlightCode: {\n    description: \"enable/disable ANSI syntax highlighting of code frames (on by default)\",\n    type: \"boolean\",\n    default: true\n  },\n\n  suppressDeprecationMessages: {\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n\n  presets: {\n    type: \"list\",\n    description: \"\",\n    default: []\n  },\n\n  plugins: {\n    type: \"list\",\n    default: [],\n    description: \"\"\n  },\n\n  ignore: {\n    type: \"list\",\n    description: \"list of glob paths to **not** compile\",\n    default: []\n  },\n\n  only: {\n    type: \"list\",\n    description: \"list of glob paths to **only** compile\"\n  },\n\n  code: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  metadata: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  ast: {\n    hidden: true,\n    default: true,\n    type: \"boolean\"\n  },\n\n  extends: {\n    type: \"string\",\n    hidden: true\n  },\n\n  comments: {\n    type: \"boolean\",\n    default: true,\n    description: \"write comments to generated output (true by default)\"\n  },\n\n  shouldPrintComment: {\n    hidden: true,\n    description: \"optional callback to control whether a comment should be inserted, when this is used the comments option is ignored\"\n  },\n\n  wrapPluginVisitorMethod: {\n    hidden: true,\n    description: \"optional callback to wrap all visitor methods\"\n  },\n\n  compact: {\n    type: \"booleanString\",\n    default: \"auto\",\n    description: \"do not include superfluous whitespace characters and line terminators [true|false|auto]\"\n  },\n\n  minified: {\n    type: \"boolean\",\n    default: false,\n    description: \"save as much bytes when printing [true|false]\"\n  },\n\n  sourceMap: {\n    alias: \"sourceMaps\",\n    hidden: true\n  },\n\n  sourceMaps: {\n    type: \"booleanString\",\n    description: \"[true|false|inline]\",\n    default: false,\n    shorthand: \"s\"\n  },\n\n  sourceMapTarget: {\n    type: \"string\",\n    description: \"set `file` on returned source map\"\n  },\n\n  sourceFileName: {\n    type: \"string\",\n    description: \"set `sources[0]` on returned source map\"\n  },\n\n  sourceRoot: {\n    type: \"filename\",\n    description: \"the root from which all sources are relative\"\n  },\n\n  babelrc: {\n    description: \"Whether or not to look up .babelrc and .babelignore files\",\n    type: \"boolean\",\n    default: true\n  },\n\n  sourceType: {\n    description: \"\",\n    default: \"module\"\n  },\n\n  auxiliaryCommentBefore: {\n    type: \"string\",\n    description: \"print a comment before any injected non-user code\"\n  },\n\n  auxiliaryCommentAfter: {\n    type: \"string\",\n    description: \"print a comment after any injected non-user code\"\n  },\n\n  resolveModuleSource: {\n    hidden: true\n  },\n\n  getModuleId: {\n    hidden: true\n  },\n\n  moduleRoot: {\n    type: \"filename\",\n    description: \"optional prefix for the AMD module formatter that will be prepend to the filename on module definitions\"\n  },\n\n  moduleIds: {\n    type: \"boolean\",\n    default: false,\n    shorthand: \"M\",\n    description: \"insert an explicit id for modules\"\n  },\n\n  moduleId: {\n    description: \"specify a custom name for module ids\",\n    type: \"string\"\n  },\n\n  passPerPreset: {\n    description: \"Whether to spawn a traversal pass per a preset. By default all presets are merged.\",\n    type: \"boolean\",\n    default: false,\n    hidden: true\n  },\n\n  parserOpts: {\n    description: \"Options to pass into the parser, or to change parsers (parserOpts.parser)\",\n    default: false\n  },\n\n  generatorOpts: {\n    description: \"Options to pass into the generator, or to change generators (generatorOpts.generator)\",\n    default: false\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-core/lib/transformation/file/options/config.js\n// module id = 60\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('home')}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0eb9df51\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 61\n// module chunks = 0","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tasks.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tasks.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-635afb59\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Tasks.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Tasks.vue\n// module id = 62\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tasksList\"},_vm._l((this.taskIDs),function(taskID){return _c('task',{key:taskID,attrs:{\"taskID\":taskID},on:{\"deleteTask\":_vm.deleteInnerTask}})}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-635afb59\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Tasks.vue\n// module id = 63\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8fde0ba8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Tags.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tags.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tags.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8fde0ba8\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Tags.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8fde0ba8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Tags.vue\n// module id = 64\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8fde0ba8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Tags.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"bf0fa75a\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-8fde0ba8\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Tags.vue\n// module id = 65\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tags[data-v-8fde0ba8]{min-height:24px}.tagLink[data-v-8fde0ba8]{color:#999;margin:0 5px 0 0}.tagLink[data-v-8fde0ba8]:hover{background-color:#f2f2f2;color:#982c61;border-bottom:2px solid #4a4a4a}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-8fde0ba8\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Tags.vue\n// module id = 66\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tags\"},[_vm._v(\" ​\\n    \"),_vm._l((this.tags),function(tag){return _c('a',{staticClass:\"tagLink\",on:{\"click\":function($event){$event.preventDefault();return _vm.updateSearchTerm($event)}}},[_vm._v(\"\\n        \"+_vm._s(tag)+\"\\n    \")])})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8fde0ba8\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Tags.vue\n// module id = 67\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e417b6fc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Task.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Task.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Task.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e417b6fc\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Task.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e417b6fc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Task.vue\n// module id = 68\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e417b6fc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Task.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"022a59f9\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-e417b6fc\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Task.vue\n// module id = 69\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".taskFlexbox[data-v-e417b6fc]{display:flex;margin:10px 0}.task[data-v-e417b6fc]{display:flex;flex-direction:column;justify-content:flex-start;margin:5px 0 0 33px}.completed[data-v-e417b6fc]{opacity:.4;text-decoration:line-through solid currentcolor}.showHide[data-v-e417b6fc]{min-width:25px;max-width:25px;padding:4px;margin-right:-33px;flex-grow:1;cursor:pointer;text-align:center;font-weight:lighter;color:#999;background-color:#f6f6f6;border-radius:8px}.showHide[data-v-e417b6fc]:hover{color:#fff;background-color:var(--link-colour);transition:background-color .2s ease 0s}.contextMenuLocation[data-v-e417b6fc]{position:absolute;z-index:2;height:0}.contextMenu[data-v-e417b6fc]{display:flex;flex-direction:column;min-height:58px;min-width:80px;padding:5px;margin:16px 0 10px -38px;background:#f6f6f6;border:1px solid #bbb;border-radius:4px}.mainTaskContainer[data-v-e417b6fc]{display:flex;align-items:center}.bullet[data-v-e417b6fc]{height:32px;width:32px;background-color:transparent;border-radius:32px;cursor:pointer}.bullet[data-v-e417b6fc]:hover{background-color:#aaa}.taskText[data-v-e417b6fc],input[type=text][data-v-e417b6fc],textarea[data-v-e417b6fc]{display:inline;padding:6px 10px 0;margin:0 0 3px 3px;line-height:20px;min-height:11px;min-width:375px}.btn[data-v-e417b6fc]{min-height:32px;margin:0 10px;font-size:18px;color:#ddd;background-color:#f6f6f6;border-color:#f6f6f6;border-radius:8px;text-decoration:none}.btn[data-v-e417b6fc]:hover{background-color:var(--link-colour);border:1px solid var(--link-colour);transition:background-color .2s ease 0s;color:#fff}.dangerBtn[data-v-e417b6fc]:hover{background-color:#e00808;border:1px solid #e00808}.bold[data-v-e417b6fc]{font-weight:700}.smallText[data-v-e417b6fc]{display:inline;margin-top:0;margin-bottom:0;font-size:1.2rem;color:#696969}.description[data-v-e417b6fc]{font-size:1.5rem;color:#696969}.leftIndent[data-v-e417b6fc]{margin-left:40px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-e417b6fc\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Task.vue\n// module id = 70\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a3c60d2c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DetailedTask.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DetailedTask.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DetailedTask.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a3c60d2c\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./DetailedTask.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a3c60d2c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/DetailedTask.vue\n// module id = 71\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a3c60d2c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DetailedTask.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7e6f513d\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-a3c60d2c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/DetailedTask.vue\n// module id = 72\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bottomInputContainer[data-v-a3c60d2c]{display:flex;flex-direction:row;justify-content:space-between}.inputCol[data-v-a3c60d2c]{display:flex;flex-direction:column;justify-content:space-around;align-items:flex-start;max-width:50%}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-a3c60d2c\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/DetailedTask.vue\n// module id = 73\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('legend',[_vm._v(\"content\")]),_vm._v(\" \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.content),expression:\"task.content\"}],domProps:{\"value\":(_vm.task.content)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"content\", $event.target.value)}}}),_vm._v(\" \"),_c('div',{staticStyle:{\"padding-top\":\"15px\"}},[_vm._v(\"\\n            description\\n            \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.description),expression:\"task.description\"}],domProps:{\"value\":(_vm.task.description)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"description\", $event.target.value)}}})]),_vm._v(\" \"),(_vm.tags.length > 0)?_c('tags',{attrs:{\"tags\":_vm.tags}}):_vm._e()],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',[_c('span',{staticClass:\"bottomInputContainer\"},[_c('span',{staticClass:\"inputCol\"},[_c('span',[_vm._v(\"\\n                    complete \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task.complete),expression:\"task.complete\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.task.complete)?_vm._i(_vm.task.complete,null)>-1:(_vm.task.complete)},on:{\"change\":function($event){var $$a=_vm.task.complete,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.task, \"complete\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.task, \"complete\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.task, \"complete\", $$c)}}}})]),_vm._v(\" \"),_c('span',[_c('a',{attrs:{\"href\":_vm.taskLink}},[_vm._v(\"\\n                        link\\n                    \")]),_vm._v(\" \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.link),expression:\"task.link\"}],domProps:{\"value\":(_vm.task.link)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"link\", $event.target.value)}}})])]),_vm._v(\" \"),_c('span',{staticClass:\"inputCol\"},[_c('span',[_vm._v(\"\\n                    bold \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task.bold),expression:\"task.bold\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.task.bold)?_vm._i(_vm.task.bold,null)>-1:(_vm.task.bold)},on:{\"change\":function($event){var $$a=_vm.task.bold,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.task, \"bold\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.task, \"bold\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.task, \"bold\", $$c)}}}})]),_vm._v(\" \"),_c('span',[_vm._v(\"\\n                    author \"),_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.task.author),expression:\"task.author\"}],domProps:{\"value\":(_vm.task.author)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.task, \"author\", $event.target.value)}}})])])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a3c60d2c\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/DetailedTask.vue\n// module id = 74\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"taskFlexbox\"},[(this.shouldShowChildren && _vm.task.tasks.length > 0)?_c('div',{staticClass:\"showHide\",on:{\"click\":function($event){_vm.expandChildrenFlag = ! _vm.expandChildrenFlag}}},[_vm._v(\"\\n        \"+_vm._s(_vm.showHideButtonText)+\"\\n    \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"task\"},[_c('div',{staticClass:\"mainTaskContainer\"},[_c('img',{staticClass:\"bullet\",attrs:{\"src\":require(\"../assets/bullet.svg\")},on:{\"click\":_vm.toggleContextMenu,\"dblclick\":_vm.displayModal}}),_vm._v(\" \"),(_vm.showModal)?_c('modal',{on:{\"close\":_vm.hideModal}},[_c('h3',{staticStyle:{\"margin\":\"0\"},attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Task \"+_vm._s(this.taskID))]),_vm._v(\" \"),_c('detailedTask',{attrs:{\"slot\":\"body\",\"taskID\":_vm.taskID},slot:\"body\"})],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"contextMenuLocation\"},[(_vm.showContextMenu)?_c('div',{staticClass:\"contextMenu\"},[(_vm.task.tasks.length > 0)?_c('a',{on:{\"click\":function($event){_vm.expandChildrenFlag = ! _vm.expandChildrenFlag}}},[_vm._v(\"\\n                        \"+_vm._s(_vm.showHideText)+\"\\n                    \")]):_vm._e(),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.toggleComplete}},[_vm._v(\"Complete\")]),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.bold}},[_vm._v(\"Bold\")]),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.addNewTask(); _vm.toggleContextMenu()}}},[_vm._v(\"Add new child\")]),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.displayModal(); _vm.toggleContextMenu()}}},[_vm._v(\"Edit\")]),_vm._v(\" \"),_c('a',{on:{\"click\":function($event){_vm.deleteTask(); _vm.toggleContextMenu()}}},[_vm._v(\"Delete\")]),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.copyTask}},[_vm._v(\"Copy\")]),_vm._v(\" \"),_c('a',{on:{\"click\":_vm.cutTask}},[_vm._v(\"Cut\")]),_vm._v(\" \"),(this.clipboard != null && this.clipboard !== this.taskID)?_c('a',{on:{\"click\":_vm.pasteInto}},[_vm._v(\"Paste into\")]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('span',{staticStyle:{\"margin-left\":\"5px\"}},[_c('textarea',{directives:[{name:\"resize-on-insert\",rawName:\"v-resize-on-insert\"},{name:\"model\",rawName:\"v-model\",value:(_vm.taskContent),expression:\"taskContent\"}],ref:\"taskInput\",staticClass:\"taskText\",class:{\n                        bold: _vm.task.bold, \n                        completed: _vm.task.complete\n                    },attrs:{\"id\":(\"task-\" + (_vm.task.id) + \"-input\"),\"type\":\"text\"},domProps:{\"value\":(_vm.taskContent)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.taskContent=$event.target.value}}})]),_vm._v(\" \"),_c('button',{staticClass:\"btn\",on:{\"click\":_vm.addNewTask}},[_vm._v(\"+\\n            \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn dangerBtn\",on:{\"click\":_vm.deleteTask}},[_vm._v(\"x\\n            \")])],1),_vm._v(\" \"),_c('div',{class:{completed: _vm.task.complete}},[_c('div',[(_vm.task.description.length > 0)?_c('p',{staticClass:\"description leftIndent\",staticStyle:{\"margin-top\":\"0\",\"margin-bottom\":\"0\"}},[_vm._v(_vm._s(_vm.task.description))]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"leftIndent\"},[(_vm.task.link.length > 0)?_c('a',{attrs:{\"href\":_vm.task.link}},[_vm._v(\"\\n                    link\\n                \")]):_vm._e(),_vm._v(\" \"),(_vm.task.author.length > 0)?_c('p',{staticClass:\"smallText\"},[_vm._v(_vm._s(_vm.task.author)+\"\\n                \")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"leftIndent\"},[(_vm.tags.length > 0)?_c('tags',{attrs:{\"tags\":_vm.tags}}):_vm._e()],1)]),_vm._v(\" \"),(this.shouldShowChildren)?_c('div',[(_vm.expandChildrenFlag)?_c('div',[(_vm.task.tasks.length > 0)?_c('tasks',{staticClass:\"innerTasks\",attrs:{\"outerTaskID\":_vm.task.id,\"taskIDs\":[].concat( _vm.task.tasks )}}):_vm._e()],1):_vm._e(),_vm._v(\" \"),(! _vm.expandChildrenFlag)?_c('div',{staticClass:\"leftIndent\"},[(this.numberOfChildren > 0)?_c('p',{staticClass:\"smallText\"},[_vm._v(_vm._s(this.numberOfChildren)+\" \"+_vm._s(_vm._f(\"pluralise\")(this.numberOfChildren)))]):_vm._e()]):_vm._e()]):_vm._e()])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e417b6fc\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Task.vue\n// module id = 75\n// module chunks = 0","module.exports = __webpack_public_path__ + \"bullet.svg?932fb41d73148fae7d06d25588ae07f2\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/bullet.svg\n// module id = 76\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-114e0502\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Modal.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Modal.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Modal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-114e0502\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Modal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-114e0502\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Modal.vue\n// module id = 77\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-114e0502\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Modal.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"45017c79\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-114e0502\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Modal.vue\n// module id = 78\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".modal-mask[data-v-114e0502]{position:fixed;overflow:auto;z-index:3;top:0;right:0;bottom:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);transition:opacity .3s ease}.modal-wrapper[data-v-114e0502]{position:fixed;top:10%;vertical-align:middle;z-index:100;left:25%;transform:translateX(-12.5%)}.modal-container[data-v-114e0502]{min-width:25vw;max-width:62vw;margin:0 auto;padding:20px 30px;background-color:#fff;border-radius:2px;box-shadow:0 2px 8px rgba(0,0,0,.33);transition:all .3s ease}.modal-header h3[data-v-114e0502]{margin-top:0;color:#42b983}.modal-body[data-v-114e0502]{margin:20px 0;max-width:100%}.modal-default-button[data-v-114e0502]{float:right}.modal-enter[data-v-114e0502],.modal-leave-active[data-v-114e0502]{opacity:0}.modal-enter .modal-container[data-v-114e0502],.modal-leave-active .modal-container[data-v-114e0502]{-webkit-transform:scale(1.1);transform:scale(1.1)}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-114e0502\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Modal.vue\n// module id = 79\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"modal\"}},[_c('div',[_c('div',{staticClass:\"modal-mask\",on:{\"click\":function($event){_vm.$emit('close')}}}),_vm._v(\" \"),_c('div',{staticClass:\"modal-wrapper\"},[_c('div',{staticClass:\"modal-container\"},[_c('div',{staticClass:\"modal-header\"},[_vm._t(\"header\")],2),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('div',{staticClass:\"modal-body\"},[_vm._t(\"body\",[_vm._v(\"\\n            default body\\n          \")])],2),_vm._v(\" \"),_c('div',{staticClass:\"separator\"}),_vm._v(\" \"),_c('div',{staticClass:\"modal-footer\"},[_vm._t(\"footer\",[_vm._v(\"\\n            ​\\n            \"),_c('button',{staticClass:\"modal-default-button\",on:{\"click\":function($event){_vm.$emit('close')}}},[_vm._v(\"\\n              OK\\n            \")])])],2)])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-114e0502\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Modal.vue\n// module id = 80\n// module chunks = 0","export {extract, cloneAndModify};\n\nArray.prototype.unique = function () {\n    return this.map(JSON.stringify).reverse().filter(function (e, i, a) {\n        return a.indexOf(e, i + 1) === -1;\n    }).reverse().map(JSON.parse)\n};\n\nArray.prototype.flatten = function () {\n    return [].concat(...this);\n};\n\nArray.prototype.flattenDeep = function () {\n    return this.reduce((acc, val) => {\n        let isArray = Array.isArray(val);\n        if (isArray) {\n            return acc.concat(val.flattenDeep());\n        }\n        return acc.concat(val);\n    }, [])\n};\n\nArray.prototype.diff = function (a) {\n    return this.filter(function (i) {\n        return a.indexOf(i) < 0;\n    });\n};\n\n// extracts all keys in vs from an object\nfunction extract(obj, vs) {\n    let new_obj = {};\n    vs.forEach((v) => {\n        new_obj[v] = obj[v];\n    });\n    return new_obj;\n}\n\n// clones an object and changes some of its properties\nfunction cloneAndModify(obj, properties) {\n    return Object.assign(JSON.parse(JSON.stringify(obj)), properties);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/base/useful_functions.js"],"sourceRoot":""}